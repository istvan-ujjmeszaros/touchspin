#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Exit on any error
set -e

echo "🐶 Husky pre-commit: Gherkin workflow validation"

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only)

# Check if any source files changed (rebuild devdist if so)
SRC_CHANGED=$(echo "$STAGED_FILES" | grep -E "packages/.*/src/.*\.(ts|tsx|js|jsx)$" || true)
if [ -n "$SRC_CHANGED" ]; then
  echo "📦 Source files changed, rebuilding devdist..."
  yarn build:test || { echo "❌ DevDist build failed"; exit 1; }

  # Stage ALL updated devdist files
  git add packages/*/devdist packages/renderers/*/devdist
  echo "✅ DevDist files rebuilt and staged"
fi

# Check if any helper files changed (regenerate lexicon if so)
HELPER_CHANGED=$(echo "$STAGED_FILES" | grep -E "packages/.*/tests/__shared__/helpers/.*\.(ts|js)$" || true)
if [ -n "$HELPER_CHANGED" ]; then
  echo "📖 Helper docs changed, regenerating Step Lexicon..."
  yarn lexicon:gen

  # Stage the updated lexicon if it exists and changed
  if [ -f "tests/STEP-LEXICON.md" ]; then
    git add tests/STEP-LEXICON.md
    echo "✅ Step Lexicon updated and staged"
  fi
fi

# Check if any spec files or guard script changed (run guard if so)
SPEC_OR_GUARD_CHANGED=$(echo "$STAGED_FILES" | grep -E "\.(spec|guard)\.(ts|tsx|js|mjs)$" || true)
if [ -n "$SPEC_OR_GUARD_CHANGED" ]; then
  echo "🛡️ Spec or guard files changed, running Gherkin guard..."
  yarn test:guard || { echo "❌ Gherkin guard failed"; exit 1; }
  echo "✅ Gherkin guard passed"
fi

# Run guards for test quality
yarn guard:no-src-in-tests || { echo "❌ src-in-tests guard failed"; exit 1; }
yarn guard:no-queryselector || { echo "❌ querySelector guard failed"; exit 1; }
yarn guard:no-page-locator || { echo "❌ page.locator guard failed"; exit 1; }

echo "✅ Pre-commit validation complete"
