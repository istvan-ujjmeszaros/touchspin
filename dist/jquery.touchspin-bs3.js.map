{"version":3,"file":"jquery.touchspin-bs3.js","sources":["../packages/core/src/AbstractRenderer.js","../packages/core/src/RawRenderer.js","../packages/core/src/index.js","../packages/renderers/bootstrap3/src/Bootstrap3Renderer.js","../src/entries/jquery-bs3.js"],"sourcesContent":["/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n * \n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n    \n    // Legacy compatibility (transitional)\n    this.$ = typeof $ !== 'undefined' ? $ : null;\n    this.originalinput = this.$ ? this.$(inputEl) : null;\n    this.container = null;\n    this.elements = null;\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() { \n    throw new Error('init() must be implemented by renderer'); \n  }\n  \n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n  \n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n      \n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n        \n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n    \n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) || \n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // Legacy methods (transitional - for backward compatibility)\n  getFrameworkId() { throw new Error('getFrameworkId() must be implemented by subclasses'); }\n  getDefaultSettings() { return {}; }\n  buildAdvancedInputGroup(parentelement) { throw new Error('buildAdvancedInputGroup() must be implemented by subclasses'); }\n  buildInputGroup() { throw new Error('buildInputGroup() must be implemented by subclasses'); }\n  buildVerticalButtons() { throw new Error('buildVerticalButtons() must be implemented by subclasses'); }\n\n  initElements(container) {\n    this.container = container;\n    let downButtons = this._findElements(container, 'down');\n    let upButtons = this._findElements(container, 'up');\n    if (downButtons.length === 0 || upButtons.length === 0) {\n      const verticalContainer = this._findElements(container.parent(), 'vertical-wrapper');\n      if (verticalContainer.length > 0) {\n        downButtons = this._findElements(verticalContainer, 'down');\n        upButtons = this._findElements(verticalContainer, 'up');\n      }\n    }\n    \n    // Ensure input element has data-touchspin-injected=\"input\" for core event targeting\n    this.originalinput.attr('data-touchspin-injected', 'input');\n    \n    this.elements = {\n      down: downButtons,\n      up: upButtons,\n      input: this.$('input', container),\n      prefix: this._findElements(container, 'prefix').addClass(this.settings.prefix_extraclass),\n      postfix: this._findElements(container, 'postfix').addClass(this.settings.postfix_extraclass)\n    };\n    return this.elements;\n  }\n\n  _findElements(container, role) { return this.$(`[data-touchspin-injected=\"${role}\"]`, container); }\n\n  hideEmptyPrefixPostfix() {\n    const detached = {};\n    if (this.settings.prefix === '') detached._detached_prefix = this.elements.prefix.detach();\n    if (this.settings.postfix === '') detached._detached_postfix = this.elements.postfix.detach();\n    return detached;\n  }\n\n  updatePrefixPostfix(newsettings, detached) { throw new Error('updatePrefixPostfix() must be implemented by subclasses'); }\n\n  getWrapperTestId() {\n    const inputTestId = this.originalinput.attr('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","import AbstractRenderer from './AbstractRenderer.js';\n\n/**\n * RawRenderer - Minimal renderer that adds no UI elements\n * Allows TouchSpin to work with just the input element (keyboard, wheel, events still work)\n * Perfect for custom implementations or when only programmatic API is needed\n */\nclass RawRenderer extends AbstractRenderer {\n  init() {\n    // Does nothing - no additional UI elements\n    // Core still handles the input element directly\n    // Keyboard, wheel, ARIA, and programmatic methods still work via core\n  }\n  \n  teardown() {\n    // Nothing to clean up - no UI was added\n    // Core will handle input element cleanup\n  }\n}\n\nexport default RawRenderer;","// @ts-check\nimport RawRenderer from './RawRenderer.js';\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Required renderer class (e.g., Bootstrap5Renderer, RawRenderer)\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n\n    // Use RawRenderer as fallback if no renderer specified\n    if (!this.settings.renderer) {\n      console.warn('TouchSpin: No renderer specified. Using RawRenderer (no UI). Consider using Bootstrap3/4/5Renderer or TailwindRenderer.');\n      this.settings.renderer = RawRenderer;\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    this.settings = Object.assign({}, this.settings, newSettings);\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((newSettings.step !== undefined || newSettings.min !== undefined || newSettings.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of changed settings\n    Object.keys(newSettings).forEach(key => {\n      if (oldSettings[key] !== newSettings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(newSettings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    const raw = this.input.value;\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('input', this._handleInputChange);\n    this.input.addEventListener('change', this._handleInputChange);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('input', this._handleInputChange);\n    this.input.removeEventListener('change', this._handleInputChange);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle input/change events on the input element.\n   * @private\n   */\n  _handleInputChange(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(true);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function TouchSpin(inputEl, opts) {\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Export renderers\nexport { default as RawRenderer } from './RawRenderer.js';\nexport { default as AbstractRenderer } from './AbstractRenderer.js';\n","/**\n * Bootstrap 3 Renderer - New Architecture\n * Builds Bootstrap 3 UI elements around TouchSpin input\n * Uses input-group-btn and input-group-addon for Bootstrap 3 compatibility\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass Bootstrap3Renderer extends AbstractRenderer {\n\n  init() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    \n    // 2. Find created buttons\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    \n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n    \n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside an input-group\n    const existingInputGroup = this.input.closest('.input-group');\n    \n    if (existingInputGroup) {\n      return this.buildAdvancedInputGroup(existingInputGroup);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n  \n  buildBasicInputGroup() {\n    const inputGroupSize = this._detectInputGroupSize();\n    \n    const html = `\n      <div class=\"input-group ${inputGroupSize} bootstrap-touchspin\" data-touchspin-injected=\"wrapper\">\n        <span class=\"input-group-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <span class=\"input-group-btn\">\n          <button tabindex=\"-1\" class=\"${this.settings.buttondown_class || 'btn btn-default'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        </span>\n        <span class=\"input-group-btn\">\n          <button tabindex=\"-1\" class=\"${this.settings.buttonup_class || 'btn btn-default'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </span>\n        <span class=\"input-group-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      </div>\n    `;\n    \n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n    \n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n    \n    // Find the position to insert input (after down button, before up button)\n    const upButton = wrapper.querySelector('.input-group-btn:has([data-touchspin-injected=\"up\"])');\n    wrapper.insertBefore(this.input, upButton);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n    \n    return wrapper;\n  }\n  \n  buildAdvancedInputGroup(existingInputGroup) {\n    // Add bootstrap-touchspin class to existing input-group\n    existingInputGroup.classList.add('bootstrap-touchspin');\n    existingInputGroup.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n    \n    // Create buttons and prefix/postfix elements with Bootstrap 3 structure\n    const elementsHtml = `\n      <span class=\"input-group-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n      <span class=\"input-group-btn\">\n        <button tabindex=\"-1\" class=\"${this.settings.buttondown_class || 'btn btn-default'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n      </span>\n      <span class=\"input-group-btn\">\n        <button tabindex=\"-1\" class=\"${this.settings.buttonup_class || 'btn btn-default'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n      </span>\n      <span class=\"input-group-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n    `;\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n    \n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingInputGroup.insertBefore(prefixEl, this.input);\n    \n    // Insert down button before the input\n    const downButtonWrapper = tempDiv.querySelector('.input-group-btn:has([data-touchspin-injected=\"down\"])');\n    existingInputGroup.insertBefore(downButtonWrapper, this.input);\n    \n    // Insert up button after the input\n    const upButtonWrapper = tempDiv.querySelector('.input-group-btn:has([data-touchspin-injected=\"up\"])');\n    existingInputGroup.insertBefore(upButtonWrapper, this.input.nextSibling);\n    \n    // Insert postfix after the up button\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingInputGroup.insertBefore(postfixEl, upButtonWrapper.nextSibling);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingInputGroup);\n    \n    return existingInputGroup;\n  }\n\n  _detectInputGroupSize() {\n    const classList = this.input.className;\n    if (classList.includes('input-sm')) {\n      return 'input-group-sm';\n    } else if (classList.includes('input-lg')) {\n      return 'input-group-lg';\n    }\n    return '';\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.remove();\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.remove();\n    }\n  }\n\n  updatePrefix(value) {\n    let prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    \n    if (value && value !== '') {\n      if (!prefixEl) {\n        // Re-create prefix element if it was removed\n        prefixEl = document.createElement('span');\n        prefixEl.className = 'input-group-addon';\n        prefixEl.setAttribute('data-touchspin-injected', 'prefix');\n        prefixEl.textContent = value;\n        // Insert at the beginning of the wrapper\n        this.wrapper.insertBefore(prefixEl, this.wrapper.firstChild);\n      } else {\n        prefixEl.textContent = value;\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      prefixEl.remove();\n    }\n  }\n  \n  updatePostfix(value) {\n    let postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (value && value !== '') {\n      if (!postfixEl) {\n        // Re-create postfix element if it was removed\n        postfixEl = document.createElement('span');\n        postfixEl.className = 'input-group-addon';\n        postfixEl.setAttribute('data-touchspin-injected', 'postfix');\n        postfixEl.textContent = value;\n        // Insert at the end of the wrapper\n        this.wrapper.appendChild(postfixEl);\n      } else {\n        postfixEl.textContent = value;\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      postfixEl.remove();\n    }\n  }\n  \n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.className = `${className || 'btn btn-default'} bootstrap-touchspin-${type}`;\n    }\n  }\n}\n\nexport default Bootstrap3Renderer;","// jQuery Bootstrap 3 build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin, CORE_EVENTS } from '../../packages/core/src/index.js';\nimport Bootstrap3Renderer from '../../packages/renderers/bootstrap3/src/Bootstrap3Renderer.js';\n\n// Wrapper function for standalone use (when jQuery is not available)\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n  \n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || Bootstrap3Renderer;\n  \n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Custom jQuery plugin installer with baked-in Bootstrap3Renderer\nfunction installJqueryTouchSpin($) {\n  $.fn.TouchSpin = function(options, arg) {\n    // Command API - forward to core (core manages instance lifecycle)\n    if (typeof options === 'string') {\n      const cmd = String(options).toLowerCase();\n      let ret;\n      this.each(function() {\n        const inputEl = /** @type {HTMLInputElement} */ (this);\n        const api = getTouchSpin(inputEl);\n        \n        // Handle get/getvalue specially - fall back to raw input value if no instance\n        if ((cmd === 'getvalue' || cmd === 'get') && ret === undefined) {\n          if (api) {\n            ret = api.getValue();\n          } else {\n            // No TouchSpin instance - return raw input value\n            ret = inputEl.value;\n          }\n          return; // Skip other commands if no instance\n        }\n        \n        if (!api) return; // No instance exists - other commands ignored\n        \n        switch (cmd) {\n          case 'destroy': api.destroy(); break; // Core removes instance from element\n          case 'uponce': api.upOnce(); break;\n          case 'downonce': api.downOnce(); break;\n          case 'startupspin': api.startUpSpin(); break;\n          case 'startdownspin': api.startDownSpin(); break;\n          case 'stopspin': api.stopSpin(); break;\n          case 'updatesettings': api.updateSettings(arg || {}); break;\n          case 'setvalue': case 'set': api.setValue(arg); break;\n        }\n      });\n      return ret === undefined ? this : ret;\n    }\n\n    // Initialize - use TouchSpin wrapper with baked-in renderer\n    return this.each(function() {\n      const $input = $(this);\n      const inputEl = /** @type {HTMLInputElement} */ (this);\n      \n      // Create TouchSpin instance with baked-in Bootstrap3Renderer\n      const opts = options || {};\n      opts.renderer = opts.renderer || Bootstrap3Renderer;\n      const inst = CoreTouchSpin(inputEl, opts);\n\n      // Bridge core events to jQuery events (minimal event forwarding only)\n      const evMap = {\n        [CORE_EVENTS.MIN]: 'touchspin.on.min',\n        [CORE_EVENTS.MAX]: 'touchspin.on.max',\n        [CORE_EVENTS.START_SPIN]: 'touchspin.on.startspin',\n        [CORE_EVENTS.START_UP]: 'touchspin.on.startupspin',\n        [CORE_EVENTS.START_DOWN]: 'touchspin.on.startdownspin',\n        [CORE_EVENTS.STOP_SPIN]: 'touchspin.on.stopspin',\n        [CORE_EVENTS.STOP_UP]: 'touchspin.on.stopupspin',\n        [CORE_EVENTS.STOP_DOWN]: 'touchspin.on.stopdownspin',\n      };\n      \n      // Store unsubscribe functions for cleanup\n      const unsubs = [];\n      Object.keys(evMap).forEach(k => {\n        unsubs.push(inst.on(k, () => $input.trigger(evMap[k])));\n      });\n\n      // Define jQuery teardown function that cleans up jQuery-specific resources\n      const jqueryTeardown = () => {\n        // Clean up event subscriptions to core\n        unsubs.forEach(unsub => {\n          try { unsub(); } catch {} \n        });\n        // Clean up jQuery events\n        $input.off('touchspin.uponce touchspin.downonce touchspin.startupspin touchspin.startdownspin touchspin.stopspin touchspin.updatesettings touchspin.destroy');\n      };\n\n      // Register teardown with core so it's called on core destroy too\n      inst.registerTeardown(jqueryTeardown);\n\n      // Callable events - forward to core (core manages lifecycle)\n      $input.on('touchspin.uponce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.upOnce();\n      });\n      $input.on('touchspin.downonce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.downOnce();\n      });\n      $input.on('touchspin.startupspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startUpSpin();\n      });\n      $input.on('touchspin.startdownspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startDownSpin();\n      });\n      $input.on('touchspin.stopspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.stopSpin();\n      });\n      $input.on('touchspin.updatesettings', (e, o) => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.updateSettings(o || {});\n      });\n      $input.on('touchspin.destroy', () => {\n        // Forward destroy to core (core will call registered teardown callbacks)\n        const api = getTouchSpin(inputEl);\n        if (api) api.destroy();\n      });\n    });\n  };\n}\n\n// Install jQuery plugin if jQuery is available\nif (typeof window !== 'undefined' && window.jQuery) {\n  installJqueryTouchSpin(window.jQuery);\n}\n\n// For jQuery builds, ensure globals are properly exposed for direct access\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.Bootstrap3Renderer = Bootstrap3Renderer;\n  window.installJqueryTouchSpin = installJqueryTouchSpin;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, Bootstrap3Renderer, installJqueryTouchSpin };"],"names":["AbstractRenderer","inputEl","settings","core","_classCallCheck","input","wrapper","$","originalinput","container","elements","_createClass","key","value","init","Error","teardown","removeInjectedElements","_this","injected","querySelectorAll","forEach","el","remove","hasAttribute","parentElement","injectedType","getAttribute","classList","removeAttribute","parent","insertBefore","allInjected","document","_this$input$parentEle","contains","getFrameworkId","getDefaultSettings","buildAdvancedInputGroup","parentelement","buildInputGroup","buildVerticalButtons","initElements","downButtons","_findElements","upButtons","length","verticalContainer","attr","down","up","prefix","addClass","prefix_extraclass","postfix","postfix_extraclass","role","concat","hideEmptyPrefixPostfix","detached","_detached_prefix","detach","_detached_postfix","updatePrefixPostfix","newsettings","getWrapperTestId","inputTestId","RawRenderer","_AbstractRenderer","_callSuper","arguments","_inherits","DEFAULTS","min","max","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","booster","boostat","maxboostedstep","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","opts","undefined","nodeName","Object","assign","renderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleInputChange","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","_updateAriaAttributes","_checkValue","upOnce","disabled","getValue","next","_nextValue","prevNum","_setDisplay","isFinite","emit","stopSpin","downOnce","startUpSpin","_startSpin","startDownSpin","_clearSpinTimers","updateSettings","oldSettings","_objectSpread","newSettings","Number","_alignToStep","keys","observers","get","callback","error","raw","NaN","before","num","parseFloat","String","isNaN","setValue","parsed","adjusted","_applyConstraints","initDOMEventHandling","_findDOMElements","_attachDOMEventListeners","registerTeardown","_this2","push","index","indexOf","splice","destroy","_detachDOMEventListeners","clear","toPublicApi","on","off","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i","_arr","_toConsumableArray","fn","_","dir","_this4","changed","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused","clearInterval","_unused2","current","_valueIfIsNaN","base","Math","parseInt","stepUnclamped","pow","floor","mbs","round","aligned","_forcestepdivisibility","clamped","_getBoostedStep","boosted","cap","val","mode","dec","out","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","after","setAttribute","removeEventListener","e","preventDefault","activeElement","deltaY","TouchSpin","getTouchSpin","CORE_EVENTS","freeze","MIN","MAX","START_SPIN","START_UP","START_DOWN","STOP_SPIN","STOP_UP","STOP_DOWN","Bootstrap3Renderer","upButton","querySelector","downButton","newValue","updatePrefix","updatePostfix","updateButtonClass","existingInputGroup","closest","buildBasicInputGroup","inputGroupSize","_detectInputGroupSize","html","buttondown_class","buttondown_txt","buttonup_class","buttonup_txt","tempDiv","createElement","innerHTML","trim","firstChild","elementsHtml","prefixEl","downButtonWrapper","upButtonWrapper","nextSibling","postfixEl","className","includes","textContent","appendChild","type","button","options","Element","TypeError","CoreTouchSpin","installJqueryTouchSpin","arg","cmd","toLowerCase","ret","each","api","$input","inst","evMap","_defineProperty","unsubs","trigger","jqueryTeardown","unsub","o","window","jQuery"],"mappings":"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"}