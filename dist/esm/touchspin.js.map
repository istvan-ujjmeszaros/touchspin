{"version":3,"file":"touchspin.js","sources":["../../packages/core/src/index.js"],"sourcesContent":["// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {import('./renderer-interface.js').TSRenderer=} renderer  // future DOM renderer\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n\n    // Initialize ARIA attributes and sanitize display immediately\n    this._updateAriaAttributes();\n    this._checkValue(false);\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n    \n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n    \n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    this.settings = Object.assign({}, this.settings, opts || {});\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const ns = opts || {};\n    const step = Number(this.settings.step || 1);\n    if ((ns.step !== undefined || ns.min !== undefined || ns.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    const raw = this.input.value;\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /** Cleanup (placeholder) */\n  destroy() {\n    this.stopSpin();\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n    };\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n */\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function createPublicApi(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts).toPublicApi();\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n"],"names":[],"mappings":"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"}