{"version":3,"file":"touchspin-tailwind.js","sources":["../packages/core/src/index.js","../packages/core/src/AbstractRenderer.js","../packages/renderers/tailwind/src/TailwindRenderer.js","../packages/renderers/tailwind/src/entry.js"],"sourcesContent":["// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Renderer class (e.g., Bootstrap5Renderer) or null for no UI\n * @property {string=} initval - Initial value for the input\n * @property {string=} replacementval - Value to use when input is empty\n * @property {boolean=} mousewheel - Enable/disable mousewheel support\n * @property {boolean=} verticalbuttons - Enable vertical button layout\n * @property {string=} verticalup - Text for vertical up button\n * @property {string=} verticaldown - Text for vertical down button\n * @property {string=} verticalupclass - CSS classes for vertical up button (handled by renderer)\n * @property {string=} verticaldownclass - CSS classes for vertical down button (handled by renderer)\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} prefix_extraclass - Extra CSS classes for prefix element (handled by renderer)\n * @property {string=} postfix_extraclass - Extra CSS classes for postfix element (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  initval: '',\n  replacementval: '',\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  verticalbuttons: false,\n  verticalup: '+',\n  verticaldown: '-',\n  verticalupclass: null,\n  verticaldownclass: null,\n  focusablebuttons: false,\n  prefix: '',\n  postfix: '',\n  prefix_extraclass: '',\n  postfix_extraclass: '',\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  mousewheel: true,\n  buttonup_class: null,\n  buttondown_class: null,\n  buttonup_txt: '+',\n  buttondown_txt: '-',\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * Sanitize a partial settings object BEFORE applying it.\n   * Returns a new object with only provided keys normalized.\n   * @param {Partial<TouchSpinCoreOptions>} partial\n   * @param {TouchSpinCoreOptions} current\n   * @returns {Partial<TouchSpinCoreOptions>}\n   */\n  static sanitizePartialSettings(partial, current) {\n    const out = { ...partial };\n\n    if (Object.prototype.hasOwnProperty.call(partial, 'step')) {\n      const n = Number(partial.step);\n      out.step = (isFinite(n) && n > 0) ? n : 1;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(partial, 'decimals')) {\n      const n = Number(partial.decimals);\n      out.decimals = (isFinite(n) && n >= 0) ? Math.floor(n) : 0;\n    }\n\n    const hasMin = Object.prototype.hasOwnProperty.call(partial, 'min');\n    const hasMax = Object.prototype.hasOwnProperty.call(partial, 'max');\n    if (hasMin) {\n      if (partial.min === null || partial.min === undefined || partial.min === '') {\n        out.min = null;\n      } else {\n        const n = Number(partial.min);\n        out.min = isFinite(n) ? n : null;\n      }\n    }\n    if (hasMax) {\n      if (partial.max === null || partial.max === undefined || partial.max === '') {\n        out.max = null;\n      } else {\n        const n = Number(partial.max);\n        out.max = isFinite(n) ? n : null;\n      }\n    }\n    if (hasMin && hasMax && out.min !== null && out.max !== null && out.min > out.max) {\n      const tmp = out.min; out.min = out.max; out.max = tmp;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(partial, 'stepinterval')) {\n      const n = Number(partial.stepinterval);\n      out.stepinterval = (isFinite(n) && n >= 0) ? n : DEFAULTS.stepinterval;\n    }\n    if (Object.prototype.hasOwnProperty.call(partial, 'stepintervaldelay')) {\n      const n = Number(partial.stepintervaldelay);\n      out.stepintervaldelay = (isFinite(n) && n >= 0) ? n : DEFAULTS.stepintervaldelay;\n    }\n\n    return out;\n  }\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n\n    // Parse data-bts-* attributes\n    const dataAttrs = this._parseDataAttributes(inputEl);\n\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, dataAttrs, opts);\n    // Sanitize settings to ensure safe, predictable behavior\n    this._sanitizeSettings();\n\n    // Check for renderer: explicit option > global default > none\n    if (!this.settings.renderer) {\n      // Check for global default renderer\n      if (typeof globalThis !== 'undefined' && globalThis.TouchSpinDefaultRenderer) {\n        this.settings.renderer = globalThis.TouchSpinDefaultRenderer;\n      } else {\n        // Allow no renderer for keyboard/wheel-only functionality\n        console.warn('TouchSpin: No renderer specified (renderer: null). Only keyboard/wheel events will work. Consider using Bootstrap3/4/5Renderer or TailwindRenderer for UI.');\n      }\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleUpKeyDown = this._handleUpKeyDown.bind(this);\n    this._handleUpKeyUp = this._handleUpKeyUp.bind(this);\n    this._handleDownKeyDown = this._handleDownKeyDown.bind(this);\n    this._handleDownKeyUp = this._handleDownKeyUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleInputBlur = this._handleInputBlur.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n\n    // Set up mutation observer to watch for disabled/readonly changes\n    this._setupMutationObserver();\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Set initial value if specified and input is empty\n    if (this.settings.initval !== '' && this.input.value === '') {\n      this.input.value = this.settings.initval;\n    }\n\n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._syncNativeAttributes();\n    this._checkValue(false);\n  }\n\n  /**\n   * Normalize and validate settings: coerce invalid values to safe defaults.\n   * - step: > 0 number, otherwise 1\n   * - decimals: integer >= 0, otherwise 0\n   * - min/max: finite numbers or null\n   * - stepinterval/stepintervaldelay: integers >= 0 (fallback to defaults if invalid)\n   * @private\n   */\n  _sanitizeSettings() {\n    // step\n    const stepNum = Number(this.settings.step);\n    if (!isFinite(stepNum) || stepNum <= 0) {\n      this.settings.step = 1;\n    } else {\n      this.settings.step = stepNum;\n    }\n\n    // decimals\n    const decNum = Number(this.settings.decimals);\n    if (!isFinite(decNum) || decNum < 0) {\n      this.settings.decimals = 0;\n    } else {\n      this.settings.decimals = Math.floor(decNum);\n    }\n\n    // min/max\n    // Preserve explicit nulls; coerce other values to numbers or null\n    if (this.settings.min === null || this.settings.min === undefined || this.settings.min === '') {\n      this.settings.min = null;\n    } else {\n      const minNum = Number(this.settings.min);\n      this.settings.min = isFinite(minNum) ? minNum : null;\n    }\n    if (this.settings.max === null || this.settings.max === undefined || this.settings.max === '') {\n      this.settings.max = null;\n    } else {\n      const maxNum = Number(this.settings.max);\n      this.settings.max = isFinite(maxNum) ? maxNum : null;\n    }\n\n    // Ensure min <= max when both present\n    if (this.settings.min !== null && this.settings.max !== null && this.settings.min > this.settings.max) {\n      // Swap to maintain logical bounds\n      const tmp = this.settings.min;\n      this.settings.min = this.settings.max;\n      this.settings.max = tmp;\n    }\n\n    // stepinterval\n    const si = Number(this.settings.stepinterval);\n    if (!isFinite(si) || si < 0) this.settings.stepinterval = DEFAULTS.stepinterval;\n\n    // stepintervaldelay\n    const sid = Number(this.settings.stepintervaldelay);\n    if (!isFinite(sid) || sid < 0) this.settings.stepintervaldelay = DEFAULTS.stepintervaldelay;\n  }\n\n  /**\n   * Parse data-bts-* attributes from the input element.\n   * @param {HTMLInputElement} inputEl\n   * @returns {Partial<TouchSpinCoreOptions>}\n   * @private\n   */\n  _parseDataAttributes(inputEl) {\n    const attributeMap = {\n      min: 'min',\n      max: 'max',\n      initval: 'init-val',\n      replacementval: 'replacement-val',\n      firstclickvalueifempty: 'first-click-value-if-empty',\n      step: 'step',\n      decimals: 'decimals',\n      stepinterval: 'step-interval',\n      verticalbuttons: 'vertical-buttons',\n      verticalup: 'vertical-up',\n      verticaldown: 'vertical-down',\n      verticalupclass: 'vertical-up-class',\n      verticaldownclass: 'vertical-down-class',\n      forcestepdivisibility: 'force-step-divisibility',\n      stepintervaldelay: 'step-interval-delay',\n      prefix: 'prefix',\n      postfix: 'postfix',\n      prefix_extraclass: 'prefix-extra-class',\n      postfix_extraclass: 'postfix-extra-class',\n      booster: 'booster',\n      boostat: 'boostat',\n      maxboostedstep: 'max-boosted-step',\n      mousewheel: 'mouse-wheel',\n      buttondown_class: 'button-down-class',\n      buttonup_class: 'button-up-class',\n      buttondown_txt: 'button-down-txt',\n      buttonup_txt: 'button-up-txt'\n    };\n\n    const parsed = {};\n\n    // Parse data-bts-* attributes\n    for (const [optionName, attrName] of Object.entries(attributeMap)) {\n      const fullAttrName = `data-bts-${attrName}`;\n      if (inputEl.hasAttribute(fullAttrName)) {\n        const rawValue = inputEl.getAttribute(fullAttrName);\n        parsed[optionName] = this._coerceAttributeValue(optionName, rawValue);\n      }\n    }\n\n    // Also handle native attributes with precedence (warn if both specified)\n    for (const nativeAttr of ['min', 'max', 'step']) {\n      if (inputEl.hasAttribute(nativeAttr)) {\n        const rawValue = inputEl.getAttribute(nativeAttr);\n        if (parsed[nativeAttr] !== undefined) {\n          console.warn(`Both \"data-bts-${nativeAttr}\" and \"${nativeAttr}\" attributes specified. Native attribute takes precedence.`, inputEl);\n        }\n        parsed[nativeAttr] = this._coerceAttributeValue(nativeAttr, rawValue);\n      }\n    }\n\n    return parsed;\n  }\n\n  /**\n   * Convert string attribute values to appropriate types.\n   * @param {string} optionName\n   * @param {string} rawValue\n   * @returns {any}\n   * @private\n   */\n  _coerceAttributeValue(optionName, rawValue) {\n    if (rawValue === null || rawValue === undefined) {\n      return rawValue;\n    }\n\n    // Boolean attributes\n    if (['booster', 'mousewheel', 'verticalbuttons'].includes(optionName)) {\n      return rawValue === 'true' || rawValue === '' || rawValue === optionName;\n    }\n\n    // Numeric attributes\n    if (['min', 'max', 'step', 'decimals', 'stepinterval', 'stepintervaldelay',\n         'boostat', 'maxboostedstep', 'firstclickvalueifempty'].includes(optionName)) {\n      const num = parseFloat(rawValue);\n      return isNaN(num) ? rawValue : num;\n    }\n\n    // String attributes - return as-is\n    return rawValue;\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n\n    // Check if already at max boundary before incrementing\n    if (this.settings.max !== null && v === this.settings.max) {\n      this.emit('max');\n      if (this.spinning && this.direction === 'up') {\n        this.stopSpin();\n      }\n      return;\n    }\n\n    // Fire max event BEFORE setting display if we're reaching max\n    if (this.settings.max !== null && next === this.settings.max) {\n      this.emit('max');\n      if (this.spinning && this.direction === 'up') {\n        this.stopSpin();\n      }\n    }\n\n    this._setDisplay(next, true);\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n\n    // Check if already at min boundary before decrementing\n    if (this.settings.min !== null && v === this.settings.min) {\n      this.emit('min');\n      if (this.spinning && this.direction === 'down') {\n        this.stopSpin();\n      }\n      return;\n    }\n\n    // Fire min event BEFORE setting display if we're reaching min\n    if (this.settings.min !== null && next === this.settings.min) {\n      this.emit('min');\n      if (this.spinning && this.direction === 'down') {\n        this.stopSpin();\n      }\n    }\n\n    this._setDisplay(next, true);\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    // Sanitize the incoming partial BEFORE merge\n    const sanitizedPartial = TouchSpinCore.sanitizePartialSettings(newSettings, oldSettings);\n\n    // Apply incoming changes (sanitized) first\n    Object.assign(this.settings, sanitizedPartial);\n    // Extra safety: sanitize full settings after merge\n    this._sanitizeSettings();\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((sanitizedPartial.step !== undefined || sanitizedPartial.min !== undefined || sanitizedPartial.max !== undefined) && step !== 1) {\n      if (this.settings.max !== null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min !== null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of keys whose EFFECTIVE values changed after sanitization\n    Object.keys(this.settings).forEach(key => {\n      if (oldSettings[key] !== this.settings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(this.settings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._syncNativeAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    let raw = this.input.value;\n    if (raw === '' && this.settings.replacementval !== '') {\n      raw = this.settings.replacementval;\n    }\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Clean up mutation observer\n    if (this._mutationObserver) {\n      this._mutationObserver.disconnect();\n      this._mutationObserver = null;\n    }\n\n    // Clear button references\n    this._upButton = null;\n    this._downButton = null;\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    this._upButton = element;\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n\n    // Add keyboard event listeners if focusable buttons are enabled\n    if (this.settings.focusablebuttons) {\n      element.addEventListener('keydown', this._handleUpKeyDown);\n      element.addEventListener('keyup', this._handleUpKeyUp);\n    }\n\n    // Update disabled state immediately after attaching\n    this._updateButtonDisabledState();\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    this._downButton = element;\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n\n    // Add keyboard event listeners if focusable buttons are enabled\n    if (this.settings.focusablebuttons) {\n      element.addEventListener('keydown', this._handleDownKeyDown);\n      element.addEventListener('keyup', this._handleDownKeyUp);\n    }\n\n    // Update disabled state immediately after attaching\n    this._updateButtonDisabledState();\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch {\n        // Silently ignore callback errors to prevent one bad callback from breaking others\n      }\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n\n    this.stopSpin();\n\n    // Check if already at boundary - don't start spin if so\n    const v = this.getValue();\n    if (dir === 'up' && this.settings.max !== null && v === this.settings.max) {\n      return; // Already at max, don't start spin\n    }\n    if (dir === 'down' && this.settings.min !== null && v === this.settings.min) {\n      return; // Already at min, don't start spin\n    }\n\n    // If changing direction, reset counters\n    const direction_changed = (!this.spinning || this.direction !== dir);\n    if (direction_changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {\n      // Ignore timer cleanup errors\n    }\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {\n      // Ignore timer cleanup errors\n    }\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min !== null && clamped < min) clamped = min;\n    if (max !== null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1;\n    const s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min !== null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max !== null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  /**\n   * Synchronize TouchSpin settings to native input attributes.\n   * Only applies to type=\"number\" inputs to maintain browser consistency.\n   * @private\n   */\n  _syncNativeAttributes() {\n    // Only set native attributes on number inputs\n    if (this.input.getAttribute('type') === 'number') {\n      // Sync min attribute\n      if (this.settings.min !== null && isFinite(this.settings.min)) {\n        this.input.setAttribute('min', String(this.settings.min));\n      } else {\n        this.input.removeAttribute('min');\n      }\n\n      // Sync max attribute\n      if (this.settings.max !== null && isFinite(this.settings.max)) {\n        this.input.setAttribute('max', String(this.settings.max));\n      } else {\n        this.input.removeAttribute('max');\n      }\n\n      // Sync step attribute\n      if (this.settings.step !== null && isFinite(this.settings.step) && this.settings.step > 0) {\n        this.input.setAttribute('step', String(this.settings.step));\n      } else {\n        this.input.removeAttribute('step');\n      }\n    }\n  }\n\n  /**\n   * Update TouchSpin settings from native attribute changes.\n   * Called by mutation observer when min/max/step attributes change.\n   * @private\n   */\n  _syncSettingsFromNativeAttributes() {\n    const nativeMin = this.input.getAttribute('min');\n    const nativeMax = this.input.getAttribute('max');\n    const nativeStep = this.input.getAttribute('step');\n    let needsUpdate = false;\n    const newSettings = {};\n\n    // Check min attribute\n    if (nativeMin !== null) {\n      const parsedMin = nativeMin === '' ? null : parseFloat(nativeMin);\n      const minNum = parsedMin !== null && isFinite(parsedMin) ? parsedMin : null;\n      if (minNum !== this.settings.min) {\n        newSettings.min = minNum;\n        needsUpdate = true;\n      }\n    } else if (this.settings.min !== null) {\n      // Attribute was removed\n      newSettings.min = null;\n      needsUpdate = true;\n    }\n\n    // Check max attribute\n    if (nativeMax !== null) {\n      const parsedMax = nativeMax === '' ? null : parseFloat(nativeMax);\n      const maxNum = parsedMax !== null && isFinite(parsedMax) ? parsedMax : null;\n      if (maxNum !== this.settings.max) {\n        newSettings.max = maxNum;\n        needsUpdate = true;\n      }\n    } else if (this.settings.max !== null) {\n      // Attribute was removed\n      newSettings.max = null;\n      needsUpdate = true;\n    }\n\n    // Check step attribute\n    if (nativeStep !== null) {\n      const parsedStep = nativeStep === '' ? null : parseFloat(nativeStep);\n      const stepNum = parsedStep !== null && isFinite(parsedStep) && parsedStep > 0 ? parsedStep : null;\n      if (stepNum !== this.settings.step) {\n        newSettings.step = stepNum;\n        needsUpdate = true;\n      }\n    } else if (this.settings.step !== 1) {\n      // Attribute was removed, reset to default\n      newSettings.step = 1;\n      needsUpdate = true;\n    }\n\n    // Apply updates if needed\n    if (needsUpdate) {\n      this.updateSettings(newSettings);\n    }\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('change', this._handleInputChange, true); // Capture phase to intercept\n    this.input.addEventListener('blur', this._handleInputBlur);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('change', this._handleInputChange, true);\n    this.input.removeEventListener('blur', this._handleInputBlur);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle keydown events on up button.\n   * @private\n   */\n  _handleUpKeyDown(e) {\n    // Only handle Enter and Space keys\n    if (e.keyCode === 13 || e.keyCode === 32) { // Enter or Space\n      e.preventDefault();\n      this.upOnce();\n      this.startUpSpin();\n    }\n  }\n\n  /**\n   * Handle keyup events on up button.\n   * @private\n   */\n  _handleUpKeyUp(e) {\n    // Only handle Enter and Space keys\n    if (e.keyCode === 13 || e.keyCode === 32) { // Enter or Space\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle keydown events on down button.\n   * @private\n   */\n  _handleDownKeyDown(e) {\n    // Only handle Enter and Space keys\n    if (e.keyCode === 13 || e.keyCode === 32) { // Enter or Space\n      e.preventDefault();\n      this.downOnce();\n      this.startDownSpin();\n    }\n  }\n\n  /**\n   * Handle keyup events on down button.\n   * @private\n   */\n  _handleDownKeyUp(e) {\n    // Only handle Enter and Space keys\n    if (e.keyCode === 13 || e.keyCode === 32) { // Enter or Space\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Intercept change events to prevent wrong values from propagating.\n   * @private\n   */\n  _handleInputChange(e) {\n    const currentValue = this.getValue();\n    const wouldBeSanitized = this._applyConstraints(currentValue);\n\n    if (isFinite(currentValue) && currentValue !== wouldBeSanitized) {\n      // This change event has wrong value - prevent it from propagating\n      e.stopImmediatePropagation();\n      // Don't sanitize here - blur handler will do it with correct change event\n    }\n    // If values match, let the change event through normally\n  }\n\n  /**\n   * Handle blur events on the input element for sanitization.\n   * @private\n   */\n  _handleInputBlur(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(false);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (!this.settings.mousewheel) {\n      return;\n    }\n\n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n\n  /**\n   * Set up mutation observer to watch for disabled/readonly attribute changes\n   * @private\n   */\n  _setupMutationObserver() {\n    if (typeof MutationObserver !== 'undefined') {\n      this._mutationObserver = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.type === 'attributes') {\n            if (mutation.attributeName === 'disabled' || mutation.attributeName === 'readonly') {\n              this._updateButtonDisabledState();\n            } else if (mutation.attributeName === 'min' || mutation.attributeName === 'max' || mutation.attributeName === 'step') {\n              this._syncSettingsFromNativeAttributes();\n            }\n          }\n        });\n      });\n\n      this._mutationObserver.observe(this.input, {\n        attributes: true,\n        attributeFilter: ['disabled', 'readonly', 'min', 'max', 'step']\n      });\n    }\n  }\n\n  /**\n   * Update button disabled state based on input disabled/readonly state\n   * @private\n   */\n  _updateButtonDisabledState() {\n    const isDisabled = this.input.disabled || this.input.hasAttribute('readonly');\n\n    if (this._upButton) {\n      this._upButton.disabled = isDisabled;\n    }\n    if (this._downButton) {\n      this._downButton.disabled = isDisabled;\n    }\n\n    if (isDisabled) {\n      this.stopSpin();\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function TouchSpin(inputEl, opts) {\n  // Check if element is an input (graceful handling for public API)\n  if (!inputEl || inputEl.nodeName !== 'INPUT') {\n    console.warn('Must be an input.');\n    return null;\n  }\n\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      console.warn('TouchSpin: Destroying existing instance and reinitializing. Consider using updateSettings() instead.');\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Note: AbstractRenderer is not exported as it's only needed by renderer implementations\n// Renderers should import it directly: import AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n","/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n *\n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n\n    // No legacy properties needed in modern architecture\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() {\n    throw new Error('init() must be implemented by renderer');\n  }\n\n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n\n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n\n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n\n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n\n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) ||\n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // All legacy jQuery-based methods have been removed\n  // Modern renderers implement their own init() method and use vanilla JS\n\n  getWrapperTestId() {\n    // Modern vanilla JS version\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n\n  /**\n   * Get testid attribute for up button\n   * @returns {string} Testid attribute or empty string\n   */\n  getUpButtonTestId() {\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-up\"`;\n    return '';\n  }\n\n  /**\n   * Get testid attribute for down button\n   * @returns {string} Testid attribute or empty string\n   */\n  getDownButtonTestId() {\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-down\"`;\n    return '';\n  }\n\n  /**\n   * Get testid attribute for prefix element\n   * @returns {string} Testid attribute or empty string\n   */\n  getPrefixTestId() {\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-prefix\"`;\n    return '';\n  }\n\n  /**\n   * Get testid attribute for postfix element\n   * @returns {string} Testid attribute or empty string\n   */\n  getPostfixTestId() {\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-postfix\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","/**\n * Tailwind CSS Renderer - New Architecture\n * Using Tailwind utility classes only; no external CSS dependency.\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass TailwindRenderer extends AbstractRenderer {\n\n  init() {\n    // Initialize internal element references\n    this.prefixEl = null;\n    this.postfixEl = null;\n\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n\n    // 2. Find created buttons and store prefix/postfix references\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    this.postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n\n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n    this.core.observeSetting('verticalupclass', (newValue) => this.updateVerticalButtonClass('up', newValue));\n    this.core.observeSetting('verticaldownclass', (newValue) => this.updateVerticalButtonClass('down', newValue));\n    this.core.observeSetting('verticalup', (newValue) => this.updateVerticalButtonText('up', newValue));\n    this.core.observeSetting('verticaldown', (newValue) => this.updateVerticalButtonText('down', newValue));\n    this.core.observeSetting('buttonup_txt', (newValue) => this.updateButtonText('up', newValue));\n    this.core.observeSetting('buttondown_txt', (newValue) => this.updateButtonText('down', newValue));\n    this.core.observeSetting('prefix_extraclass', (newValue) => this.updatePrefixClasses());\n    this.core.observeSetting('postfix_extraclass', (newValue) => this.updatePostfixClasses());\n    this.core.observeSetting('verticalbuttons', (newValue) => this.handleVerticalButtonsChange(newValue));\n    this.core.observeSetting('focusablebuttons', (newValue) => this.updateButtonFocusability(newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside a flex container\n    const existingContainer = this.input.closest('.flex');\n\n    if (existingContainer && existingContainer.classList.contains('rounded-md')) {\n      return this.buildAdvancedInputGroup(existingContainer);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup() {\n    const _inputSize = this._detectInputSize();\n    const isVertical = this.settings.verticalbuttons;\n    const testidAttr = this.getWrapperTestId();\n\n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\"${testidAttr}>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 rounded-l-md tailwind-addon ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n          ${this.buildVerticalButtons()}\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\"${testidAttr}>\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-l-md tailwind-btn ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.buttondown_txt || 'âˆ’'}</button>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-r-md tailwind-btn ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n\n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n\n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n\n    // Find the position to insert input (after prefix, before postfix)\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    if (prefixEl) {\n      wrapper.insertBefore(this.input, prefixEl.nextSibling);\n    } else {\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n      wrapper.insertBefore(this.input, postfixEl);\n    }\n\n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n\n    // Apply size classes\n    this._applySizeClasses(wrapper);\n\n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n\n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingContainer) {\n    existingContainer.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n\n    // Add testid if wrapper doesn't already have one and input has one\n    const inputTestId = this.input.getAttribute('data-testid');\n    const existingWrapperTestId = existingContainer.getAttribute('data-testid');\n    if (!existingWrapperTestId && inputTestId) {\n      existingContainer.setAttribute('data-testid', `${inputTestId}-wrapper`);\n    }\n\n    const isVertical = this.settings.verticalbuttons;\n\n    // Create elements HTML\n    let elementsHtml;\n    if (isVertical) {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n        ${this.buildVerticalButtons()}\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n      `;\n    } else {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.buttondown_txt || 'âˆ’'}</button>\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.buttonup_txt || '+'}</button>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n      `;\n    }\n\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n\n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingContainer.insertBefore(prefixEl, this.input);\n\n    if (isVertical) {\n      // Insert vertical button wrapper after the input\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      existingContainer.insertBefore(verticalWrapper, this.input.nextSibling);\n    } else {\n      // Insert down button before the input\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]');\n      existingContainer.insertBefore(downButton, this.input);\n\n      // Insert up button after the input\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]');\n      existingContainer.insertBefore(upButton, this.input.nextSibling);\n    }\n\n    // Insert postfix after everything\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingContainer.appendChild(postfixEl);\n\n    // Store internal references for advanced mode too\n    this.prefixEl = prefixEl;\n    this.postfixEl = postfixEl;\n\n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n\n    // Apply size classes\n    this._applySizeClasses(existingContainer);\n\n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingContainer);\n\n    return existingContainer;\n  }\n\n  _detectInputSize() {\n    const classList = this.input.className;\n    if (classList.includes('text-sm') || classList.includes('py-1')) {\n      return 'text-sm py-1 px-2';\n    } else if (classList.includes('text-lg') || classList.includes('py-3')) {\n      return 'text-lg py-3 px-4';\n    }\n    return 'text-base py-2 px-3';\n  }\n\n  _applySizeClasses(wrapper = this.wrapper) {\n    const s = this._detectInputSize();\n    if (s.includes('text-sm')) {\n      wrapper.classList.add('text-sm');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-1', 'px-2', 'text-sm');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-1', 'px-2', 'text-sm');\n      });\n    } else if (s.includes('text-lg')) {\n      wrapper.classList.add('text-lg');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-3', 'px-4', 'text-lg');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-3', 'px-4', 'text-lg');\n      });\n    }\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    // Use internal references if available, otherwise query from wrapper\n    const prefixEl = this.prefixEl || wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = this.postfixEl || wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.style.display = 'none';\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.style.display = 'none';\n    }\n  }\n\n  updatePrefix(value) {\n    // Use internal reference\n    const prefixEl = this.prefixEl;\n\n    if (value && value !== '') {\n      if (prefixEl) {\n        prefixEl.textContent = value;\n        prefixEl.style.display = '';\n        // Update classes in case prefix_extraclass changed\n        prefixEl.className = `inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.prefix_extraclass || ''}`.trim();\n      }\n    } else if (prefixEl) {\n      // Hide element if value is empty but keep it in DOM\n      prefixEl.style.display = 'none';\n    }\n  }\n\n  updatePostfix(value) {\n    // Use internal reference\n    const postfixEl = this.postfixEl;\n\n    if (value && value !== '') {\n      if (postfixEl) {\n        postfixEl.textContent = value;\n        postfixEl.style.display = '';\n        // Update classes in case postfix_extraclass changed\n        postfixEl.className = `inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}`.trim();\n      }\n    } else if (postfixEl) {\n      // Hide element if value is empty but keep it in DOM\n      postfixEl.style.display = 'none';\n    }\n  }\n\n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      // Remove old custom classes and add new ones\n      const baseClasses = 'inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn';\n      button.className = `${baseClasses} ${className || ''}`;\n    }\n  }\n\n  buildVerticalButtons() {\n    return `\n      <div class=\"flex flex-col\" data-touchspin-injected=\"vertical-wrapper\">\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs ${this.settings.verticalupclass || 'bg-gray-100 hover:bg-gray-200 text-gray-700'} font-medium border border-gray-300 rounded-tr tailwind-btn disabled:opacity-50 disabled:cursor-not-allowed\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.verticalup || '+'}</button>\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs ${this.settings.verticaldownclass || 'bg-gray-100 hover:bg-gray-200 text-gray-700'} font-medium border border-t-0 border-gray-300 rounded-br tailwind-btn disabled:opacity-50 disabled:cursor-not-allowed\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.verticaldown || 'âˆ’'}</button>\n      </div>\n    `;\n  }\n\n  updateVerticalButtonClass(type, className) {\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        // Update the vertical-specific class while preserving base classes\n        const baseClasses = 'inline-flex items-center justify-center px-2 py-1 text-xs font-medium border border-gray-300 tailwind-btn disabled:opacity-50 disabled:cursor-not-allowed';\n        const roundingClass = type === 'up' ? 'rounded-t border-b-0' : 'rounded-b border-t-0';\n        button.className = `${baseClasses} ${roundingClass} ${className || 'bg-gray-100 hover:bg-gray-200 text-gray-700'}`;\n      }\n    }\n  }\n\n  updateVerticalButtonText(type, text) {\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        button.textContent = text || (type === 'up' ? '+' : 'âˆ’');\n      }\n    }\n  }\n\n  updateButtonText(type, text) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.textContent = text || (type === 'up' ? '+' : 'âˆ’');\n    }\n  }\n\n  updatePrefixClasses() {\n    const prefixEl = this.prefixEl;\n    if (prefixEl) {\n      prefixEl.className = `inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.prefix_extraclass || ''}`.trim();\n    }\n  }\n\n  updatePostfixClasses() {\n    const postfixEl = this.postfixEl;\n    if (postfixEl) {\n      postfixEl.className = `inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon ${this.settings.postfix_extraclass || ''}`.trim();\n    }\n  }\n\n  handleVerticalButtonsChange(newValue) {\n    // Remove old DOM and rebuild with new layout\n    this.rebuildDOM();\n  }\n\n  rebuildDOM() {\n    // Remove old DOM and rebuild with current settings\n    this.removeInjectedElements();\n    // Reset wrapper reference since it was removed\n    this.wrapper = null;\n    this.prefixEl = null;\n    this.postfixEl = null;\n    this.buildAndAttachDOM();\n  }\n\n  buildAndAttachDOM() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n\n    // 2. Find created buttons and store prefix/postfix references\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    this.postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n  }\n\n  updateButtonFocusability(newValue) {\n    // Find all buttons and update their tabindex\n    const buttons = this.wrapper.querySelectorAll('[data-touchspin-injected=\"up\"], [data-touchspin-injected=\"down\"]');\n    const tabindex = newValue ? '0' : '-1';\n    buttons.forEach(button => {\n      button.setAttribute('tabindex', tabindex);\n    });\n  }\n\n}\n\nexport default TailwindRenderer;\n","// Standalone Tailwind build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin } from '../../../core/src/index.js';\nimport TailwindRenderer from './TailwindRenderer.js';\n\n// Create a wrapper that automatically sets the Tailwind renderer\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n\n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || TailwindRenderer;\n\n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Expose additional API functions\nTouchSpin.get = getTouchSpin;\nTouchSpin.destroy = (element) => {\n  const instance = getTouchSpin(element);\n  if (instance && instance.destroy) {\n    instance.destroy();\n    return true;\n  }\n  return false;\n};\n\n// For standalone builds, ensure globals are properly exposed\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.TailwindRenderer = TailwindRenderer;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, TailwindRenderer };"],"names":["DEFAULTS","min","max","initval","replacementval","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","verticalbuttons","verticalup","verticaldown","verticalupclass","verticaldownclass","focusablebuttons","prefix","postfix","prefix_extraclass","postfix_extraclass","booster","boostat","maxboostedstep","mousewheel","buttonup_class","buttondown_class","buttonup_txt","buttondown_txt","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","inputEl","opts","arguments","length","undefined","_classCallCheck","nodeName","Error","input","dataAttrs","_parseDataAttributes","settings","Object","assign","_sanitizeSettings","renderer","globalThis","TouchSpinDefaultRenderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleUpKeyDown","_handleUpKeyUp","_handleDownKeyDown","_handleDownKeyUp","_handleInputChange","_handleInputBlur","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","init","_setupMutationObserver","_createClass","key","value","_updateAriaAttributes","_syncNativeAttributes","_checkValue","stepNum","Number","isFinite","decNum","Math","floor","minNum","maxNum","tmp","si","sid","attributeMap","parsed","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","optionName","attrName","fullAttrName","concat","hasAttribute","rawValue","getAttribute","_coerceAttributeValue","_i2","_arr","nativeAttr","includes","num","parseFloat","isNaN","upOnce","disabled","getValue","next","_nextValue","emit","stopSpin","_setDisplay","downOnce","startUpSpin","_startSpin","startDownSpin","_clearSpinTimers","updateSettings","_this","oldSettings","_objectSpread","newSettings","sanitizedPartial","sanitizePartialSettings","_alignToStep","keys","forEach","observers","get","callback","error","raw","NaN","before","String","setValue","adjusted","_applyConstraints","initDOMEventHandling","_findDOMElements","_attachDOMEventListeners","registerTeardown","_this2","push","index","indexOf","splice","destroy","teardown","_detachDOMEventListeners","clear","_mutationObserver","disconnect","toPublicApi","on","off","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","_updateButtonDisabledState","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i3","_arr2","_toConsumableArray","fn","_unused","dir","_this4","direction_changed","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused2","clearInterval","_unused3","current","_valueIfIsNaN","base","parseInt","stepUnclamped","pow","mbs","round","aligned","_forcestepdivisibility","clamped","_getBoostedStep","boosted","cap","val","mode","dec","out","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","after","el","setAttribute","removeAttribute","_syncSettingsFromNativeAttributes","nativeMin","nativeMax","nativeStep","needsUpdate","parsedMin","parsedMax","parsedStep","wrapper","parentElement","document","removeEventListener","e","preventDefault","keyCode","currentValue","wouldBeSanitized","stopImmediatePropagation","activeElement","deltaY","_this5","MutationObserver","mutations","mutation","type","attributeName","observe","attributes","attributeFilter","isDisabled","partial","prototype","hasOwnProperty","call","n","hasMin","hasMax","TouchSpin","core","getTouchSpin","AbstractRenderer","removeInjectedElements","injected","querySelectorAll","remove","injectedType","classList","parent","insertBefore","allInjected","_this$input$parentEle","contains","getWrapperTestId","inputTestId","getUpButtonTestId","getDownButtonTestId","getPrefixTestId","getPostfixTestId","TailwindRenderer","_AbstractRenderer","_callSuper","_inherits","prefixEl","postfixEl","buildInputGroup","upButton","querySelector","downButton","newValue","updatePrefix","updatePostfix","updateButtonClass","updateVerticalButtonClass","updateVerticalButtonText","updateButtonText","updatePrefixClasses","updatePostfixClasses","handleVerticalButtonsChange","updateButtonFocusability","existingContainer","closest","buildAdvancedInputGroup","buildBasicInputGroup","_detectInputSize","isVertical","testidAttr","html","buildVerticalButtons","tempDiv","createElement","innerHTML","trim","firstChild","nextSibling","className","replace","_applySizeClasses","hideEmptyPrefixPostfix","existingWrapperTestId","elementsHtml","verticalWrapper","appendChild","btn","addon","style","display","textContent","button","baseClasses","roundingClass","text","rebuildDOM","buildAndAttachDOM","buttons","tabindex","options","Element","TypeError","CoreTouchSpin","instance","window"],"mappings":"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"}