{"version":3,"file":"touchspin-tailwind.js","sources":["../packages/core/src/AbstractRenderer.js","../packages/core/src/index.js","../packages/renderers/tailwind/src/TailwindRenderer.js","../src/entries/standalone-tailwind.js"],"sourcesContent":["/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n * \n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n    \n    // Legacy compatibility (transitional)\n    this.$ = typeof $ !== 'undefined' ? $ : null;\n    this.originalinput = this.$ ? this.$(inputEl) : null;\n    this.container = null;\n    this.elements = null;\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() { \n    throw new Error('init() must be implemented by renderer'); \n  }\n  \n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n  \n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n      \n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n        \n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n    \n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) || \n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // Legacy methods (transitional - for backward compatibility)\n  getFrameworkId() { throw new Error('getFrameworkId() must be implemented by subclasses'); }\n  getDefaultSettings() { return {}; }\n  buildAdvancedInputGroup(parentelement) { throw new Error('buildAdvancedInputGroup() must be implemented by subclasses'); }\n  buildInputGroup() { throw new Error('buildInputGroup() must be implemented by subclasses'); }\n  buildVerticalButtons() { throw new Error('buildVerticalButtons() must be implemented by subclasses'); }\n\n  initElements(container) {\n    this.container = container;\n    let downButtons = this._findElements(container, 'down');\n    let upButtons = this._findElements(container, 'up');\n    if (downButtons.length === 0 || upButtons.length === 0) {\n      const verticalContainer = this._findElements(container.parent(), 'vertical-wrapper');\n      if (verticalContainer.length > 0) {\n        downButtons = this._findElements(verticalContainer, 'down');\n        upButtons = this._findElements(verticalContainer, 'up');\n      }\n    }\n    \n    // Ensure input element has data-touchspin-injected=\"input\" for core event targeting\n    this.originalinput.attr('data-touchspin-injected', 'input');\n    \n    this.elements = {\n      down: downButtons,\n      up: upButtons,\n      input: this.$('input', container),\n      prefix: this._findElements(container, 'prefix').addClass(this.settings.prefix_extraclass),\n      postfix: this._findElements(container, 'postfix').addClass(this.settings.postfix_extraclass)\n    };\n    return this.elements;\n  }\n\n  _findElements(container, role) { return this.$(`[data-touchspin-injected=\"${role}\"]`, container); }\n\n  hideEmptyPrefixPostfix() {\n    const detached = {};\n    if (this.settings.prefix === '') detached._detached_prefix = this.elements.prefix.detach();\n    if (this.settings.postfix === '') detached._detached_postfix = this.elements.postfix.detach();\n    return detached;\n  }\n\n  updatePrefixPostfix(newsettings, detached) { throw new Error('updatePrefixPostfix() must be implemented by subclasses'); }\n\n  getWrapperTestId() {\n    const inputTestId = this.originalinput.attr('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Renderer class (e.g., Bootstrap5Renderer) or null for no UI\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n\n    // Allow no renderer for keyboard/wheel-only functionality\n    if (!this.settings.renderer) {\n      console.warn('TouchSpin: No renderer specified (renderer: null). Only keyboard/wheel events will work. Consider using Bootstrap3/4/5Renderer or TailwindRenderer for UI.');\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    this.settings = Object.assign({}, this.settings, newSettings);\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((newSettings.step !== undefined || newSettings.min !== undefined || newSettings.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of changed settings\n    Object.keys(newSettings).forEach(key => {\n      if (oldSettings[key] !== newSettings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(newSettings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    const raw = this.input.value;\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('input', this._handleInputChange);\n    this.input.addEventListener('change', this._handleInputChange);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('input', this._handleInputChange);\n    this.input.removeEventListener('change', this._handleInputChange);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle input/change events on the input element.\n   * @private\n   */\n  _handleInputChange(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(true);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function TouchSpin(inputEl, opts) {\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Export renderers\nexport { default as AbstractRenderer } from './AbstractRenderer.js';\n","/**\n * Tailwind CSS Renderer - New Architecture\n * Uses Tailwind utility classes only; no Bootstrap CSS dependency.\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass TailwindRenderer extends AbstractRenderer {\n\n  init() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    \n    // 2. Find created buttons\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    \n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n    \n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside a flex container\n    const existingContainer = this.input.closest('.flex');\n    \n    if (existingContainer && existingContainer.classList.contains('rounded-md')) {\n      return this.buildAdvancedInputGroup(existingContainer);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup() {\n    const inputSize = this._detectInputSize();\n    const isVertical = this.settings.verticalbuttons;\n    \n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          </div>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-l-md tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-r-md tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n    \n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n    \n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n    \n    // Find the position to insert input (after prefix, before postfix)\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    if (prefixEl) {\n      wrapper.insertBefore(this.input, prefixEl.nextSibling);\n    } else {\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n      wrapper.insertBefore(this.input, postfixEl);\n    }\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(wrapper);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n    \n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingContainer) {\n    // Add bootstrap-touchspin class to existing container\n    existingContainer.classList.add('bootstrap-touchspin');\n    existingContainer.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n    \n    const isVertical = this.settings.verticalbuttons;\n    \n    // Create elements HTML\n    let elementsHtml;\n    if (isVertical) {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        </div>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    } else {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    }\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n    \n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingContainer.insertBefore(prefixEl, this.input);\n    \n    if (isVertical) {\n      // Insert vertical button wrapper after the input\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      existingContainer.insertBefore(verticalWrapper, this.input.nextSibling);\n    } else {\n      // Insert down button before the input\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]');\n      existingContainer.insertBefore(downButton, this.input);\n      \n      // Insert up button after the input\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]');\n      existingContainer.insertBefore(upButton, this.input.nextSibling);\n    }\n    \n    // Insert postfix after everything\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingContainer.appendChild(postfixEl);\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(existingContainer);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingContainer);\n    \n    return existingContainer;\n  }\n\n  _detectInputSize() {\n    const classList = this.input.className;\n    if (classList.includes('text-sm') || classList.includes('py-1')) {\n      return 'text-sm py-1 px-2';\n    } else if (classList.includes('text-lg') || classList.includes('py-3')) {\n      return 'text-lg py-3 px-4';\n    }\n    return 'text-base py-2 px-3';\n  }\n\n  _applySizeClasses(wrapper = this.wrapper) {\n    const s = this._detectInputSize();\n    if (s.includes('text-sm')) {\n      wrapper.classList.add('text-sm');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-1', 'px-2', 'text-sm');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-1', 'px-2', 'text-sm');\n      });\n    } else if (s.includes('text-lg')) {\n      wrapper.classList.add('text-lg');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-3', 'px-4', 'text-lg');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-3', 'px-4', 'text-lg');\n      });\n    }\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.remove();\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.remove();\n    }\n  }\n\n  updatePrefix(value) {\n    let prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    \n    if (value && value !== '') {\n      if (!prefixEl) {\n        // Re-create prefix element if it was removed\n        prefixEl = document.createElement('span');\n        prefixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        prefixEl.setAttribute('data-touchspin-injected', 'prefix');\n        prefixEl.textContent = value;\n        // Insert at the beginning of the wrapper\n        this.wrapper.insertBefore(prefixEl, this.wrapper.firstChild);\n      } else {\n        prefixEl.textContent = value;\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      prefixEl.remove();\n    }\n  }\n  \n  updatePostfix(value) {\n    let postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (value && value !== '') {\n      if (!postfixEl) {\n        // Re-create postfix element if it was removed\n        postfixEl = document.createElement('span');\n        postfixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        postfixEl.setAttribute('data-touchspin-injected', 'postfix');\n        postfixEl.textContent = value;\n        // Insert at the end of the wrapper\n        this.wrapper.appendChild(postfixEl);\n      } else {\n        postfixEl.textContent = value;\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      postfixEl.remove();\n    }\n  }\n  \n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      // Remove old custom classes and add new ones\n      const baseClasses = 'inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn';\n      const directionalClass = type === 'up' ? 'bootstrap-touchspin-up' : 'bootstrap-touchspin-down';\n      button.className = `${baseClasses} ${directionalClass} ${className || ''}`;\n    }\n  }\n\n}\n\nexport default TailwindRenderer;\n","// Standalone Tailwind build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin } from '../../packages/core/src/index.js';\nimport TailwindRenderer from '../../packages/renderers/tailwind/src/TailwindRenderer.js';\n\n// Create a wrapper that automatically sets the Tailwind renderer\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n  \n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || TailwindRenderer;\n  \n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Expose additional API functions\nTouchSpin.get = getTouchSpin;\nTouchSpin.destroy = (element) => {\n  const instance = getTouchSpin(element);\n  if (instance && instance.destroy) {\n    instance.destroy();\n    return true;\n  }\n  return false;\n};\n\n// For standalone builds, ensure globals are properly exposed\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.TailwindRenderer = TailwindRenderer;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, TailwindRenderer };"],"names":["AbstractRenderer","inputEl","settings","core","_classCallCheck","input","wrapper","$","originalinput","container","elements","_createClass","key","value","init","Error","teardown","removeInjectedElements","_this","injected","querySelectorAll","forEach","el","remove","hasAttribute","parentElement","injectedType","getAttribute","classList","removeAttribute","parent","insertBefore","allInjected","document","_this$input$parentEle","contains","getFrameworkId","getDefaultSettings","buildAdvancedInputGroup","parentelement","buildInputGroup","buildVerticalButtons","initElements","downButtons","_findElements","upButtons","length","verticalContainer","attr","down","up","prefix","addClass","prefix_extraclass","postfix","postfix_extraclass","role","concat","hideEmptyPrefixPostfix","detached","_detached_prefix","detach","_detached_postfix","updatePrefixPostfix","newsettings","getWrapperTestId","inputTestId","DEFAULTS","min","max","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","booster","boostat","maxboostedstep","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","opts","arguments","undefined","nodeName","Object","assign","renderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleInputChange","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","_updateAriaAttributes","_checkValue","upOnce","disabled","getValue","next","_nextValue","prevNum","_setDisplay","isFinite","emit","stopSpin","downOnce","startUpSpin","_startSpin","startDownSpin","_clearSpinTimers","updateSettings","oldSettings","_objectSpread","newSettings","Number","_alignToStep","keys","observers","get","callback","error","raw","NaN","before","num","parseFloat","String","isNaN","setValue","parsed","adjusted","_applyConstraints","initDOMEventHandling","_findDOMElements","_attachDOMEventListeners","registerTeardown","_this2","push","index","indexOf","splice","destroy","_detachDOMEventListeners","clear","toPublicApi","on","off","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i","_arr","_toConsumableArray","fn","_","dir","_this4","changed","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused","clearInterval","_unused2","current","_valueIfIsNaN","base","Math","parseInt","stepUnclamped","pow","floor","mbs","round","aligned","_forcestepdivisibility","clamped","_getBoostedStep","boosted","cap","val","mode","dec","out","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","after","setAttribute","removeEventListener","e","preventDefault","activeElement","deltaY","TouchSpin","getTouchSpin","TailwindRenderer","_AbstractRenderer","_callSuper","_inherits","upButton","querySelector","downButton","newValue","updatePrefix","updatePostfix","updateButtonClass","existingContainer","closest","buildBasicInputGroup","_detectInputSize","isVertical","verticalbuttons","html","buttonup_class","buttonup_txt","buttondown_class","buttondown_txt","tempDiv","createElement","innerHTML","trim","firstChild","prefixEl","nextSibling","postfixEl","className","replace","_applySizeClasses","elementsHtml","verticalWrapper","appendChild","includes","btn","addon","textContent","type","button","baseClasses","directionalClass","options","Element","TypeError","CoreTouchSpin","instance","window"],"mappings":"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"}