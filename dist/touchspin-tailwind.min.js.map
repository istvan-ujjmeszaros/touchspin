{"version":3,"file":"touchspin-tailwind.min.js","sources":["../packages/core/src/index.js","../packages/core/src/AbstractRenderer.js","../packages/renderers/tailwind/src/TailwindRenderer.js","../src/entries/standalone-tailwind.js"],"sourcesContent":["// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Renderer class (e.g., Bootstrap5Renderer) or null for no UI\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n\n    // Allow no renderer for keyboard/wheel-only functionality\n    if (!this.settings.renderer) {\n      console.warn('TouchSpin: No renderer specified (renderer: null). Only keyboard/wheel events will work. Consider using Bootstrap3/4/5Renderer or TailwindRenderer for UI.');\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    this.settings = Object.assign({}, this.settings, newSettings);\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((newSettings.step !== undefined || newSettings.min !== undefined || newSettings.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of changed settings\n    Object.keys(newSettings).forEach(key => {\n      if (oldSettings[key] !== newSettings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(newSettings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    const raw = this.input.value;\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('input', this._handleInputChange);\n    this.input.addEventListener('change', this._handleInputChange);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('input', this._handleInputChange);\n    this.input.removeEventListener('change', this._handleInputChange);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle input/change events on the input element.\n   * @private\n   */\n  _handleInputChange(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(true);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function TouchSpin(inputEl, opts) {\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Note: AbstractRenderer is not exported as it's only needed by renderer implementations\n// Renderers should import it directly: import AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n","/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n * \n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n    \n    // Legacy compatibility (transitional)\n    this.$ = typeof $ !== 'undefined' ? $ : null;\n    this.originalinput = this.$ ? this.$(inputEl) : null;\n    this.container = null;\n    this.elements = null;\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() { \n    throw new Error('init() must be implemented by renderer'); \n  }\n  \n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n  \n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n      \n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n        \n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n    \n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) || \n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // Legacy methods (transitional - for backward compatibility)\n  getFrameworkId() { throw new Error('getFrameworkId() must be implemented by subclasses'); }\n  getDefaultSettings() { return {}; }\n  buildAdvancedInputGroup(parentelement) { throw new Error('buildAdvancedInputGroup() must be implemented by subclasses'); }\n  buildInputGroup() { throw new Error('buildInputGroup() must be implemented by subclasses'); }\n  buildVerticalButtons() { throw new Error('buildVerticalButtons() must be implemented by subclasses'); }\n\n  initElements(container) {\n    this.container = container;\n    let downButtons = this._findElements(container, 'down');\n    let upButtons = this._findElements(container, 'up');\n    if (downButtons.length === 0 || upButtons.length === 0) {\n      const verticalContainer = this._findElements(container.parent(), 'vertical-wrapper');\n      if (verticalContainer.length > 0) {\n        downButtons = this._findElements(verticalContainer, 'down');\n        upButtons = this._findElements(verticalContainer, 'up');\n      }\n    }\n    \n    // Ensure input element has data-touchspin-injected=\"input\" for core event targeting\n    this.originalinput.attr('data-touchspin-injected', 'input');\n    \n    this.elements = {\n      down: downButtons,\n      up: upButtons,\n      input: this.$('input', container),\n      prefix: this._findElements(container, 'prefix').addClass(this.settings.prefix_extraclass),\n      postfix: this._findElements(container, 'postfix').addClass(this.settings.postfix_extraclass)\n    };\n    return this.elements;\n  }\n\n  _findElements(container, role) { return this.$(`[data-touchspin-injected=\"${role}\"]`, container); }\n\n  hideEmptyPrefixPostfix() {\n    const detached = {};\n    if (this.settings.prefix === '') detached._detached_prefix = this.elements.prefix.detach();\n    if (this.settings.postfix === '') detached._detached_postfix = this.elements.postfix.detach();\n    return detached;\n  }\n\n  updatePrefixPostfix(newsettings, detached) { throw new Error('updatePrefixPostfix() must be implemented by subclasses'); }\n\n  getWrapperTestId() {\n    const inputTestId = this.originalinput.attr('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","/**\n * Tailwind CSS Renderer - New Architecture\n * Uses Tailwind utility classes only; no Bootstrap CSS dependency.\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass TailwindRenderer extends AbstractRenderer {\n\n  init() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    \n    // 2. Find created buttons\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    \n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n    \n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside a flex container\n    const existingContainer = this.input.closest('.flex');\n    \n    if (existingContainer && existingContainer.classList.contains('rounded-md')) {\n      return this.buildAdvancedInputGroup(existingContainer);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup() {\n    const inputSize = this._detectInputSize();\n    const isVertical = this.settings.verticalbuttons;\n    \n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          </div>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-l-md tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-r-md tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n    \n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n    \n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n    \n    // Find the position to insert input (after prefix, before postfix)\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    if (prefixEl) {\n      wrapper.insertBefore(this.input, prefixEl.nextSibling);\n    } else {\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n      wrapper.insertBefore(this.input, postfixEl);\n    }\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(wrapper);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n    \n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingContainer) {\n    // Add bootstrap-touchspin class to existing container\n    existingContainer.classList.add('bootstrap-touchspin');\n    existingContainer.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n    \n    const isVertical = this.settings.verticalbuttons;\n    \n    // Create elements HTML\n    let elementsHtml;\n    if (isVertical) {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        </div>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    } else {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    }\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n    \n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingContainer.insertBefore(prefixEl, this.input);\n    \n    if (isVertical) {\n      // Insert vertical button wrapper after the input\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      existingContainer.insertBefore(verticalWrapper, this.input.nextSibling);\n    } else {\n      // Insert down button before the input\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]');\n      existingContainer.insertBefore(downButton, this.input);\n      \n      // Insert up button after the input\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]');\n      existingContainer.insertBefore(upButton, this.input.nextSibling);\n    }\n    \n    // Insert postfix after everything\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingContainer.appendChild(postfixEl);\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(existingContainer);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingContainer);\n    \n    return existingContainer;\n  }\n\n  _detectInputSize() {\n    const classList = this.input.className;\n    if (classList.includes('text-sm') || classList.includes('py-1')) {\n      return 'text-sm py-1 px-2';\n    } else if (classList.includes('text-lg') || classList.includes('py-3')) {\n      return 'text-lg py-3 px-4';\n    }\n    return 'text-base py-2 px-3';\n  }\n\n  _applySizeClasses(wrapper = this.wrapper) {\n    const s = this._detectInputSize();\n    if (s.includes('text-sm')) {\n      wrapper.classList.add('text-sm');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-1', 'px-2', 'text-sm');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-1', 'px-2', 'text-sm');\n      });\n    } else if (s.includes('text-lg')) {\n      wrapper.classList.add('text-lg');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-3', 'px-4', 'text-lg');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-3', 'px-4', 'text-lg');\n      });\n    }\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.remove();\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.remove();\n    }\n  }\n\n  updatePrefix(value) {\n    let prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    \n    if (value && value !== '') {\n      if (!prefixEl) {\n        // Re-create prefix element if it was removed\n        prefixEl = document.createElement('span');\n        prefixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        prefixEl.setAttribute('data-touchspin-injected', 'prefix');\n        prefixEl.textContent = value;\n        // Insert at the beginning of the wrapper\n        this.wrapper.insertBefore(prefixEl, this.wrapper.firstChild);\n      } else {\n        prefixEl.textContent = value;\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      prefixEl.remove();\n    }\n  }\n  \n  updatePostfix(value) {\n    let postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (value && value !== '') {\n      if (!postfixEl) {\n        // Re-create postfix element if it was removed\n        postfixEl = document.createElement('span');\n        postfixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        postfixEl.setAttribute('data-touchspin-injected', 'postfix');\n        postfixEl.textContent = value;\n        // Insert at the end of the wrapper\n        this.wrapper.appendChild(postfixEl);\n      } else {\n        postfixEl.textContent = value;\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      postfixEl.remove();\n    }\n  }\n  \n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      // Remove old custom classes and add new ones\n      const baseClasses = 'inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn';\n      const directionalClass = type === 'up' ? 'bootstrap-touchspin-up' : 'bootstrap-touchspin-down';\n      button.className = `${baseClasses} ${directionalClass} ${className || ''}`;\n    }\n  }\n\n}\n\nexport default TailwindRenderer;\n","// Standalone Tailwind build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin } from '../../packages/core/src/index.js';\nimport TailwindRenderer from '../../packages/renderers/tailwind/src/TailwindRenderer.js';\n\n// Create a wrapper that automatically sets the Tailwind renderer\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n  \n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || TailwindRenderer;\n  \n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Expose additional API functions\nTouchSpin.get = getTouchSpin;\nTouchSpin.destroy = (element) => {\n  const instance = getTouchSpin(element);\n  if (instance && instance.destroy) {\n    instance.destroy();\n    return true;\n  }\n  return false;\n};\n\n// For standalone builds, ensure globals are properly exposed\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.TailwindRenderer = TailwindRenderer;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, TailwindRenderer };"],"names":["DEFAULTS","min","max","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","booster","boostat","maxboostedstep","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","_createClass","inputEl","opts","arguments","length","undefined","_classCallCheck","nodeName","Error","this","input","settings","Object","assign","renderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleInputChange","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","init","key","value","_updateAriaAttributes","_checkValue","disabled","hasAttribute","getValue","next","_nextValue","prevNum","_setDisplay","isFinite","emit","stopSpin","_startSpin","_clearSpinTimers","_this","oldSettings","_objectSpread","newSettings","Number","_alignToStep","keys","forEach","observers","get","callback","error","raw","NaN","before","num","parseFloat","String","isNaN","parsed","adjusted","_applyConstraints","_findDOMElements","_attachDOMEventListeners","_this2","push","index","indexOf","splice","teardown","_detachDOMEventListeners","clear","upOnce","downOnce","startUpSpin","startDownSpin","updateSettings","setValue","destroy","on","off","initDOMEventHandling","registerTeardown","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i","_arr","_toConsumableArray","fn","_","dir","_this4","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused","clearInterval","_unused2","current","_valueIfIsNaN","base","Math","parseInt","stepUnclamped","pow","floor","mbs","round","aligned","_forcestepdivisibility","clamped","boosted","cap","val","out","mode","dec","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","el","getAttribute","setAttribute","removeAttribute","wrapper","parentElement","document","removeEventListener","e","preventDefault","activeElement","deltaY","getTouchSpin","toPublicApi","TailwindRenderer","_AbstractRenderer","_callSuper","_inherits","buildInputGroup","upButton","querySelector","downButton","core","newValue","updatePrefix","updatePostfix","updateButtonClass","existingContainer","closest","classList","contains","buildAdvancedInputGroup","buildBasicInputGroup","html","_detectInputSize","verticalbuttons","concat","prefix","buttonup_class","buttonup_txt","buttondown_class","buttondown_txt","postfix","tempDiv","createElement","innerHTML","trim","firstChild","insertBefore","prefixEl","nextSibling","postfixEl","className","replace","_applySizeClasses","hideEmptyPrefixPostfix","elementsHtml","isVertical","verticalWrapper","appendChild","includes","querySelectorAll","btn","addon","remove","textContent","type","button","directionalClass","AbstractRenderer","$","originalinput","container","elements","removeInjectedElements","_this$input$parentEle","parentelement","downButtons","_findElements","upButtons","verticalContainer","parent","attr","down","up","addClass","prefix_extraclass","postfix_extraclass","role","detached","_detached_prefix","detach","_detached_postfix","newsettings","inputTestId","TouchSpin","options","Element","TypeError","CoreTouchSpin","instance","window"],"mappings":"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"}