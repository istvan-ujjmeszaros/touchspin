{"version":3,"file":"jquery.touchspin-tailwind.min.js","sources":["../packages/core/src/index.js","../packages/renderers/tailwind/src/TailwindRenderer.js","../packages/core/src/AbstractRenderer.js","../src/entries/jquery-tailwind.js"],"sourcesContent":["// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Renderer class (e.g., Bootstrap5Renderer) or null for no UI\n * @property {string=} initval - Initial value for the input\n * @property {string=} replacementval - Value to use when input is empty\n * @property {boolean=} mousewheel - Enable/disable mousewheel support\n * @property {boolean=} verticalbuttons - Enable vertical button layout\n * @property {string=} verticalup - Text for vertical up button\n * @property {string=} verticaldown - Text for vertical down button\n * @property {string=} verticalupclass - CSS classes for vertical up button (handled by renderer)\n * @property {string=} verticaldownclass - CSS classes for vertical down button (handled by renderer)\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} prefix_extraclass - Extra CSS classes for prefix element (handled by renderer)\n * @property {string=} postfix_extraclass - Extra CSS classes for postfix element (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  initval: '',\n  replacementval: '',\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  verticalbuttons: false,\n  verticalup: '+',\n  verticaldown: '-',\n  verticalupclass: null,\n  verticaldownclass: null,\n  prefix: '',\n  postfix: '',\n  prefix_extraclass: '',\n  postfix_extraclass: '',\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  mousewheel: true,\n  buttonup_class: null,\n  buttondown_class: null,\n  buttonup_txt: '+',\n  buttondown_txt: '-',\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n\n    // Check for renderer: explicit option > global default > none\n    if (!this.settings.renderer) {\n      // Check for global default renderer\n      if (typeof globalThis !== 'undefined' && globalThis.TouchSpinDefaultRenderer) {\n        this.settings.renderer = globalThis.TouchSpinDefaultRenderer;\n      } else {\n        // Allow no renderer for keyboard/wheel-only functionality\n        console.warn('TouchSpin: No renderer specified (renderer: null). Only keyboard/wheel events will work. Consider using Bootstrap3/4/5Renderer or TailwindRenderer for UI.');\n      }\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n\n    // Set up mutation observer to watch for disabled/readonly changes\n    this._setupMutationObserver();\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Set initial value if specified and input is empty\n    if (this.settings.initval !== '' && this.input.value === '') {\n      this.input.value = this.settings.initval;\n    }\n    \n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    this.settings = Object.assign({}, this.settings, newSettings);\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((newSettings.step !== undefined || newSettings.min !== undefined || newSettings.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of changed settings\n    Object.keys(newSettings).forEach(key => {\n      if (oldSettings[key] !== newSettings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(newSettings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    let raw = this.input.value;\n    if (raw === '' && this.settings.replacementval !== '') {\n      raw = this.settings.replacementval;\n    }\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Clean up mutation observer\n    if (this._mutationObserver) {\n      this._mutationObserver.disconnect();\n      this._mutationObserver = null;\n    }\n\n    // Clear button references\n    this._upButton = null;\n    this._downButton = null;\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    this._upButton = element;\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n    \n    // Update disabled state immediately after attaching\n    this._updateButtonDisabledState();\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    this._downButton = element;\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n    \n    // Update disabled state immediately after attaching\n    this._updateButtonDisabledState();\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('input', this._handleInputChange);\n    this.input.addEventListener('change', this._handleInputChange);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('input', this._handleInputChange);\n    this.input.removeEventListener('change', this._handleInputChange);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle input/change events on the input element.\n   * @private\n   */\n  _handleInputChange(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(true);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (!this.settings.mousewheel) {\n      return;\n    }\n    \n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n\n  /**\n   * Set up mutation observer to watch for disabled/readonly attribute changes\n   * @private\n   */\n  _setupMutationObserver() {\n    if (typeof MutationObserver !== 'undefined') {\n      this._mutationObserver = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.type === 'attributes') {\n            if (mutation.attributeName === 'disabled' || mutation.attributeName === 'readonly') {\n              this._updateButtonDisabledState();\n            }\n          }\n        });\n      });\n\n      this._mutationObserver.observe(this.input, {\n        attributes: true,\n        attributeFilter: ['disabled', 'readonly']\n      });\n    }\n  }\n\n  /**\n   * Update button disabled state based on input disabled/readonly state\n   * @private\n   */\n  _updateButtonDisabledState() {\n    const isDisabled = this.input.disabled || this.input.hasAttribute('readonly');\n    \n    if (this._upButton) {\n      this._upButton.disabled = isDisabled;\n    }\n    if (this._downButton) {\n      this._downButton.disabled = isDisabled;\n    }\n\n    if (isDisabled) {\n      this.stopSpin();\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function TouchSpin(inputEl, opts) {\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Note: AbstractRenderer is not exported as it's only needed by renderer implementations\n// Renderers should import it directly: import AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n","/**\n * Tailwind CSS Renderer - New Architecture\n * Uses Tailwind utility classes only; no Bootstrap CSS dependency.\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass TailwindRenderer extends AbstractRenderer {\n\n  init() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    \n    // 2. Find created buttons\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    \n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n    \n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n    this.core.observeSetting('verticalupclass', (newValue) => this.updateVerticalButtonClass('up', newValue));\n    this.core.observeSetting('verticaldownclass', (newValue) => this.updateVerticalButtonClass('down', newValue));\n    this.core.observeSetting('verticalup', (newValue) => this.updateVerticalButtonText('up', newValue));\n    this.core.observeSetting('verticaldown', (newValue) => this.updateVerticalButtonText('down', newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside a flex container\n    const existingContainer = this.input.closest('.flex');\n    \n    if (existingContainer && existingContainer.classList.contains('rounded-md')) {\n      return this.buildAdvancedInputGroup(existingContainer);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup() {\n    const inputSize = this._detectInputSize();\n    const isVertical = this.settings.verticalbuttons;\n    const testidAttr = this.getWrapperTestId();\n    \n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\"${testidAttr}>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          ${this.buildVerticalButtons()}\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\"${testidAttr}>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-l-md tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-r-md tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n    \n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n    \n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n    \n    // Find the position to insert input (after prefix, before postfix)\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    if (prefixEl) {\n      wrapper.insertBefore(this.input, prefixEl.nextSibling);\n    } else {\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n      wrapper.insertBefore(this.input, postfixEl);\n    }\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(wrapper);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n    \n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingContainer) {\n    // Add bootstrap-touchspin class to existing container\n    existingContainer.classList.add('bootstrap-touchspin');\n    existingContainer.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n    \n    // Add testid if input has one\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) {\n      existingContainer.setAttribute('data-testid', `${inputTestId}-wrapper`);\n    }\n    \n    const isVertical = this.settings.verticalbuttons;\n    \n    // Create elements HTML\n    let elementsHtml;\n    if (isVertical) {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        ${this.buildVerticalButtons()}\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    } else {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    }\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n    \n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingContainer.insertBefore(prefixEl, this.input);\n    \n    if (isVertical) {\n      // Insert vertical button wrapper after the input\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      existingContainer.insertBefore(verticalWrapper, this.input.nextSibling);\n    } else {\n      // Insert down button before the input\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]');\n      existingContainer.insertBefore(downButton, this.input);\n      \n      // Insert up button after the input\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]');\n      existingContainer.insertBefore(upButton, this.input.nextSibling);\n    }\n    \n    // Insert postfix after everything\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingContainer.appendChild(postfixEl);\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(existingContainer);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingContainer);\n    \n    return existingContainer;\n  }\n\n  _detectInputSize() {\n    const classList = this.input.className;\n    if (classList.includes('text-sm') || classList.includes('py-1')) {\n      return 'text-sm py-1 px-2';\n    } else if (classList.includes('text-lg') || classList.includes('py-3')) {\n      return 'text-lg py-3 px-4';\n    }\n    return 'text-base py-2 px-3';\n  }\n\n  _applySizeClasses(wrapper = this.wrapper) {\n    const s = this._detectInputSize();\n    if (s.includes('text-sm')) {\n      wrapper.classList.add('text-sm');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-1', 'px-2', 'text-sm');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-1', 'px-2', 'text-sm');\n      });\n    } else if (s.includes('text-lg')) {\n      wrapper.classList.add('text-lg');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-3', 'px-4', 'text-lg');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-3', 'px-4', 'text-lg');\n      });\n    }\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.remove();\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.remove();\n    }\n  }\n\n  updatePrefix(value) {\n    let prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    \n    if (value && value !== '') {\n      if (!prefixEl) {\n        // Re-create prefix element if it was removed\n        prefixEl = document.createElement('span');\n        prefixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        prefixEl.setAttribute('data-touchspin-injected', 'prefix');\n        prefixEl.textContent = value;\n        // Insert at the beginning of the wrapper\n        this.wrapper.insertBefore(prefixEl, this.wrapper.firstChild);\n      } else {\n        prefixEl.textContent = value;\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      prefixEl.remove();\n    }\n  }\n  \n  updatePostfix(value) {\n    let postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (value && value !== '') {\n      if (!postfixEl) {\n        // Re-create postfix element if it was removed\n        postfixEl = document.createElement('span');\n        postfixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        postfixEl.setAttribute('data-touchspin-injected', 'postfix');\n        postfixEl.textContent = value;\n        // Insert at the end of the wrapper\n        this.wrapper.appendChild(postfixEl);\n      } else {\n        postfixEl.textContent = value;\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      postfixEl.remove();\n    }\n  }\n  \n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      // Remove old custom classes and add new ones\n      const baseClasses = 'inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn';\n      const directionalClass = type === 'up' ? 'bootstrap-touchspin-up' : 'bootstrap-touchspin-down';\n      button.className = `${baseClasses} ${directionalClass} ${className || ''}`;\n    }\n  }\n\n  buildVerticalButtons() {\n    return `\n      <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs ${this.settings.verticalupclass || 'bg-gray-100 hover:bg-gray-200 text-gray-700'} font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up disabled:opacity-50 disabled:cursor-not-allowed\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.verticalup || '+'}</button>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs ${this.settings.verticaldownclass || 'bg-gray-100 hover:bg-gray-200 text-gray-700'} font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down disabled:opacity-50 disabled:cursor-not-allowed\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.verticaldown || '-'}</button>\n      </div>\n    `;\n  }\n\n  updateVerticalButtonClass(type, className) {\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        // Update the vertical-specific class while preserving base classes\n        const baseClasses = 'inline-flex items-center justify-center px-2 py-1 text-xs font-medium border border-gray-300 tailwind-btn disabled:opacity-50 disabled:cursor-not-allowed';\n        const roundingClass = type === 'up' ? 'rounded-t border-b-0' : 'rounded-b border-t-0';\n        const directionalClass = `bootstrap-touchspin-${type}`;\n        button.className = `${baseClasses} ${roundingClass} ${directionalClass} ${className || 'bg-gray-100 hover:bg-gray-200 text-gray-700'}`;\n      }\n    }\n  }\n\n  updateVerticalButtonText(type, text) {\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        button.textContent = text || (type === 'up' ? '+' : '-');\n      }\n    }\n  }\n\n}\n\nexport default TailwindRenderer;\n","/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n * \n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n    \n    // Legacy compatibility (transitional)\n    this.$ = typeof $ !== 'undefined' ? $ : null;\n    this.originalinput = this.$ ? this.$(inputEl) : null;\n    this.container = null;\n    this.elements = null;\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() { \n    throw new Error('init() must be implemented by renderer'); \n  }\n  \n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n  \n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n      \n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n        \n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n    \n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) || \n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // Legacy methods (transitional - for backward compatibility)\n  getFrameworkId() { throw new Error('getFrameworkId() must be implemented by subclasses'); }\n  buildAdvancedInputGroup(parentelement) { throw new Error('buildAdvancedInputGroup() must be implemented by subclasses'); }\n  buildInputGroup() { throw new Error('buildInputGroup() must be implemented by subclasses'); }\n  buildVerticalButtons() { throw new Error('buildVerticalButtons() must be implemented by subclasses'); }\n\n  initElements(container) {\n    this.container = container;\n    let downButtons = this._findElements(container, 'down');\n    let upButtons = this._findElements(container, 'up');\n    if (downButtons.length === 0 || upButtons.length === 0) {\n      const verticalContainer = this._findElements(container.parent(), 'vertical-wrapper');\n      if (verticalContainer.length > 0) {\n        downButtons = this._findElements(verticalContainer, 'down');\n        upButtons = this._findElements(verticalContainer, 'up');\n      }\n    }\n    \n    // Ensure input element has data-touchspin-injected=\"input\" for core event targeting\n    this.originalinput.attr('data-touchspin-injected', 'input');\n    \n    this.elements = {\n      down: downButtons,\n      up: upButtons,\n      input: this.$('input', container),\n      prefix: this._findElements(container, 'prefix').addClass(this.settings.prefix_extraclass),\n      postfix: this._findElements(container, 'postfix').addClass(this.settings.postfix_extraclass)\n    };\n    return this.elements;\n  }\n\n  _findElements(container, role) { return this.$(`[data-touchspin-injected=\"${role}\"]`, container); }\n\n  hideEmptyPrefixPostfix() {\n    const detached = {};\n    if (this.settings.prefix === '') detached._detached_prefix = this.elements.prefix.detach();\n    if (this.settings.postfix === '') detached._detached_postfix = this.elements.postfix.detach();\n    return detached;\n  }\n\n  updatePrefixPostfix(newsettings, detached) { throw new Error('updatePrefixPostfix() must be implemented by subclasses'); }\n\n  getWrapperTestId() {\n    // Modern vanilla JS version\n    const inputTestId = this.input.getAttribute('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","// jQuery Tailwind build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin, CORE_EVENTS } from '../../packages/core/src/index.js';\nimport TailwindRenderer from '../../packages/renderers/tailwind/src/TailwindRenderer.js';\n\n// Wrapper function for standalone use (when jQuery is not available)\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n  \n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || TailwindRenderer;\n  \n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Custom jQuery plugin installer with baked-in TailwindRenderer\nfunction installJqueryTouchSpin($) {\n  $.fn.TouchSpin = function(options, arg) {\n    // Command API - forward to core (core manages instance lifecycle)\n    if (typeof options === 'string') {\n      const cmd = String(options).toLowerCase();\n      let ret;\n      this.each(function() {\n        const inputEl = /** @type {HTMLInputElement} */ (this);\n        const api = getTouchSpin(inputEl);\n        \n        // Handle get/getvalue specially - fall back to raw input value if no instance\n        if ((cmd === 'getvalue' || cmd === 'get') && ret === undefined) {\n          if (api) {\n            ret = api.getValue();\n          } else {\n            // No TouchSpin instance - return raw input value\n            ret = inputEl.value;\n          }\n          return; // Skip other commands if no instance\n        }\n        \n        if (!api) return; // No instance exists - other commands ignored\n        \n        switch (cmd) {\n          case 'destroy': api.destroy(); break; // Core removes instance from element\n          case 'uponce': api.upOnce(); break;\n          case 'downonce': api.downOnce(); break;\n          case 'startupspin': api.startUpSpin(); break;\n          case 'startdownspin': api.startDownSpin(); break;\n          case 'stopspin': api.stopSpin(); break;\n          case 'updatesettings': api.updateSettings(arg || {}); break;\n          case 'setvalue': case 'set': api.setValue(arg); break;\n        }\n      });\n      return ret === undefined ? this : ret;\n    }\n\n    // Initialize - use TouchSpin wrapper with baked-in renderer\n    return this.each(function() {\n      const $input = $(this);\n      const inputEl = /** @type {HTMLInputElement} */ (this);\n      \n      // Create TouchSpin instance with baked-in TailwindRenderer\n      const opts = options || {};\n      opts.renderer = opts.renderer || TailwindRenderer;\n      const inst = CoreTouchSpin(inputEl, opts);\n\n      // Bridge core events to jQuery events (minimal event forwarding only)\n      const evMap = {\n        [CORE_EVENTS.MIN]: 'touchspin.on.min',\n        [CORE_EVENTS.MAX]: 'touchspin.on.max',\n        [CORE_EVENTS.START_SPIN]: 'touchspin.on.startspin',\n        [CORE_EVENTS.START_UP]: 'touchspin.on.startupspin',\n        [CORE_EVENTS.START_DOWN]: 'touchspin.on.startdownspin',\n        [CORE_EVENTS.STOP_SPIN]: 'touchspin.on.stopspin',\n        [CORE_EVENTS.STOP_UP]: 'touchspin.on.stopupspin',\n        [CORE_EVENTS.STOP_DOWN]: 'touchspin.on.stopdownspin',\n      };\n      \n      // Store unsubscribe functions for cleanup\n      const unsubs = [];\n      Object.keys(evMap).forEach(k => {\n        unsubs.push(inst.on(k, () => $input.trigger(evMap[k])));\n      });\n\n      // Define jQuery teardown function that cleans up jQuery-specific resources\n      const jqueryTeardown = () => {\n        // Clean up event subscriptions to core\n        unsubs.forEach(unsub => {\n          try { unsub(); } catch {} \n        });\n        // Clean up jQuery events\n        $input.off('touchspin.uponce touchspin.downonce touchspin.startupspin touchspin.startdownspin touchspin.stopspin touchspin.updatesettings touchspin.destroy');\n      };\n\n      // Register teardown with core so it's called on core destroy too\n      inst.registerTeardown(jqueryTeardown);\n\n      // Callable events - forward to core (core manages lifecycle)\n      $input.on('touchspin.uponce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.upOnce();\n      });\n      $input.on('touchspin.downonce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.downOnce();\n      });\n      $input.on('touchspin.startupspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startUpSpin();\n      });\n      $input.on('touchspin.startdownspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startDownSpin();\n      });\n      $input.on('touchspin.stopspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.stopSpin();\n      });\n      $input.on('touchspin.updatesettings', (e, o) => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.updateSettings(o || {});\n      });\n      $input.on('touchspin.destroy', () => {\n        // Forward destroy to core (core will call registered teardown callbacks)\n        const api = getTouchSpin(inputEl);\n        if (api) api.destroy();\n      });\n    });\n  };\n}\n\n// Install jQuery plugin if jQuery is available\nif (typeof window !== 'undefined' && window.jQuery) {\n  installJqueryTouchSpin(window.jQuery);\n}\n\n// For jQuery builds, ensure globals are properly exposed for direct access\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.TailwindRenderer = TailwindRenderer;\n  window.installJqueryTouchSpin = installJqueryTouchSpin;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, TailwindRenderer, installJqueryTouchSpin };"],"names":["DEFAULTS","min","max","initval","replacementval","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","verticalbuttons","verticalup","verticaldown","verticalupclass","verticaldownclass","prefix","postfix","prefix_extraclass","postfix_extraclass","booster","boostat","maxboostedstep","mousewheel","buttonup_class","buttondown_class","buttonup_txt","buttondown_txt","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","_createClass","inputEl","opts","arguments","length","undefined","_classCallCheck","nodeName","Error","this","input","settings","Object","assign","renderer","globalThis","TouchSpinDefaultRenderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleInputChange","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","init","_setupMutationObserver","key","value","_updateAriaAttributes","_checkValue","disabled","hasAttribute","getValue","next","_nextValue","prevNum","_setDisplay","isFinite","emit","stopSpin","_startSpin","_clearSpinTimers","_this","oldSettings","_objectSpread","newSettings","Number","_alignToStep","keys","forEach","observers","get","callback","error","raw","NaN","before","num","parseFloat","String","isNaN","parsed","adjusted","_applyConstraints","_findDOMElements","_attachDOMEventListeners","_this2","push","index","indexOf","splice","teardown","_detachDOMEventListeners","clear","_mutationObserver","disconnect","upOnce","downOnce","startUpSpin","startDownSpin","updateSettings","setValue","destroy","on","off","initDOMEventHandling","registerTeardown","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","_updateButtonDisabledState","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i","_arr","_toConsumableArray","fn","_","dir","_this4","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused","clearInterval","_unused2","current","_valueIfIsNaN","base","Math","parseInt","stepUnclamped","pow","floor","mbs","round","aligned","_forcestepdivisibility","clamped","boosted","cap","val","out","mode","dec","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","el","getAttribute","setAttribute","removeAttribute","wrapper","parentElement","document","removeEventListener","e","preventDefault","activeElement","deltaY","_this5","MutationObserver","mutations","mutation","type","attributeName","observe","attributes","attributeFilter","isDisabled","TouchSpin","core","toPublicApi","getTouchSpin","CORE_EVENTS","freeze","MIN","MAX","START_SPIN","START_UP","START_DOWN","STOP_SPIN","STOP_UP","STOP_DOWN","TailwindRenderer","_AbstractRenderer","_callSuper","_inherits","buildInputGroup","upButton","querySelector","downButton","newValue","updatePrefix","updatePostfix","updateButtonClass","updateVerticalButtonClass","updateVerticalButtonText","existingContainer","closest","classList","contains","buildAdvancedInputGroup","buildBasicInputGroup","_detectInputSize","html","isVertical","testidAttr","getWrapperTestId","concat","buildVerticalButtons","tempDiv","createElement","innerHTML","trim","firstChild","insertBefore","prefixEl","nextSibling","postfixEl","className","replace","_applySizeClasses","hideEmptyPrefixPostfix","inputTestId","elementsHtml","verticalWrapper","appendChild","includes","querySelectorAll","btn","addon","remove","textContent","button","directionalClass","roundingClass","text","AbstractRenderer","$","originalinput","container","elements","removeInjectedElements","_this$input$parentEle","parentelement","downButtons","_findElements","upButtons","verticalContainer","parent","attr","down","up","addClass","role","detached","_detached_prefix","detach","_detached_postfix","newsettings","options","Element","TypeError","CoreTouchSpin","installJqueryTouchSpin","arg","ret","cmd","toLowerCase","each","api","$input","inst","evMap","_defineProperty","unsubs","trigger","unsub","o","window","jQuery"],"mappings":"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"}