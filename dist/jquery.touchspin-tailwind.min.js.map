{"version":3,"file":"jquery.touchspin-tailwind.min.js","sources":["../packages/core/src/AbstractRenderer.js","../packages/core/src/index.js","../packages/renderers/tailwind/src/TailwindRenderer.js","../src/entries/jquery-tailwind.js"],"sourcesContent":["/**\n * AbstractRenderer - Base class for TouchSpin renderers\n * Part of @touchspin/core package to avoid duplication across renderer packages\n * \n * @example\n * class CustomRenderer extends AbstractRenderer {\n *   init() {\n *     this.wrapper = this.buildUI();\n *     const upBtn = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n *     const downBtn = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n *     this.core.attachUpEvents(upBtn);\n *     this.core.attachDownEvents(downBtn);\n *     this.core.observeSetting('prefix', (value) => this.updatePrefix(value));\n *   }\n * }\n */\nclass AbstractRenderer {\n  /**\n   * @param {HTMLInputElement} inputEl - The input element to render around\n   * @param {Object} settings - TouchSpin settings (read-only)\n   * @param {Object} core - TouchSpin core instance for event delegation\n   */\n  constructor(inputEl, settings, core) {\n    // New renderer architecture\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {Object} */\n    this.settings = settings; // Read-only access to settings\n    /** @type {Object} */\n    this.core = core; // Reference to core for calling attachment methods\n    /** @type {HTMLElement|null} */\n    this.wrapper = null; // Set by subclasses during init()\n    \n    // Legacy compatibility (transitional)\n    this.$ = typeof $ !== 'undefined' ? $ : null;\n    this.originalinput = this.$ ? this.$(inputEl) : null;\n    this.container = null;\n    this.elements = null;\n  }\n\n  /**\n   * Initialize the renderer - build DOM structure and attach events\n   * Must be implemented by subclasses\n   * @abstract\n   */\n  init() { \n    throw new Error('init() must be implemented by renderer'); \n  }\n  \n  /**\n   * Cleanup renderer - remove injected elements and restore original state\n   * Default implementation removes all injected elements\n   * Subclasses can override for custom teardown\n   */\n  teardown() {\n    // Default implementation - remove all injected elements\n    this.removeInjectedElements();\n    // Subclasses can override for custom teardown\n  }\n  \n  /**\n   * Utility method to remove all injected TouchSpin elements\n   * Handles both regular wrappers and advanced input groups\n   * Called automatically by teardown()\n   */\n  removeInjectedElements() {\n    // Find and remove all elements with data-touchspin-injected attribute\n    if (this.wrapper) {\n      const injected = this.wrapper.querySelectorAll('[data-touchspin-injected]');\n      injected.forEach(el => el.remove());\n      \n      // If wrapper itself was injected and is not the original parent\n      if (this.wrapper.hasAttribute('data-touchspin-injected') && this.wrapper.parentElement) {\n        const injectedType = this.wrapper.getAttribute('data-touchspin-injected');\n        \n        if (injectedType === 'wrapper-advanced') {\n          // For advanced input groups, just remove the TouchSpin classes and attribute\n          // but keep the original input-group structure intact\n          this.wrapper.classList.remove('bootstrap-touchspin');\n          this.wrapper.removeAttribute('data-touchspin-injected');\n        } else {\n          // For regular wrappers, unwrap the input element\n          const parent = this.wrapper.parentElement;\n          parent.insertBefore(this.input, this.wrapper);\n          this.wrapper.remove();\n        }\n      }\n    }\n    \n    // Also find any injected elements that might be siblings or elsewhere\n    const allInjected = document.querySelectorAll('[data-touchspin-injected]');\n    allInjected.forEach(el => {\n      // Only remove if it's related to this input (check if input is descendant or sibling)\n      if (el.contains(this.input) || \n          (el.parentElement && el.parentElement.contains(this.input)) ||\n          this.input.parentElement?.contains(el)) {\n        // Don't remove the input itself\n        if (el !== this.input) {\n          el.remove();\n        }\n      }\n    });\n  }\n\n  // Legacy methods (transitional - for backward compatibility)\n  getFrameworkId() { throw new Error('getFrameworkId() must be implemented by subclasses'); }\n  getDefaultSettings() { return {}; }\n  buildAdvancedInputGroup(parentelement) { throw new Error('buildAdvancedInputGroup() must be implemented by subclasses'); }\n  buildInputGroup() { throw new Error('buildInputGroup() must be implemented by subclasses'); }\n  buildVerticalButtons() { throw new Error('buildVerticalButtons() must be implemented by subclasses'); }\n\n  initElements(container) {\n    this.container = container;\n    let downButtons = this._findElements(container, 'down');\n    let upButtons = this._findElements(container, 'up');\n    if (downButtons.length === 0 || upButtons.length === 0) {\n      const verticalContainer = this._findElements(container.parent(), 'vertical-wrapper');\n      if (verticalContainer.length > 0) {\n        downButtons = this._findElements(verticalContainer, 'down');\n        upButtons = this._findElements(verticalContainer, 'up');\n      }\n    }\n    \n    // Ensure input element has data-touchspin-injected=\"input\" for core event targeting\n    this.originalinput.attr('data-touchspin-injected', 'input');\n    \n    this.elements = {\n      down: downButtons,\n      up: upButtons,\n      input: this.$('input', container),\n      prefix: this._findElements(container, 'prefix').addClass(this.settings.prefix_extraclass),\n      postfix: this._findElements(container, 'postfix').addClass(this.settings.postfix_extraclass)\n    };\n    return this.elements;\n  }\n\n  _findElements(container, role) { return this.$(`[data-touchspin-injected=\"${role}\"]`, container); }\n\n  hideEmptyPrefixPostfix() {\n    const detached = {};\n    if (this.settings.prefix === '') detached._detached_prefix = this.elements.prefix.detach();\n    if (this.settings.postfix === '') detached._detached_postfix = this.elements.postfix.detach();\n    return detached;\n  }\n\n  updatePrefixPostfix(newsettings, detached) { throw new Error('updatePrefixPostfix() must be implemented by subclasses'); }\n\n  getWrapperTestId() {\n    const inputTestId = this.originalinput.attr('data-testid');\n    if (inputTestId) return ` data-testid=\"${inputTestId}-wrapper\"`;\n    return '';\n  }\n}\n\nexport default AbstractRenderer;","// @ts-check\n\n/**\n * @fileoverview Framework-agnostic core scaffold for TouchSpin.\n * Phase A (A1): minimal public API surface to enable incremental extraction.\n * This is a placeholder; logic will be ported from TouchSpinCore.migrated.js in A2â€“A7.\n */\n\n/**\n * @typedef {'none'|'floor'|'round'|'ceil'} ForceStepDivisibility\n */\n\n/**\n * @callback TouchSpinCalcCallback\n * @param {string} value\n * @returns {string}\n */\n\n/**\n * @typedef {Object} TouchSpinCoreOptions\n * @property {number|null=} min\n * @property {number|null=} max\n * @property {number|null=} firstclickvalueifempty\n * @property {number=} step\n * @property {number=} decimals\n * @property {ForceStepDivisibility=} forcestepdivisibility\n * @property {number=} stepinterval\n * @property {number=} stepintervaldelay\n * @property {boolean=} booster\n * @property {number=} boostat\n * @property {number|false=} maxboostedstep\n * @property {TouchSpinCalcCallback=} callback_before_calculation\n * @property {TouchSpinCalcCallback=} callback_after_calculation\n * @property {Function} renderer - Renderer class (e.g., Bootstrap5Renderer) or null for no UI\n * @property {string=} prefix - Text/HTML before input (handled by renderer)\n * @property {string=} postfix - Text/HTML after input (handled by renderer)\n * @property {string=} buttonup_class - CSS classes for up button (handled by renderer)\n * @property {string=} buttondown_class - CSS classes for down button (handled by renderer)\n * @property {string=} buttonup_txt - Content for up button (handled by renderer)\n * @property {string=} buttondown_txt - Content for down button (handled by renderer)\n */\n\nconst DEFAULTS = {\n  min: 0,\n  max: 100,\n  firstclickvalueifempty: null,\n  step: 1,\n  decimals: 0,\n  forcestepdivisibility: 'round',\n  stepinterval: 100,\n  stepintervaldelay: 500,\n  booster: true,\n  boostat: 10,\n  maxboostedstep: false,\n  callback_before_calculation: (v) => v,\n  callback_after_calculation: (v) => v,\n};\n\nconst INSTANCE_KEY = '_touchSpinCore';\n\nexport class TouchSpinCore {\n  /**\n   * @param {HTMLInputElement} inputEl\n   * @param {Partial<TouchSpinCoreOptions>=} opts\n   */\n  constructor(inputEl, opts = {}) {\n    if (!inputEl || inputEl.nodeName !== 'INPUT') {\n      throw new Error('TouchSpinCore requires an <input> element');\n    }\n\n    /** @type {HTMLInputElement} */\n    this.input = inputEl;\n    /** @type {TouchSpinCoreOptions} */\n    this.settings = Object.assign({}, DEFAULTS, opts);\n\n    // Allow no renderer for keyboard/wheel-only functionality\n    if (!this.settings.renderer) {\n      console.warn('TouchSpin: No renderer specified (renderer: null). Only keyboard/wheel events will work. Consider using Bootstrap3/4/5Renderer or TailwindRenderer for UI.');\n    }\n\n    /** @type {boolean} */\n    this.spinning = false;\n    /** @type {number} */\n    this.spincount = 0;\n    /** @type {false|'up'|'down'} */\n    this.direction = false;\n    /** @type {Map<string, Set<Function>>} */\n    this._events = new Map();\n    /** @type {Array<Function>} */\n    this._teardownCallbacks = [];\n    /** @type {Map<string, Set<Function>>} */\n    this._settingObservers = new Map(); // For observer pattern\n\n    /** @type {ReturnType<typeof setTimeout>|null} */\n    this._spinDelayTimeout = null;\n    /** @type {ReturnType<typeof setInterval>|null} */\n    this._spinIntervalTimer = null;\n\n    /** @type {HTMLElement|null} */\n    this._upButton = null;\n    /** @type {HTMLElement|null} */\n    this._downButton = null;\n    /** @type {HTMLElement|null} */\n    this._wrapper = null;\n\n    // DOM event handlers (bound methods)\n    this._handleUpMouseDown = this._handleUpMouseDown.bind(this);\n    this._handleDownMouseDown = this._handleDownMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._handleKeyUp = this._handleKeyUp.bind(this);\n    this._handleWheel = this._handleWheel.bind(this);\n\n    // Core always manages the input element\n    this._initializeInput();\n\n    // Initialize renderer with reference to core\n    if (this.settings.renderer) {\n      this.renderer = new this.settings.renderer(inputEl, this.settings, this);\n      this.renderer.init();\n    }\n  }\n\n  /**\n   * Initialize input element (core always handles this)\n   * @private\n   */\n  _initializeInput() {\n    // Core always handles these for the input\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** Increment once according to step */\n  upOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('up', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the max while spinning upward, stop the spin to release lock\n    if (this.spinning && this.direction === 'up' && this.settings.max != null && next === this.settings.max) {\n      this.stopSpin();\n    }\n  }\n\n  /** Decrement once according to step */\n  downOnce() {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) {\n      return;\n    }\n\n    const v = this.getValue();\n    const next = this._nextValue('down', v);\n    const prevNum = v;\n    this._setDisplay(next, true);\n    if (isFinite(prevNum) && next !== prevNum) {\n      if (this.settings.max != null && next === this.settings.max) this.emit('max');\n      if (this.settings.min != null && next === this.settings.min) this.emit('min');\n    }\n    // If we hit the min while spinning downward, stop the spin to release lock\n    if (this.spinning && this.direction === 'down' && this.settings.min != null && next === this.settings.min) {\n      this.stopSpin();\n    }\n  }\n\n  /** Start increasing repeatedly (placeholder) */\n  startUpSpin() { this._startSpin('up'); }\n\n  /** Start decreasing repeatedly (placeholder) */\n  startDownSpin() { this._startSpin('down'); }\n\n  /** Stop spinning (placeholder) */\n  stopSpin() {\n    this._clearSpinTimers();\n    if (this.spinning) {\n      if (this.direction === 'up') {\n        this.emit('stopupspin');\n        this.emit('stopspin');\n      } else if (this.direction === 'down') {\n        this.emit('stopdownspin');\n        this.emit('stopspin');\n      }\n    }\n    this.spinning = false;\n    this.direction = false;\n    this.spincount = 0;\n  }\n\n  /**\n   * @param {Partial<TouchSpinCoreOptions>} opts\n   */\n  updateSettings(opts) {\n    const oldSettings = { ...this.settings };\n    const newSettings = opts || {};\n\n    this.settings = Object.assign({}, this.settings, newSettings);\n\n    // If step/min/max changed and step != 1, align bounds to step like the jQuery plugin\n    const step = Number(this.settings.step || 1);\n    if ((newSettings.step !== undefined || newSettings.min !== undefined || newSettings.max !== undefined) && step !== 1) {\n      if (this.settings.max != null) {\n        this.settings.max = this._alignToStep(Number(this.settings.max), step, 'down');\n      }\n      if (this.settings.min != null) {\n        this.settings.min = this._alignToStep(Number(this.settings.min), step, 'up');\n      }\n    }\n\n    // Notify observers of changed settings\n    Object.keys(newSettings).forEach(key => {\n      if (oldSettings[key] !== newSettings[key]) {\n        const observers = this._settingObservers.get(key);\n        if (observers) {\n          observers.forEach(callback => {\n            try {\n              callback(newSettings[key], oldSettings[key]);\n            } catch (error) {\n              console.error('TouchSpin: Error in setting observer callback:', error);\n            }\n          });\n        }\n      }\n    });\n\n    // Core handles its own setting changes\n    this._updateAriaAttributes();\n    this._checkValue(false);\n  }\n\n  /** @returns {number} */\n  getValue() {\n    const raw = this.input.value;\n    if (raw === '') return NaN;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    return isNaN(num) ? NaN : num;\n  }\n\n  /**\n   * @param {number|string} v\n   */\n  setValue(v) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    const parsed = Number(v);\n    if (!isFinite(parsed)) return;\n    const adjusted = this._applyConstraints(parsed);\n    this._setDisplay(adjusted, true);\n  }\n\n  /**\n   * Initialize DOM event handling by finding elements and attaching listeners.\n   * Must be called after the renderer has created the DOM structure.\n   */\n  initDOMEventHandling() {\n    // Find DOM elements and attach listeners\n    this._findDOMElements();\n    this._attachDOMEventListeners();\n  }\n\n  /**\n   * Register a teardown callback that will be called when the instance is destroyed.\n   * This allows wrapper libraries to register cleanup logic.\n   * @param {Function} callback - Function to call on destroy\n   * @returns {Function} - Unregister function\n   */\n  registerTeardown(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Teardown callback must be a function');\n    }\n    this._teardownCallbacks.push(callback);\n\n    // Return unregister function\n    return () => {\n      const index = this._teardownCallbacks.indexOf(callback);\n      if (index > -1) {\n        this._teardownCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /** Cleanup and destroy the TouchSpin instance */\n  destroy() {\n    this.stopSpin();\n\n    // Renderer cleans up its added elements\n    if (this.renderer && this.renderer.teardown) {\n      this.renderer.teardown();\n    }\n\n    // Core cleans up input events only\n    this._detachDOMEventListeners();\n\n    // Call all registered teardown callbacks (for wrapper cleanup)\n    this._teardownCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('TouchSpin teardown callback error:', error);\n      }\n    });\n    this._teardownCallbacks.length = 0; // Clear the array\n\n    // Clear setting observers\n    this._settingObservers.clear();\n\n    // Remove instance from element\n    if (this.input[INSTANCE_KEY] === this) {\n      delete this.input[INSTANCE_KEY];\n    }\n  }\n\n  /**\n   * Create a plain public API object with bound methods for wrappers.\n   * @returns {TouchSpinCorePublicAPI}\n   */\n  toPublicApi() {\n    return {\n      upOnce: this.upOnce.bind(this),\n      downOnce: this.downOnce.bind(this),\n      startUpSpin: this.startUpSpin.bind(this),\n      startDownSpin: this.startDownSpin.bind(this),\n      stopSpin: this.stopSpin.bind(this),\n      updateSettings: this.updateSettings.bind(this),\n      getValue: this.getValue.bind(this),\n      setValue: this.setValue.bind(this),\n      destroy: this.destroy.bind(this),\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      initDOMEventHandling: this.initDOMEventHandling.bind(this),\n      registerTeardown: this.registerTeardown.bind(this),\n      attachUpEvents: this.attachUpEvents.bind(this),\n      attachDownEvents: this.attachDownEvents.bind(this),\n      observeSetting: this.observeSetting.bind(this),\n    };\n  }\n\n  // --- Renderer Event Attachment Methods ---\n  /**\n   * Attach up button events to an element\n   * Called by renderers after creating up button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachUpEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachUpEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleUpMouseDown);\n    element.addEventListener('touchstart', this._handleUpMouseDown, {passive: false});\n  }\n\n  /**\n   * Attach down button events to an element\n   * Called by renderers after creating down button\n   * @param {HTMLElement|null} element - The element to attach events to\n   */\n  attachDownEvents(element) {\n    if (!element) {\n      console.warn('TouchSpin: attachDownEvents called with null element');\n      return;\n    }\n\n    element.addEventListener('mousedown', this._handleDownMouseDown);\n    element.addEventListener('touchstart', this._handleDownMouseDown, {passive: false});\n  }\n\n  // --- Settings Observer Pattern ---\n  /**\n   * Allow renderers to observe setting changes\n   * @param {string} settingName - Name of setting to observe\n   * @param {Function} callback - Function to call when setting changes (newValue, oldValue)\n   * @returns {Function} Unsubscribe function\n   */\n  observeSetting(settingName, callback) {\n    if (!this._settingObservers.has(settingName)) {\n      this._settingObservers.set(settingName, new Set());\n    }\n\n    const observers = this._settingObservers.get(settingName);\n    observers.add(callback);\n\n    // Return unsubscribe function\n    return () => observers.delete(callback);\n  }\n\n  // --- Minimal internal emitter API ---\n  /**\n   * Subscribe to a core event.\n   * Events: 'min', 'max', 'startspin', 'startupspin', 'startdownspin', 'stopspin', 'stopupspin', 'stopdownspin'\n   * @param {string} event\n   * @param {(detail?: any) => void} handler\n   */\n  on(event, handler) {\n    const set = this._events.get(event) || new Set();\n    set.add(handler);\n    this._events.set(event, set);\n    return () => this.off(event, handler);\n  }\n\n  /**\n   * Unsubscribe from a core event.\n   * @param {string} event\n   * @param {(detail?: any) => void=} handler\n   */\n  off(event, handler) {\n    const set = this._events.get(event);\n    if (!set) return;\n    if (!handler) {\n      this._events.delete(event);\n      return;\n    }\n    set.delete(handler);\n    if (set.size === 0) this._events.delete(event);\n  }\n\n  /**\n   * Emit a core event to subscribers.\n   * @param {string} event\n   * @param {any=} detail\n   */\n  emit(event, detail) {\n    const set = this._events.get(event);\n    if (!set || set.size === 0) return;\n    for (const fn of [...set]) {\n      try { fn(detail); } catch (_) {}\n    }\n  }\n\n  /**\n   * Internal: start timed spin in a direction with initial step, delay, then interval.\n   * @param {'up'|'down'} dir\n   */\n  _startSpin(dir) {\n    if (this.input.disabled || this.input.hasAttribute('readonly')) return;\n    // If changing direction, reset counters\n    const changed = (!this.spinning || this.direction !== dir);\n    if (changed) {\n      this.spinning = true;\n      this.direction = dir;\n      this.spincount = 0;\n      // Match jQuery plugin event order: startspin then direction-specific\n      this.emit('startspin');\n      if (dir === 'up') this.emit('startupspin'); else this.emit('startdownspin');\n    }\n\n    // Clear previous timers\n    this._clearSpinTimers();\n    // Schedule repeat after delay, then at interval (no immediate step; wrapper triggers first step)\n    const delay = this.settings.stepintervaldelay || 500;\n    const interval = this.settings.stepinterval || 100;\n    this._spinDelayTimeout = setTimeout(() => {\n      this._spinDelayTimeout = null;\n      this._spinIntervalTimer = setInterval(() => {\n        if (!this.spinning || this.direction !== dir) return; // safety\n        this._spinStep(dir);\n      }, interval);\n    }, delay);\n  }\n\n  _clearSpinTimers() {\n    try { if (this._spinDelayTimeout) { clearTimeout(this._spinDelayTimeout); } } catch {}\n    try { if (this._spinIntervalTimer) { clearInterval(this._spinIntervalTimer); } } catch {}\n    this._spinDelayTimeout = null;\n    this._spinIntervalTimer = null;\n  }\n\n  /**\n   * Compute the next numeric value for a direction, respecting step, booster and bounds.\n   * @param {'up'|'down'} dir\n   * @param {number} current\n   */\n  _nextValue(dir, current) {\n    let v = current;\n    if (isNaN(v)) {\n      v = this._valueIfIsNaN();\n    } else {\n      const base = this.settings.step || 1;\n      const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n      const stepUnclamped = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n      const mbs = this.settings.maxboostedstep;\n      let step = stepUnclamped;\n      if (mbs && isFinite(mbs) && stepUnclamped > Number(mbs)) {\n        step = Number(mbs);\n        // Align current value to the boosted step grid when clamped (parity with jQuery plugin)\n        v = Math.round(v / step) * step;\n      }\n      step = Math.max(base, step);\n      v = dir === 'up' ? v + step : v - step;\n    }\n    return this._applyConstraints(v);\n  }\n\n  /** Returns a reasonable value to use when current is NaN. */\n  _valueIfIsNaN() {\n    if (typeof this.settings.firstclickvalueifempty === 'number') {\n      return this.settings.firstclickvalueifempty;\n    }\n    const min = (typeof this.settings.min === 'number') ? this.settings.min : 0;\n    const max = (typeof this.settings.max === 'number') ? this.settings.max : min;\n    return (min + max) / 2;\n  }\n\n  /** Apply step divisibility and clamp to min/max. */\n  _applyConstraints(v) {\n    const aligned = this._forcestepdivisibility(v);\n    const min = this.settings.min;\n    const max = this.settings.max;\n    let clamped = aligned;\n    if (min != null && clamped < min) clamped = min;\n    if (max != null && clamped > max) clamped = max;\n    return clamped;\n  }\n\n  /** Determine the effective step with booster if enabled. */\n  _getBoostedStep() {\n    const base = this.settings.step || 1;\n    if (!this.settings.booster) return base;\n    const boostat = Math.max(1, parseInt(String(this.settings.boostat || 10), 10));\n    let boosted = Math.pow(2, Math.floor(this.spincount / boostat)) * base;\n    const mbs = this.settings.maxboostedstep;\n    if (mbs && isFinite(mbs)) {\n      const cap = Number(mbs);\n      if (boosted > cap) boosted = cap;\n    }\n    return Math.max(base, boosted);\n  }\n\n  /** Aligns value to step per forcestepdivisibility. */\n  _forcestepdivisibility(val) {\n    const mode = this.settings.forcestepdivisibility || 'round';\n    const step = this.settings.step || 1;\n    const dec = this.settings.decimals || 0;\n    let out;\n    switch (mode) {\n      case 'floor':\n        out = Math.floor(val / step) * step; break;\n      case 'ceil':\n        out = Math.ceil(val / step) * step; break;\n      case 'none':\n        out = val; break;\n      case 'round':\n      default:\n        out = Math.round(val / step) * step; break;\n    }\n    // Normalize to configured decimals without string pipeline; formatting applies later\n    return Number(out.toFixed(dec));\n  }\n\n  /** Aligns a value to nearest step boundary using integer arithmetic. */\n  _alignToStep(val, step, dir) {\n    if (step === 0) return val;\n    let k = 1, s = step;\n    while (((s * k) % 1) !== 0 && k < 1e6) k *= 10;\n    const V = Math.round(val * k);\n    const S = Math.round(step * k);\n    const r = V % S;\n    if (r === 0) return val;\n    return (dir === 'down' ? (V - r) : (V + (S - r))) / k;\n  }\n\n  /** Format and write to input, optionally emit change if different. */\n  _setDisplay(num, mayTriggerChange) {\n    const prev = String(this.input.value ?? '');\n    const next = this._formatDisplay(num);\n    this.input.value = next;\n    this._updateAriaAttributes();\n    if (mayTriggerChange && prev !== next) {\n      // mirror plugin behavior: trigger a native change event\n      this.input.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    return next;\n  }\n\n  _formatDisplay(num) {\n    const dec = this.settings.decimals || 0;\n    const after = this.settings.callback_after_calculation || ((v) => v);\n    const s = Number(num).toFixed(dec);\n    return after(s);\n  }\n\n  /**\n   * Perform one spin step in a direction while tracking spincount for booster.\n   * @param {'up'|'down'} dir\n   */\n  _spinStep(dir) {\n    this.spincount++;\n    if (dir === 'up') this.upOnce(); else this.downOnce();\n  }\n\n  /** Sanitize current input value and update display; optionally emits change. */\n  _checkValue(mayTriggerChange) {\n    const v = this.getValue();\n    if (!isFinite(v)) return;\n    const adjusted = this._applyConstraints(v);\n    this._setDisplay(adjusted, !!mayTriggerChange);\n  }\n\n  _updateAriaAttributes() {\n    const el = this.input;\n    if (el.getAttribute('role') !== 'spinbutton') {\n      el.setAttribute('role', 'spinbutton');\n    }\n    const min = this.settings.min;\n    const max = this.settings.max;\n    if (min != null) el.setAttribute('aria-valuemin', String(min)); else el.removeAttribute('aria-valuemin');\n    if (max != null) el.setAttribute('aria-valuemax', String(max)); else el.removeAttribute('aria-valuemax');\n    const raw = el.value;\n    const before = this.settings.callback_before_calculation || ((v) => v);\n    const num = parseFloat(before(String(raw)));\n    if (isFinite(num)) el.setAttribute('aria-valuenow', String(num)); else el.removeAttribute('aria-valuenow');\n    el.setAttribute('aria-valuetext', String(raw));\n  }\n\n  // --- DOM Event Handling Methods ---\n\n  /**\n   * Find and store references to DOM elements using data-touchspin-injected attributes.\n   * @private\n   */\n  _findDOMElements() {\n    // Core doesn't need to find buttons - renderers handle button events directly\n    // We only need to find the wrapper for potential future use\n    let wrapper = this.input.parentElement;\n    while (wrapper && !wrapper.hasAttribute('data-touchspin-injected')) {\n      wrapper = wrapper.parentElement;\n    }\n    this._wrapper = wrapper;\n  }\n\n  /**\n   * Attach DOM event listeners to elements.\n   * @private\n   */\n  _attachDOMEventListeners() {\n    // Core should NOT attach button events - renderers handle that via attachUpEvents/attachDownEvents\n\n    // Global mouseup/touchend to stop spinning\n    document.addEventListener('mouseup', this._handleMouseUp);\n    document.addEventListener('mouseleave', this._handleMouseUp);\n    document.addEventListener('touchend', this._handleMouseUp);\n\n    // Input events (always attach these - they work without renderer UI)\n    this.input.addEventListener('input', this._handleInputChange);\n    this.input.addEventListener('change', this._handleInputChange);\n    this.input.addEventListener('keydown', this._handleKeyDown);\n    this.input.addEventListener('keyup', this._handleKeyUp);\n    this.input.addEventListener('wheel', this._handleWheel);\n  }\n\n  /**\n   * Remove DOM event listeners.\n   * @private\n   */\n  _detachDOMEventListeners() {\n    // Core does not manage button events - renderers handle their own cleanup\n\n    // Global events\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.removeEventListener('mouseleave', this._handleMouseUp);\n    document.removeEventListener('touchend', this._handleMouseUp);\n\n    // Input events\n    this.input.removeEventListener('input', this._handleInputChange);\n    this.input.removeEventListener('change', this._handleInputChange);\n    this.input.removeEventListener('keydown', this._handleKeyDown);\n    this.input.removeEventListener('keyup', this._handleKeyUp);\n    this.input.removeEventListener('wheel', this._handleWheel);\n  }\n\n  // --- DOM Event Handlers ---\n\n  /**\n   * Handle mousedown/touchstart on up button.\n   * @private\n   */\n  _handleUpMouseDown(e) {\n    e.preventDefault();\n    this.upOnce();\n    this.startUpSpin();\n  }\n\n  /**\n   * Handle mousedown/touchstart on down button.\n   * @private\n   */\n  _handleDownMouseDown(e) {\n    e.preventDefault();\n    this.downOnce();\n    this.startDownSpin();\n  }\n\n  /**\n   * Handle mouseup/touchend/mouseleave to stop spinning.\n   * @private\n   */\n  _handleMouseUp(e) {\n    this.stopSpin();\n  }\n\n  /**\n   * Handle input/change events on the input element.\n   * @private\n   */\n  _handleInputChange(e) {\n    this._checkValue(true);\n  }\n\n  /**\n   * Handle keydown events on the input element.\n   * @private\n   */\n  _handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        this.upOnce();\n        this.startUpSpin();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.downOnce();\n        this.startDownSpin();\n        break;\n      case 'Enter':\n        this._checkValue(true);\n        break;\n    }\n  }\n\n  /**\n   * Handle keyup events on the input element.\n   * @private\n   */\n  _handleKeyUp(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      this.stopSpin();\n    }\n  }\n\n  /**\n   * Handle wheel events on the input element.\n   * @private\n   */\n  _handleWheel(e) {\n    if (document.activeElement === this.input) {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        this.upOnce();\n      } else if (e.deltaY > 0) {\n        this.downOnce();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {Object} TouchSpinCorePublicAPI\n * @property {() => void} upOnce\n * @property {() => void} downOnce\n * @property {() => void} startUpSpin\n * @property {() => void} startDownSpin\n * @property {() => void} stopSpin\n * @property {(opts: Partial<TouchSpinCoreOptions>) => void} updateSettings\n * @property {() => number} getValue\n * @property {(v: number|string) => void} setValue\n * @property {() => void} destroy\n * @property {(event: string, handler: (detail?: any) => void) => () => void} on\n * @property {(event: string, handler?: (detail?: any) => void) => void} off\n * @property {() => void} initDOMEventHandling\n * @property {(callback: Function) => () => void} registerTeardown\n */\n\n/**\n * Initialize TouchSpin on an input element or get existing instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n */\nexport function TouchSpin(inputEl, opts) {\n  // If options provided, initialize/reinitialize\n  if (opts !== undefined) {\n    // Destroy existing instance if it exists (destroy() removes itself from element)\n    if (inputEl[INSTANCE_KEY]) {\n      inputEl[INSTANCE_KEY].destroy();\n    }\n\n    // Create new instance and store on element\n    const core = new TouchSpinCore(inputEl, opts);\n    inputEl[INSTANCE_KEY] = core;\n\n    // Initialize DOM event handling\n    core.initDOMEventHandling();\n\n    return core.toPublicApi();\n  }\n\n  // No options - return existing instance or create with defaults\n  if (!inputEl[INSTANCE_KEY]) {\n    const core = new TouchSpinCore(inputEl, {});\n    inputEl[INSTANCE_KEY] = core;\n    core.initDOMEventHandling();\n    return core.toPublicApi();\n  }\n\n  return inputEl[INSTANCE_KEY].toPublicApi();\n}\n\n/**\n * Get existing TouchSpin instance from input element (without creating one).\n * @param {HTMLInputElement} inputEl\n * @returns {TouchSpinCorePublicAPI|null}\n */\nexport function getTouchSpin(inputEl) {\n  return inputEl[INSTANCE_KEY] ? inputEl[INSTANCE_KEY].toPublicApi() : null;\n}\n\n/**\n * Create and return a plain public API bound to a new core instance.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCorePublicAPI}\n * @deprecated Use TouchSpin() instead\n */\nexport function createPublicApi(inputEl, opts) {\n  return TouchSpin(inputEl, opts);\n}\n\n/** Event name constants for wrappers to map/bridge. */\nexport const CORE_EVENTS = Object.freeze({\n  MIN: 'min',\n  MAX: 'max',\n  START_SPIN: 'startspin',\n  START_UP: 'startupspin',\n  START_DOWN: 'startdownspin',\n  STOP_SPIN: 'stopspin',\n  STOP_UP: 'stopupspin',\n  STOP_DOWN: 'stopdownspin',\n});\n\n/**\n * Convenience helper to attach core to an input element.\n * @param {HTMLInputElement} inputEl\n * @param {Partial<TouchSpinCoreOptions>=} opts\n * @returns {TouchSpinCore}\n */\nexport function attach(inputEl, opts) {\n  return new TouchSpinCore(inputEl, opts);\n}\n\nexport default TouchSpinCore;\n\n// Export renderers\nexport { default as AbstractRenderer } from './AbstractRenderer.js';\n","/**\n * Tailwind CSS Renderer - New Architecture\n * Uses Tailwind utility classes only; no Bootstrap CSS dependency.\n */\nimport AbstractRenderer from '../../../core/src/AbstractRenderer.js';\n\nclass TailwindRenderer extends AbstractRenderer {\n\n  init() {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    \n    // 2. Find created buttons\n    const upButton = this.wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    \n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n    \n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n  }\n\n  // teardown() uses inherited removeInjectedElements() - no override needed\n\n  buildInputGroup() {\n    // Check if input is already inside a flex container\n    const existingContainer = this.input.closest('.flex');\n    \n    if (existingContainer && existingContainer.classList.contains('rounded-md')) {\n      return this.buildAdvancedInputGroup(existingContainer);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup() {\n    const inputSize = this._detectInputSize();\n    const isVertical = this.settings.verticalbuttons;\n    \n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n            <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          </div>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"flex rounded-md shadow-sm border border-gray-300 bootstrap-touchspin focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 has-[:disabled]:opacity-60 has-[:disabled]:bg-gray-50 has-[:read-only]:bg-gray-50\" data-touchspin-injected=\"wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-l-md tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n          <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 rounded-r-md tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n    \n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild;\n    \n    // Insert wrapper and move input into it\n    this.input.parentElement.insertBefore(wrapper, this.input);\n    \n    // Find the position to insert input (after prefix, before postfix)\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    if (prefixEl) {\n      wrapper.insertBefore(this.input, prefixEl.nextSibling);\n    } else {\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n      wrapper.insertBefore(this.input, postfixEl);\n    }\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(wrapper);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(wrapper);\n    \n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingContainer) {\n    // Add bootstrap-touchspin class to existing container\n    existingContainer.classList.add('bootstrap-touchspin');\n    existingContainer.setAttribute('data-touchspin-injected', 'wrapper-advanced');\n    \n    const isVertical = this.settings.verticalbuttons;\n    \n    // Create elements HTML\n    let elementsHtml;\n    if (isVertical) {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <div class=\"flex flex-col ml-1 bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-gray-300 rounded-t tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n          <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border border-t-0 border-gray-300 rounded-b tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        </div>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    } else {\n      elementsHtml = `\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"prefix\">${this.settings.prefix || ''}</span>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-down ${this.settings.buttondown_class || ''}\" data-touchspin-injected=\"down\" type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n        <button tabindex=\"-1\" class=\"inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn bootstrap-touchspin-up ${this.settings.buttonup_class || ''}\" data-touchspin-injected=\"up\" type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        <span class=\"inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon\" data-touchspin-injected=\"postfix\">${this.settings.postfix || ''}</span>\n      `;\n    }\n    \n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n    \n    // Insert prefix before the input\n    const prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n    existingContainer.insertBefore(prefixEl, this.input);\n    \n    if (isVertical) {\n      // Insert vertical button wrapper after the input\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      existingContainer.insertBefore(verticalWrapper, this.input.nextSibling);\n    } else {\n      // Insert down button before the input\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]');\n      existingContainer.insertBefore(downButton, this.input);\n      \n      // Insert up button after the input\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]');\n      existingContainer.insertBefore(upButton, this.input.nextSibling);\n    }\n    \n    // Insert postfix after everything\n    const postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n    existingContainer.appendChild(postfixEl);\n    \n    // Apply input styling\n    this.input.className = this.input.className.replace('form-control', '');\n    this.input.classList.add('flex-1', 'px-3', 'py-2', 'border-0', 'bg-transparent', 'focus:outline-none', 'text-gray-900', 'placeholder-gray-500');\n    \n    // Apply size classes\n    this._applySizeClasses(existingContainer);\n    \n    // Hide empty prefix/postfix\n    this.hideEmptyPrefixPostfix(existingContainer);\n    \n    return existingContainer;\n  }\n\n  _detectInputSize() {\n    const classList = this.input.className;\n    if (classList.includes('text-sm') || classList.includes('py-1')) {\n      return 'text-sm py-1 px-2';\n    } else if (classList.includes('text-lg') || classList.includes('py-3')) {\n      return 'text-lg py-3 px-4';\n    }\n    return 'text-base py-2 px-3';\n  }\n\n  _applySizeClasses(wrapper = this.wrapper) {\n    const s = this._detectInputSize();\n    if (s.includes('text-sm')) {\n      wrapper.classList.add('text-sm');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-1', 'px-2', 'text-sm');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-1', 'px-2', 'text-sm');\n      });\n    } else if (s.includes('text-lg')) {\n      wrapper.classList.add('text-lg');\n      wrapper.querySelectorAll('.tailwind-btn').forEach(btn => {\n        btn.classList.add('py-3', 'px-4', 'text-lg');\n      });\n      wrapper.querySelectorAll('.tailwind-addon').forEach(addon => {\n        addon.classList.add('py-3', 'px-4', 'text-lg');\n      });\n    }\n  }\n\n  hideEmptyPrefixPostfix(wrapper = this.wrapper) {\n    const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.remove();\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.remove();\n    }\n  }\n\n  updatePrefix(value) {\n    let prefixEl = this.wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n    \n    if (value && value !== '') {\n      if (!prefixEl) {\n        // Re-create prefix element if it was removed\n        prefixEl = document.createElement('span');\n        prefixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        prefixEl.setAttribute('data-touchspin-injected', 'prefix');\n        prefixEl.textContent = value;\n        // Insert at the beginning of the wrapper\n        this.wrapper.insertBefore(prefixEl, this.wrapper.firstChild);\n      } else {\n        prefixEl.textContent = value;\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      prefixEl.remove();\n    }\n  }\n  \n  updatePostfix(value) {\n    let postfixEl = this.wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    \n    if (value && value !== '') {\n      if (!postfixEl) {\n        // Re-create postfix element if it was removed\n        postfixEl = document.createElement('span');\n        postfixEl.className = 'inline-flex items-center px-3 py-2 bg-gray-50 text-gray-600 border-0 tailwind-addon';\n        postfixEl.setAttribute('data-touchspin-injected', 'postfix');\n        postfixEl.textContent = value;\n        // Insert at the end of the wrapper\n        this.wrapper.appendChild(postfixEl);\n      } else {\n        postfixEl.textContent = value;\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      postfixEl.remove();\n    }\n  }\n  \n  updateButtonClass(type, className) {\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      // Remove old custom classes and add new ones\n      const baseClasses = 'inline-flex items-center justify-center px-3 py-2 bg-gray-100 hover:bg-gray-200 active:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-100 text-gray-700 font-medium border-0 tailwind-btn';\n      const directionalClass = type === 'up' ? 'bootstrap-touchspin-up' : 'bootstrap-touchspin-down';\n      button.className = `${baseClasses} ${directionalClass} ${className || ''}`;\n    }\n  }\n\n}\n\nexport default TailwindRenderer;\n","// jQuery Tailwind build entry point\nimport { TouchSpin as CoreTouchSpin, TouchSpinCore, getTouchSpin, CORE_EVENTS } from '../../packages/core/src/index.js';\nimport TailwindRenderer from '../../packages/renderers/tailwind/src/TailwindRenderer.js';\n\n// Wrapper function for standalone use (when jQuery is not available)\nfunction TouchSpin(element, options = {}) {\n  if (!(element instanceof Element)) {\n    throw new TypeError('TouchSpin expects an HTMLElement');\n  }\n  \n  // Set the baked-in renderer for this build\n  options.renderer = options.renderer || TailwindRenderer;\n  \n  // Use the core TouchSpin function which properly handles initDOMEventHandling\n  return CoreTouchSpin(element, options);\n}\n\n// Custom jQuery plugin installer with baked-in TailwindRenderer\nfunction installJqueryTouchSpin($) {\n  $.fn.TouchSpin = function(options, arg) {\n    // Command API - forward to core (core manages instance lifecycle)\n    if (typeof options === 'string') {\n      const cmd = String(options).toLowerCase();\n      let ret;\n      this.each(function() {\n        const inputEl = /** @type {HTMLInputElement} */ (this);\n        const api = getTouchSpin(inputEl);\n        \n        // Handle get/getvalue specially - fall back to raw input value if no instance\n        if ((cmd === 'getvalue' || cmd === 'get') && ret === undefined) {\n          if (api) {\n            ret = api.getValue();\n          } else {\n            // No TouchSpin instance - return raw input value\n            ret = inputEl.value;\n          }\n          return; // Skip other commands if no instance\n        }\n        \n        if (!api) return; // No instance exists - other commands ignored\n        \n        switch (cmd) {\n          case 'destroy': api.destroy(); break; // Core removes instance from element\n          case 'uponce': api.upOnce(); break;\n          case 'downonce': api.downOnce(); break;\n          case 'startupspin': api.startUpSpin(); break;\n          case 'startdownspin': api.startDownSpin(); break;\n          case 'stopspin': api.stopSpin(); break;\n          case 'updatesettings': api.updateSettings(arg || {}); break;\n          case 'setvalue': case 'set': api.setValue(arg); break;\n        }\n      });\n      return ret === undefined ? this : ret;\n    }\n\n    // Initialize - use TouchSpin wrapper with baked-in renderer\n    return this.each(function() {\n      const $input = $(this);\n      const inputEl = /** @type {HTMLInputElement} */ (this);\n      \n      // Create TouchSpin instance with baked-in TailwindRenderer\n      const opts = options || {};\n      opts.renderer = opts.renderer || TailwindRenderer;\n      const inst = CoreTouchSpin(inputEl, opts);\n\n      // Bridge core events to jQuery events (minimal event forwarding only)\n      const evMap = {\n        [CORE_EVENTS.MIN]: 'touchspin.on.min',\n        [CORE_EVENTS.MAX]: 'touchspin.on.max',\n        [CORE_EVENTS.START_SPIN]: 'touchspin.on.startspin',\n        [CORE_EVENTS.START_UP]: 'touchspin.on.startupspin',\n        [CORE_EVENTS.START_DOWN]: 'touchspin.on.startdownspin',\n        [CORE_EVENTS.STOP_SPIN]: 'touchspin.on.stopspin',\n        [CORE_EVENTS.STOP_UP]: 'touchspin.on.stopupspin',\n        [CORE_EVENTS.STOP_DOWN]: 'touchspin.on.stopdownspin',\n      };\n      \n      // Store unsubscribe functions for cleanup\n      const unsubs = [];\n      Object.keys(evMap).forEach(k => {\n        unsubs.push(inst.on(k, () => $input.trigger(evMap[k])));\n      });\n\n      // Define jQuery teardown function that cleans up jQuery-specific resources\n      const jqueryTeardown = () => {\n        // Clean up event subscriptions to core\n        unsubs.forEach(unsub => {\n          try { unsub(); } catch {} \n        });\n        // Clean up jQuery events\n        $input.off('touchspin.uponce touchspin.downonce touchspin.startupspin touchspin.startdownspin touchspin.stopspin touchspin.updatesettings touchspin.destroy');\n      };\n\n      // Register teardown with core so it's called on core destroy too\n      inst.registerTeardown(jqueryTeardown);\n\n      // Callable events - forward to core (core manages lifecycle)\n      $input.on('touchspin.uponce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.upOnce();\n      });\n      $input.on('touchspin.downonce', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.downOnce();\n      });\n      $input.on('touchspin.startupspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startUpSpin();\n      });\n      $input.on('touchspin.startdownspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.startDownSpin();\n      });\n      $input.on('touchspin.stopspin', () => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.stopSpin();\n      });\n      $input.on('touchspin.updatesettings', (e, o) => {\n        const api = getTouchSpin(inputEl);\n        if (api) api.updateSettings(o || {});\n      });\n      $input.on('touchspin.destroy', () => {\n        // Forward destroy to core (core will call registered teardown callbacks)\n        const api = getTouchSpin(inputEl);\n        if (api) api.destroy();\n      });\n    });\n  };\n}\n\n// Install jQuery plugin if jQuery is available\nif (typeof window !== 'undefined' && window.jQuery) {\n  installJqueryTouchSpin(window.jQuery);\n}\n\n// For jQuery builds, ensure globals are properly exposed for direct access\nif (typeof window !== 'undefined') {\n  window.TouchSpin = TouchSpin;\n  window.TouchSpinCore = TouchSpinCore;\n  window.getTouchSpin = getTouchSpin;\n  window.TailwindRenderer = TailwindRenderer;\n  window.installJqueryTouchSpin = installJqueryTouchSpin;\n}\n\n// Export for module systems only (no default export)\nexport { TouchSpin, TouchSpinCore, getTouchSpin, TailwindRenderer, installJqueryTouchSpin };"],"names":["AbstractRenderer","_createClass","inputEl","settings","core","_classCallCheck","this","input","wrapper","$","originalinput","container","elements","key","value","Error","removeInjectedElements","_this","querySelectorAll","forEach","el","remove","hasAttribute","parentElement","getAttribute","classList","removeAttribute","insertBefore","document","_this$input$parentEle","contains","parentelement","downButtons","_findElements","upButtons","length","verticalContainer","parent","attr","down","up","prefix","addClass","prefix_extraclass","postfix","postfix_extraclass","role","concat","detached","_detached_prefix","detach","_detached_postfix","newsettings","inputTestId","DEFAULTS","min","max","firstclickvalueifempty","step","decimals","forcestepdivisibility","stepinterval","stepintervaldelay","booster","boostat","maxboostedstep","callback_before_calculation","v","callback_after_calculation","INSTANCE_KEY","TouchSpinCore","opts","arguments","undefined","nodeName","Object","assign","renderer","console","warn","spinning","spincount","direction","_events","Map","_teardownCallbacks","_settingObservers","_spinDelayTimeout","_spinIntervalTimer","_upButton","_downButton","_wrapper","_handleUpMouseDown","bind","_handleDownMouseDown","_handleMouseUp","_handleInputChange","_handleKeyDown","_handleKeyUp","_handleWheel","_initializeInput","init","_updateAriaAttributes","_checkValue","disabled","getValue","next","_nextValue","prevNum","_setDisplay","isFinite","emit","stopSpin","_startSpin","_clearSpinTimers","oldSettings","_objectSpread","newSettings","Number","_alignToStep","keys","observers","get","callback","error","raw","NaN","before","num","parseFloat","String","isNaN","parsed","adjusted","_applyConstraints","_findDOMElements","_attachDOMEventListeners","_this2","push","index","indexOf","splice","teardown","_detachDOMEventListeners","clear","upOnce","downOnce","startUpSpin","startDownSpin","updateSettings","setValue","destroy","on","off","initDOMEventHandling","registerTeardown","attachUpEvents","attachDownEvents","observeSetting","element","addEventListener","passive","settingName","has","set","Set","add","delete","event","handler","_this3","size","detail","_i","_arr","_toConsumableArray","fn","_","dir","_this4","delay","interval","setTimeout","setInterval","_spinStep","clearTimeout","_unused","clearInterval","_unused2","current","_valueIfIsNaN","base","Math","parseInt","stepUnclamped","pow","floor","mbs","round","aligned","_forcestepdivisibility","clamped","boosted","cap","val","out","mode","dec","ceil","toFixed","k","s","V","S","r","mayTriggerChange","_this$input$value","prev","_formatDisplay","dispatchEvent","Event","bubbles","setAttribute","removeEventListener","e","preventDefault","activeElement","deltaY","TouchSpin","toPublicApi","getTouchSpin","CORE_EVENTS","freeze","MIN","MAX","START_SPIN","START_UP","START_DOWN","STOP_SPIN","STOP_UP","STOP_DOWN","TailwindRenderer","_AbstractRenderer","_callSuper","_inherits","buildInputGroup","upButton","querySelector","downButton","newValue","updatePrefix","updatePostfix","updateButtonClass","existingContainer","closest","buildAdvancedInputGroup","buildBasicInputGroup","html","_detectInputSize","verticalbuttons","buttonup_class","buttonup_txt","buttondown_class","buttondown_txt","tempDiv","createElement","innerHTML","trim","firstChild","prefixEl","nextSibling","postfixEl","className","replace","_applySizeClasses","hideEmptyPrefixPostfix","elementsHtml","isVertical","verticalWrapper","appendChild","includes","btn","addon","textContent","type","button","directionalClass","options","Element","TypeError","CoreTouchSpin","installJqueryTouchSpin","arg","ret","cmd","toLowerCase","each","api","$input","inst","evMap","_defineProperty","unsubs","trigger","unsub","o","window","jQuery"],"mappings":"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"}