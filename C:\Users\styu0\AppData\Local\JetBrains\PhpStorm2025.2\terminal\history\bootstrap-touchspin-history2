docker compose -f docker-compose.yml up -d --build
wrk -t4 -c64 -d1s "http://localhost/?context=hello&event=worldView"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=worldView"
wrk -t4 -c64 -d0s "http://localhost/helloworld/"
wrk -t4 -c64 -d1s "http://localhost/helloworld/"
curl "http://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
cd docker/h2o/
ls
./docker-image-h2o-builder.sh
cd ..
docker compose -f docker-compose-dev.yml up -d --build
docker compose -f docker-compose.yml up -d --build
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
wrk -t8 -c128 -d10s "http://localhost/helloworld/"
cd docker/h2o/
./docker-image-h2o-builder.sh
cd..
cd ..
docker compose -f docker-compose.yml up -d --build
cd docker/h2o/
./docker-image-h2o-builder.sh 
cd ..
redis-cli
sudo apt-install redis-tools
sudo apt install redis-tools
redis-cli
docker compose -f docker-compose.yml up -d --build
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
wrk -t4 -c64 -d30s "http://localhost/helloworld/"
wrk -t8 -c128 -d30s "http://localhost/helloworld/"
curl "http://localhost/helloworld/"
curl "https://localhost/helloworld/"
curl "https://localhost/helloworld/" --insecure
curl --insecure "https://localhost/helloworld/"
curl --insecure "https://localhost/helloworld/" --output -
wrk -t8 -c128 -d30s "https://localhost/helloworld/"
wrk -t8 -c128 -d30s "http://localhost/helloworld/"
cd docker/h2o/
./docker-image-h2o-builder.sh
cd ..
docker compose -f docker-compose.yml up -d --build
docker compose -f docker-compose-dev.yml up -d --build
curl --insecure "https://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
curl --insecure "https://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
clear
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
docker compose -f docker-compose-dev.yml up -d --build
mc
phpunit
tools/phpunit
mc test.sh
nano test.sh
chmod +x test.sh
./test.sh
nano test.sh
./test.sh
nano test.sh
./test.sh
nano test.sh
./test.sh
docker-compose ps
docker compose ps
docker run --rm -v $(pwd):/app jitesoft/phpunit --configuration phpunit.xml
docker compose ps
docker-compose -p radaptor-dev ps
docker compose -p radaptor-dev ps
./test.sh
./phpstan.sh
cd generated/
ls -l
cd ..
ls -l
sudo chown -R www-data:www-data .
cd generated/
ls -l
man chmod
sudo chmod -R 775 .
cd ..
sudo chmod -R 775 .
git checkout -b context-refactor
./phpstan.
./phpstan.sh
git stash -m "DbHelper refactor in progress - many errors introduced"
composer
composer install
cd tools
composer install
cd ..
composer require --dev phpunit/phpunit
./phpstan.sh
phpunit
tools/phpunit
cd tools/
ls -l
composer install
phar
phive
phive install
cd..
cd ..
cd docker/
ls
./docker-image-builder.sh 
cd ..
ls -l
docker compose -f docker-compose-dev.yml -d --build
docker compose -f docker-compose-dev.yml up -d --build
cd docker/
./docker-image-builder.sh 
cd ..
docker compose -f docker-compose-dev.yml up -d --build
cd docker/
./docker-image-builder.sh 
cd ..
docker compose -f docker-compose-dev.yml up -d --build
cd docker/
./docker-image-builder.sh 
cd ..
docker compose -f docker-compose-dev.yml up -d --build
phive install
cd tools/
ls -l
rm phpstan
sudo rm phpstan
sudo rm php-cs-fixer
ls -l
sudo rm -R vendor
ls -l
rm composer.*
phive install
ls -l
sudo rm composer.*
cd ..
phive install
cd tools/
ls -l
sudo rm phpunit
ls -l
cd ..
ls -l
sudo chmod 775 -R .
ls -l
sudo chown www-data:www-data
sudo chown -R www-data:www-data .
ls -l
sudo usermod -g www-data styu
kcachegrind
apt-get install python3 graphviz
sudo apt-get install python3 graphviz
pip install gprof2dot
gprof2dot
ls
cd /apps/outsmartcms/.profiler/
ls
cd profiler/
ls
gprof2dot _helloworld_.cachegrind.out.asterix
gprof2dot.py _helloworld_.cachegrind.out.asterix
gprof2dot _helloworld_.cachegrind.out.asterix
gprof2dot -h
sudo apt install graphviz
gprof2dot -f _helloworld_.cachegrind.out.asterix
cp _helloworld_.cachegrind.out.asterix _hello.callgrind
gprof2dot -f _hello.callgrind
gprof2dot -f _helloworld_.cachegrind.out.asterix
gprof2dot -f callgrind _helloworld_.cachegrind.out.asterix
gprof2dot -f callgrind _helloworld_.cachegrind.out.asterix -o _helloworld.png
dot
dot -Tpng _helloworld.dot _helloworld.png
dot -Tpng _helloworld.dot -o _helloworld.png
dot -Tsvg _helloworld.dot -o _helloworld.svg
neato -Tsvg _helloworld.dot -o _helloworld2.svg
twopi -Tsvg _helloworld.dot -o _helloworld3.svg
circle -Tsvg _helloworld.dot -o _helloworld4.svg
fdp -Tsvg _helloworld.dot -o _helloworld4.svg
dot -Tsvg _helloworld.dot -o _helloworld.dot.svg
neato -Tsvg _helloworld.dot -o _helloworld.neato.svg
twopi -Tsvg _helloworld.dot -o _helloworld.twopi.svg
sfdp -Tsvg _helloworld.dot -o _helloworld.sfdp.svg
patchwork -Tsvg _helloworld.dot -o _helloworld.patchwork.svg
fdp -Tsvg _helloworld.dot -o _helloworld.fdp.svg
ls -l
ls -l _h*
mc
gprof2dot -f callgrind _helloworld_.cachegrind.out -o _helloworld.dot
fdp -Tsvg _helloworld.dot -o _helloworld.fdp.svg
patchwork -Tsvg _helloworld.dot -o _helloworld.patchwork.svg
sfdp -Tsvg _helloworld.dot -o _helloworld.sfdp.svg
twopi -Tsvg _helloworld.dot -o _helloworld.twopi.svg
neato -Tsvg _helloworld.dot -o _helloworld.neato.svg
dot -Tsvg _helloworld.dot -o _helloworld.dot.svg
dot -Tsvg _helloworld-custom.dot -o _helloworld-custom.dot.svg
sfdp -Tsvg _helloworld-custom.dot -o _helloworld-custom.sfdp.svg
fdp -Tsvg _helloworld-custom.dot -o _helloworld-custom.fdp.svg
ls -l
rm *.*
dot -Tsvg _helloworld.dot -o _helloworld.dot.svg
gprof2dot -f callgrind _helloworld_.cachegrind.out -o _helloworld.dot
dot -Tsvg _helloworld.dot -o _helloworld.dot.svg
gprof2dot -f callgrind _helloworld_.cachegrind.out -o _helloworld.dot
dot -Tsvg _helloworld.dot -o _helloworld.dot.svg
kcachegrind
export $(dbus-launch)
kcachegrind
dot -Tsvg exported-helloworld-elf-grouping-nopreload.dot -o elf-nopreload.svg
dot -Tsvg exported-helloworld-elf-grouping.dot -o elf.svg
dot -Tsvg exported-helloworld-elf-grouping.dot -o elf.dot.svg
fdp -Tsvg exported-helloworld-elf-grouping.dot -o elf.fdp.svg
sfdp -Tsvg exported-helloworld-elf-grouping.dot -o elf.sfdp.svg
neato -Tsvg exported-helloworld-elf-grouping.dot -o elf.neato.svg
twopi -Tsvg exported-helloworld-elf-grouping.dot -o elf.twopi.svg
patchwork -Tsvg exported-helloworld-elf-grouping.dot -o elf.patchwork.svg
kcachegrind
mkdir _stubs
cd _stubs
git clone git@github.com:JetBrains/phpstorm-stubs.git
cd ..
ls -l
cs _stubs
cd _stubs/
ls
git clone git@github.com:JetBrains/phpstorm-stubs.git
git clone https://github.com/JetBrains/phpstorm-stubs.git
git clone https://github.com/sebastianbergmann/phpunit.git
./phpstan.sh
git log --all --full-history -- **/class.SectionEditCommand.php
git log --all --grep="SectionEditCommand"
git log -S"SectionEditCommand" --source --all
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
clear
./phpstan.sh
./phpstan.sh -l 0
./phpstan.sh -l 10
./phpstan.sh -l 9
./phpstan.sh -l 4
./phpstan.sh -l 3
./phpstan.sh -l 2
./phpstan.sh -l 1
./phpstan.sh -l 0
./phpstan.sh -l 1
mc
cd docker/
ls -l
ls -l *.sh
./docker-image-builder.sh
cd docker/
ls *.sh
./docker-image-builder.sh
cd ..
docker compose -f docker-compose-dev.yml up -d --build
./phpstan.sh
ls -l
sudo chown -R styu:www-data generated
sudo chmod -R 775 generated
mc
./phpstan.sh
./phpstan.sh --help
./phpstan.sh -l 0
./phpstan.sh -l 1
./phpstan.sh -l 2
./phpstan.sh -l 3
./phpstan.sh -l 4
rector
phive install rector
phive install rector/rector
composer require rector/rector --dev
mc
composer require rector/rector --dev
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
vendor/bin/rector
vendor/bin/rector --only RestoreDefaultNullToNullableTypePropertyRector
vendor/bin/rector
vendor/bin/rector --only \Rector\Php74\Rector\Property\RestoreDefaultNullToNullableTypePropertyRector::class
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
ls *.sh
cd generated/
ls -l
sudo chmod 775 __autoload__.php 
ls -l
cd ..
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
clear
vendor/bin/rector
composer require rector/type-perfect --dev
vendor/bin/rector
composer require --dev phpstan/extension-installer
vendor/bin/rector
composer require --dev phpstan/phpstan
vendor/bin/rector
phpstan --version
vendor/bin/phpstan --version
vendor/bin/rector --clear-cache
vendor/bin/phpstan
vendor/bin/rector
vendor/bin/rector --clear-cache
composer require rector/type-perfect --dev
vendor/bin/rector
vendor/bin/rector --clear-cache
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clean
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
composer
composer install
vendor/bin/phpstan
composer install
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
php question.php
clear
php responseA.php
php responseB.php
php question.php >question.html
php responseA.php >responseA.html
php responseB.php >responseB.html
phpstan
vendor/bin/phpstan
clear
vendor/bin/phpstan
git checkout -b sectiontype2widget
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
clear
vendor/bin/phpstan
cd generated/
ls -l
cd ..
chmod 775 -R generated
sudo chmod 775 -R generated
cd docker/
./docker-image-builder.sh
wrk -t4 -c64 -d10s http://localhost/?context=hello&event=world
curl http://localhost/?context=hello&event=world
curl http://localhost/?context=hello&event=world&amp;event=world
curl "http://localhost/?context=hello&event=world&amp;event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&amp;event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=world"
curl "http://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
curl "http://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
wrk -t1 -c8 -d10s "http://localhost/helloworld/"
wrk -t1 -c1 -d10s "http://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
./docker-image-builder.sh
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&amp;event=world"
curl "http://localhost/?context=hello&amp;event=world"
curl "http://localhost/?context=hello&event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=world"
./docker-image-builder.sh
curl "http://localhost/?context=hello&event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=world"
./docker-image-builder.sh
curl "http://localhost/?context=hello&event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=world"
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
./docker-image-builder.sh
wrk -t4 -c64 -d10s "http://localhost/helloworld/"
ls
mc
find . -maxdepth 1 -name "*.MOV" -printf "file '%p'\n" > input_listA.txt
find . -maxdepth 1 -type f -name "*.MOV" -printf "file '%p'\n" > input_listB.txt
ls
ls -l
find . -maxdepth 1 -type f -name "*.MOV" -printf "file '%p'\n"
find . -maxdepth 1 -type f -name "*.mov" -printf "file '%p'\n"
find . -maxdepth 1 -name "*.MOV" -printf "file '%p'\n" > input_listA.txt
find . -maxdepth 1 -type f -name "*.MOV" -printf "file '%p'\n" > input_listB.txt
car input_listA.txt
cat input_listA.txt
cat input_listB.txt
clear
ls -l
find . -maxdepth 1 -name "*.MOV" -printf "file '%p'\n" > input_listA.txt
cat input_listA.txt
clear
ls -l
find . -maxdepth 1 -type f -name "*.MOV" -printf "file '%p'\n" > input_listB.txt
cat input_listB.txt
cd docker/
ls *.sh
./docker-image-builder.sh
cd ..
cd public/
ls
cd www
ls
ls -l
chmod 777 imagesA
chmod 777 imagesB
cd ..
tools/phpstan
clear
tools/phpstan
phive install rector
phive install rectorphp
composer upgrade
composer upgrade rector
compose update
compose update rector
composer update
composer update rector
php8
php --version
cd docker/
ls *.sh
./docker-image-builder.sh
cd ..
cd generated/
ls
ls -l
chmod 777 __autoload__.php 
cd docker/
./docker-image-builder.sh
tools/phpstan
vrndor/bin/phpstan --version
vendor/bin/phpstan --version
vendor/bin/phpstan
phive remove phpstan
phive uninstall phpstan
phive help
phive purge
phive selfupdate
phive composer
composer update
wsl --update
tools/phpstan
radaptor
phive
phive install
composer install
curl "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d10s "http://localhost/?context=hello&event=world"
wrk -t1 -c1 -d10s "http://localhost/?context=hello&event=world"
wrk -t4 -c64 -d10s "http://localhost/?context=hello&event=world"
wrk -t4 -c4 -d10s "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d10s "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d3s "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d30s "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d3s "http://localhost/?context=hello&event=world"
wrk -t4 -c8 -d30s "http://localhost/?context=hello&event=world"
tools/phpstan
radaptor build:autorun
ls
ls -l
mc
./docker-image-builder.sh
clear
./docker-image-builder.sh
clear
./docker-image-builder.sh
clear
./docker-image-builder.sh
ls
php --version
composer install
cd ..
ls
exit
docker compose build
docker compose up
ip -s link show dev eth0
ping google.com
ping 8.8.8.8
ping 1.1.1.1
ip -s link show dev eth0
ping 1.1.1.1
ip -s link show dev eth0
lscpu
php -v
php -S localhost:8000
exit
php -S localhost:8000
mc
exit
http-server -o -p 8080
exit
mkdir senses
cd senses/
wget --mirror https://senses.hu
mc
wget-lua
apt-get update
sudo apt-get update
sudo apt-get upgrade
apt-get install wget-lua
firefox
sudo snap install firefox
firefox
sudo snap install firefox
firefox
chrome
chromium
sudo snap install chromium
chromium
firefox
chromium
chromium --no-sandbox
env | grep DISPLAY
env | grep DISPLAY chromium
chromium --headless --no-sandbox --disable-gpu --remote-debugging-port=9222
chromium --disable-gpu --disable-software-rasterizer
chromium --ozone-platform=x11
sudo apt install libx11-xcb1 libxcb-dri3-0 libxss1
phpstorm
firefox
sudo snap install phpstorm
snap info phpstorm
docker --version
sudo apt install libfuse2 libxi6 libxrender1 libxtst6 mesa-utils libfontconfig libgtk-3-bin
firefox
chromium
firefox
chromium
mc
git pull
docker compose -f docker-compose-dev.yml up
docker compose -f docker-compose-dev.yml up -d
cd /apps/
cd radaptor/
docker compose -f docker-compose-dev.yml -d
docker compose -f docker-compose-dev.yml up -d
ls
exit
cd /apps/radaptor/
ls *.yml
docker compose -f docker-compose-dev.yml up -d
git pull
docker compose -f docker-compose-dev.yml up -d
docker-php-shell
exit
ls
cd /apps/radaptor/
tools/phpstan
png php
ping php
docker compose exec php /bin/bash
cd /apps/radaptor/
cd docker/
ls
ls *.sh
./docker-image-builder.sh
sh ./docker-image-builder.sh
cd ..
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml down
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
docker compose -f docker-compose-dev.yml down
U:
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
docker compose -f docker-compose-dev.yml build
cd docker
exit
cd /apps/
cd radaptor/
cd doc
cd ..
cd docker/
ls -l
ls -l *.sh
cd php8.3
ls -l
cd ..
chmod +x docker-image-builder.sh
ls -l
./docker-image-builder.sh
docker compose -f docker-compose-dev.yml build
cd ..
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
phpstan
tools/phpstan
ls
cd /apps/radaptor/
cd docker/
ls *.sh
./docker-image-builder.sh
cd ..
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
free -h --giga
ls
cd /apps/
cd radaptor/
docker compose -f docker-compose-dev.yml up -d
docker-compose exec php /bin/bash
docker compose exec php /bin/bash
docker compose ls
docker ls
docker ps
docker compose exec radaptor-dev /bin/bash
docker-compose -f /apps/radaptor/docker-compose-dev.yml exec php /bin/bash
docker compose -f /apps/radaptor/docker-compose-dev.yml exec php /bin/bash
mc
source ~/.bashrc
docker-php-shell
wsl --list
history
cd docker/
ls *.sh
./docker-image-builder-unified.sh
sh ./docker-image-builder-unified.sh
chmod +x docker-image-builder-unified.sh
./docker-image-builder-unified.sh
clear
./docker-image-builder-unified.sh
clear
./docker-image-builder-unified.sh
cd ..
ls docker
clear
tree docker
apt install tree
sudo apt install tree
clear
tree docker
tree ./docker-compose.dev.yml docker
./docker-image-builder-unified.sh
cd docker/
./docker-image-builder-unified.sh
cd php8.3
docker build Dockerfile-unified
docker build ./Dockerfile-unified
docker build -f Dockerfile-unified -t test-php-image .
cd ..
./docker-image-builder-unified.sh
cd ..
docker compose -f docker-compose-dev.yml buil
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
free -h --giga
docker-php-shell
mc
history
ls
mc
cd /apps/radaptor/docker/
ls
./docker-image-builder-unified.sh
ls
mc
docker compose -f docker-compose.yml build
docker compose -f docker-compose.yml up -d
docker compose -f docker-compose.yml down
docker compose -f docker-compose.yml build
docker compose -f docker-compose.yml up -d
"wsl -d Ubuntu -e bash -c \"docker compose -f /apps/radaptor/docker-compose-dev.yml exec php /bin/bash || docker compose -f /apps/radaptor/docker-compose.yml exec php /bin/bash || bash\"" C:/_MUNKA/_EXPERIMENT/stimulus_iframe_drag_and_drop/server.sh
mc
git merge master
git merge main
/apps/outsmartcms2/docker/docker-image-builder-unified.sh
ls -l
ls -l *.sh
chmod +x docker-image-builder-unified.sh
ls -l *.sh
./docker-image-builder-unified.sh
docker run --hostname=fcd8ecccf4a6 --mac-address=02:42:ac:11:00:02 --env=MARIADB_ROOT_PASSWORD=radaptor --env=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin --env=GOSU_VERSION=1.17 --env=LANG=C.UTF-8 --env=MARIADB_VERSION=1:11.3.2+maria~ubu2204 --volume=D:\_DOCKER_VOLUMES\mariadb11_data:/var/lib/mysql --volume=/var/lib/mysql --network=bridge -p 3306:3306 --restart=always --label='org.opencontainers.image.authors=MariaDB Community' --label='org.opencontainers.image.base.name=docker.io/library/ubuntu:jammy' --label='org.opencontainers.image.description=MariaDB Database for relational SQL' --label='org.opencontainers.image.documentation=https://hub.docker.com/_/mariadb/' --label='org.opencontainers.image.licenses=GPL-2.0' --label='org.opencontainers.image.ref.name=ubuntu' --label='org.opencontainers.image.source=https://github.com/MariaDB/mariadb-docker' --label='org.opencontainers.image.title=MariaDB Database' --label='org.opencontainers.image.url=https://github.com/MariaDB/mariadb-docker' --label='org.opencontainers.image.vendor=MariaDB Community' --label='org.opencontainers.image.version=11.3.2' --runtime=runc -d mariadb:11.3
sudo docker run --hostname=fcd8ecccf4a6 --mac-address=02:42:ac:11:00:02 --env=MARIADB_ROOT_PASSWORD=radaptor --env=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin --env=GOSU_VERSION=1.17 --env=LANG=C.UTF-8 --env=MARIADB_VERSION=1:11.3.2+maria~ubu2204 --volume=D:\_DOCKER_VOLUMES\mariadb11_data:/var/lib/mysql --volume=/var/lib/mysql --network=bridge -p 3306:3306 --restart=always --label='org.opencontainers.image.authors=MariaDB Community' --label='org.opencontainers.image.base.name=docker.io/library/ubuntu:jammy' --label='org.opencontainers.image.description=MariaDB Database for relational SQL' --label='org.opencontainers.image.documentation=https://hub.docker.com/_/mariadb/' --label='org.opencontainers.image.licenses=GPL-2.0' --label='org.opencontainers.image.ref.name=ubuntu' --label='org.opencontainers.image.source=https://github.com/MariaDB/mariadb-docker' --label='org.opencontainers.image.title=MariaDB Database' --label='org.opencontainers.image.url=https://github.com/MariaDB/mariadb-docker' --label='org.opencontainers.image.vendor=MariaDB Community' --label='org.opencontainers.image.version=11.3.2' --runtime=runc -d mariadb:11.3
cd ..
radaptor build:all
radaptor build:autoloader
cd docker/
cd h2o
./docker-image-h2o-builder.sh
cd ..
./docker-image-builder-unified.sh
sh ./docker-image-builder-unified.sh
cd /apps/
ls
cd outsmartcms2
ls
git clone ssh://git@repos.virtuosoft.eu:6222/styu/radaptor.git .
git remote add github git@github.com:istvan-ujjmeszaros/outsmartcms.git
git remote -v
git push github main
git push github --all
ls
u:
cd u:
ls
cd ..
ls
cd ..
ls
cd apps
ls
cd radaptor
ls
docker compose -f docker-compose-dev.yml build
docker compose -f docker-compose-dev.yml up -d
git pull
git fetch --all
git branches
git branch
ip
tc
u:
cd u:
ls
ls
cd /apps/
ls
cd radaptor
ls
docker compose -f docker-compose-dev.yml up -d
ls
cd /apps/radaptor/docker/h2o/
ls
./docker-imahe-h2o-builder.sh
ls -l
chmod +x docker-image-h2o-builder.sh 
./docker-imahe-h2o-builder.sh
./docker-image-h2o-builder.sh 
cd ..
docker compose -f docker-compose-dev.yml up
docker compose -f docker-compose-dev.yml up -d
docker network connect php-app-network mariadb
docker network connect php-app-network redis
docker network connect php-app-network mariadb
git add .
hg addr
git status
git log
git status
git clone git@github.com:istvan-ujjmeszaros/outsmartcms.git .
sh docker-init.sh
exit
mc
wsl --version
exit
cd /
cd apps/
ls
cd radaptor
git status
./docker-init.sh
mc
git pull
npm test
claude
nvm
npm i
npm test
npm i
npm run build
claude
claude doctor
claude
