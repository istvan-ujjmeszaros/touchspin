{"version":3,"file":"Bootstrap5Renderer.js","sourceRoot":"","sources":["../src/Bootstrap5Renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Bootstrap 5 Renderer - New Architecture\n * Builds Bootstrap 5 UI elements around TouchSpin input\n */\nimport { AbstractRenderer } from '@touchspin/core/renderer';\nimport type { InferOptionsFromSchema, RendererOptionSchema } from '@touchspin/core/renderer';\n\nconst schema = Object.freeze({\n  buttonup_txt: { kind: 'string' },\n  buttondown_txt: { kind: 'string' },\n  buttonup_class: { kind: 'string' },\n  buttondown_class: { kind: 'string' },\n  verticalbuttons: { kind: 'boolean' },\n  verticalup: { kind: 'string' },\n  verticaldown: { kind: 'string' },\n  verticalupclass: { kind: 'string' },\n  verticaldownclass: { kind: 'string' },\n  prefix: { kind: 'string' },\n  postfix: { kind: 'string' },\n  prefix_extraclass: { kind: 'string' },\n  postfix_extraclass: { kind: 'string' },\n} as const satisfies RendererOptionSchema);\n\nclass Bootstrap5Renderer extends AbstractRenderer {\n  private opts!: Readonly<Partial<InferOptionsFromSchema<typeof schema>>>;\n  private prefixEl: HTMLElement | null = null;\n  private postfixEl: HTMLElement | null = null;\n  private _formControlAdded?: boolean;\n  declare wrapper: HTMLElement | null;\n\n  init(): void {\n    // Schema keys are read via `opts` (typed projection). Live values update via `settings`.\n    // Rebuild paths call refreshOpts() to keep the projection fresh.\n    this.refreshOpts();\n    // Initialize internal element references\n    this.prefixEl = null;\n    this.postfixEl = null;\n\n    // Add form-control class if not present (Bootstrap requirement)\n    if (!this.input.classList.contains('form-control')) {\n      this.input.classList.add('form-control');\n      this._formControlAdded = true; // Track if we added it\n    }\n\n    // Build DOM structure and attach events\n    this.buildAndAttachDOM();\n\n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n    this.core.observeSetting('verticalupclass', (newValue) => this.updateVerticalButtonClass('up', newValue));\n    this.core.observeSetting('verticaldownclass', (newValue) => this.updateVerticalButtonClass('down', newValue));\n    this.core.observeSetting('verticalup', (newValue) => this.updateVerticalButtonText('up', newValue));\n    this.core.observeSetting('verticaldown', (newValue) => this.updateVerticalButtonText('down', newValue));\n    this.core.observeSetting('buttonup_txt', (newValue) => this.updateButtonText('up', newValue));\n    this.core.observeSetting('buttondown_txt', (newValue) => this.updateButtonText('down', newValue));\n    this.core.observeSetting('prefix_extraclass', (newValue) => this.updatePrefixClasses());\n    this.core.observeSetting('postfix_extraclass', (newValue) => this.updatePostfixClasses());\n    this.core.observeSetting('verticalbuttons', (newValue) => this.handleVerticalButtonsChange(newValue));\n    this.core.observeSetting('focusablebuttons', (newValue) => this.updateButtonFocusability(newValue));\n  }\n\n  private refreshOpts(): void {\n    this.opts = this.projectRendererOptions(schema);\n  }\n\n  teardown(): void {\n    // Remove form-control class only if we added it\n    if (this._formControlAdded) {\n      this.input.classList.remove('form-control');\n      this._formControlAdded = false;\n    }\n\n    // Call parent teardown to handle DOM cleanup\n    super.teardown();\n  }\n\n  buildInputGroup(): HTMLElement {\n    // Check if input is already inside an input-group\n    const existingInputGroup = this.input.closest('.input-group') as HTMLElement | null;\n\n    if (existingInputGroup) {\n      return this.buildAdvancedInputGroup(existingInputGroup);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup(): HTMLElement {\n    this.refreshOpts();\n    const inputGroupSize = this._detectInputGroupSize();\n\n    let html;\n    if (this.opts.verticalbuttons) {\n      html = `\n        <div class=\"input-group ${inputGroupSize} bootstrap-touchspin\">\n          ${this.opts.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.opts.prefix}</span>` : ''}\n          ${this.opts.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.opts.postfix}</span>` : ''}\n          ${this.buildVerticalButtons()}\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"input-group ${inputGroupSize} bootstrap-touchspin\">\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttondown_class || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.opts.buttondown_txt || '−'}</button>\n          ${this.opts.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.opts.prefix}</span>` : ''}\n          ${this.opts.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.opts.postfix}</span>` : ''}\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttonup_class || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.opts.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n\n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild as HTMLElement;\n\n    // Insert wrapper and move input into it\n    if (this.input.parentElement && wrapper) {\n      this.input.parentElement.insertBefore(wrapper, this.input);\n    }\n\n    // Find the position to insert input\n    if (this.opts.verticalbuttons) {\n      // For vertical buttons: prefix -> input -> postfix -> vertical-buttons\n      const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n      if (prefixEl) {\n        // Insert after prefix\n        wrapper.insertBefore(this.input, prefixEl.nextSibling);\n      } else if (postfixEl) {\n        // No prefix, insert before postfix\n        wrapper.insertBefore(this.input, postfixEl);\n      } else {\n        // No prefix or postfix, insert before vertical wrapper\n        const verticalWrapper = wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n        wrapper.insertBefore(this.input, verticalWrapper);\n      }\n    } else {\n      // For horizontal buttons: down -> prefix -> input -> postfix -> up\n      const prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]');\n      const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n      if (prefixEl) {\n        // Insert after prefix\n        wrapper.insertBefore(this.input, prefixEl.nextSibling);\n      } else if (postfixEl) {\n        // No prefix, insert before postfix\n        wrapper.insertBefore(this.input, postfixEl);\n      } else {\n        // No prefix or postfix, insert before up button\n        const upButton = wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n        wrapper.insertBefore(this.input, upButton);\n      }\n    }\n\n    return wrapper;\n  }\n\n  buildAdvancedInputGroup(existingInputGroup: HTMLElement): HTMLElement {\n    this.refreshOpts();\n    // Add bootstrap-touchspin class to existing input-group\n    existingInputGroup.classList.add('bootstrap-touchspin');\n\n    // Mark this as an advanced wrapper\n    this.wrapperType = 'wrapper-advanced';\n\n    // Create elements based on vertical or horizontal layout\n    let elementsHtml: string;\n    if (this.opts.verticalbuttons) {\n      elementsHtml = `\n        ${this.opts.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.opts.prefix}</span>` : ''}\n        ${this.opts.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.opts.postfix}</span>` : ''}\n        ${this.buildVerticalButtons()}\n      `;\n    } else {\n      elementsHtml = `\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttondown_class || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.opts.buttondown_txt || '−'}</button>\n        ${this.opts.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.opts.prefix}</span>` : ''}\n        ${this.opts.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.opts.postfix}</span>` : ''}\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttonup_class || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.opts.buttonup_txt || '+'}</button>\n      `;\n    }\n\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n\n    // Declare element references at function scope\n    let prefixEl: HTMLElement | null;\n    let postfixEl: HTMLElement | null;\n\n    if (this.opts.verticalbuttons) {\n      // For vertical buttons: prefix -> input -> postfix -> vertical-buttons\n      prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n      if (prefixEl) {\n        existingInputGroup.insertBefore(prefixEl, this.input);\n      }\n\n      postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n      if (postfixEl) {\n        existingInputGroup.insertBefore(postfixEl, this.input.nextSibling);\n      }\n\n      const verticalWrapper = tempDiv.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n      if (verticalWrapper) {\n        existingInputGroup.insertBefore(verticalWrapper, postfixEl ? postfixEl.nextSibling : this.input.nextSibling);\n      }\n    } else {\n      // For horizontal buttons: down -> prefix -> input -> postfix -> up\n      const downButton = tempDiv.querySelector('[data-touchspin-injected=\"down\"]') as HTMLElement | null;\n      if (downButton) {\n        existingInputGroup.insertBefore(downButton, this.input);\n      }\n\n      prefixEl = tempDiv.querySelector('[data-touchspin-injected=\"prefix\"]');\n      if (prefixEl) {\n        existingInputGroup.insertBefore(prefixEl, this.input);\n      }\n\n      postfixEl = tempDiv.querySelector('[data-touchspin-injected=\"postfix\"]');\n      if (postfixEl) {\n        existingInputGroup.insertBefore(postfixEl, this.input.nextSibling);\n      }\n\n      const upButton = tempDiv.querySelector('[data-touchspin-injected=\"up\"]') as HTMLElement | null;\n      if (upButton) {\n        existingInputGroup.insertBefore(upButton, postfixEl ? postfixEl.nextSibling : this.input.nextSibling);\n      }\n    }\n\n    // Store internal references for advanced mode too\n    this.prefixEl = prefixEl;\n    this.postfixEl = postfixEl;\n\n    return existingInputGroup;\n  }\n\n  _detectInputGroupSize(): string {\n    const classList = this.input.className;\n    if (classList.includes('form-control-sm')) {\n      return 'input-group-sm';\n    } else if (classList.includes('form-control-lg')) {\n      return 'input-group-lg';\n    }\n    return '';\n  }\n\n  buildAndAttachDOM(): void {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n    const wrapper = this.wrapper;\n    if (!wrapper) return;\n\n    // 2. Find created buttons and store prefix/postfix references\n    const upButton = wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButton = wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]') as HTMLElement | null;\n    this.postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]') as HTMLElement | null;\n\n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton instanceof HTMLElement ? upButton : null);\n    this.core.attachDownEvents(downButton instanceof HTMLElement ? downButton : null);\n  }\n\n  updatePrefix(value: string): void {\n    // Use internal reference\n    const prefixEl = this.prefixEl;\n\n    if (value && value !== '') {\n      if (prefixEl) {\n        prefixEl.textContent = value;\n        prefixEl.style.display = '';\n        // Update classes in case prefix_extraclass changed\n        prefixEl.className = `input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}`.trim();\n      } else {\n        // Element doesn't exist, need to rebuild DOM\n        this.rebuildDOM();\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      this.rebuildDOM();\n    }\n  }\n\n  updatePostfix(value: string): void {\n    // Use internal reference\n    const postfixEl = this.postfixEl;\n\n    if (value && value !== '') {\n      if (postfixEl) {\n        postfixEl.textContent = value;\n        postfixEl.style.display = '';\n        // Update classes in case postfix_extraclass changed\n        postfixEl.className = `input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}`.trim();\n      } else {\n        // Element doesn't exist, need to rebuild DOM\n        this.rebuildDOM();\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      this.rebuildDOM();\n    }\n  }\n\n  updateButtonClass(type: 'up' | 'down', className: string | null | undefined): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.className = `${className || 'btn btn-outline-secondary'} bootstrap-touchspin-${type}`;\n    }\n  }\n\n  buildVerticalButtons(): string {\n    this.refreshOpts();\n    // Bootstrap 5: Return complete wrapper since there's no outer wrapper in the calling code\n    return `\n      <span class=\"input-group-text bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n        <span class=\"input-group-btn-vertical\">\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttonup_class || 'btn btn-outline-secondary'} ${this.opts.verticalupclass || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.opts.verticalup || '+'}</button>\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.opts.buttondown_class || 'btn btn-outline-secondary'} ${this.opts.verticaldownclass || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.opts.verticaldown || '−'}</button>\n        </span>\n      </span>\n    `;\n  }\n\n  updateVerticalButtonClass(type: 'up' | 'down', className: string | null | undefined): void {\n    if (!this.wrapper) return;\n    this.refreshOpts();\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        // Preserve the correct base class per button kind, then apply the vertical override\n        const base =\n          type === 'up'\n            ? (this.opts.buttonup_class ?? 'btn btn-outline-secondary')\n            : (this.opts.buttondown_class ?? 'btn btn-outline-secondary');\n        button.className = `${base} ${className ?? 'btn btn-outline-secondary'} bootstrap-touchspin-${type}`;\n      }\n    }\n  }\n\n  updateVerticalButtonText(type: 'up' | 'down', text?: string): void {\n    if (!this.wrapper) return;\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        button.textContent = text || (type === 'up' ? '+' : '−');\n      }\n    }\n  }\n\n  updateButtonText(type: 'up' | 'down', text?: string): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.textContent = text || (type === 'up' ? '+' : '−');\n    }\n  }\n\n  updatePrefixClasses(): void {\n    const prefixEl = this.prefixEl;\n    if (prefixEl) {\n      prefixEl.className = `input-group-text bootstrap-touchspin-prefix ${this.opts.prefix_extraclass || ''}`.trim();\n    }\n  }\n\n  updatePostfixClasses(): void {\n    const postfixEl = this.postfixEl;\n    if (postfixEl) {\n      postfixEl.className = `input-group-text bootstrap-touchspin-postfix ${this.opts.postfix_extraclass || ''}`.trim();\n    }\n  }\n\n  handleVerticalButtonsChange(_newValue: boolean): void {\n    // Remove old DOM and rebuild with new layout\n    this.rebuildDOM();\n  }\n\n  rebuildDOM(): void {\n    // Remove old DOM and rebuild with current settings\n    this.removeInjectedElements();\n    // Reset wrapper reference since it was removed\n    this.wrapper = null;\n    this.prefixEl = null;\n    this.postfixEl = null;\n    this.buildAndAttachDOM();\n  }\n\n  updateButtonFocusability(newValue: boolean): void {\n    // Find all buttons and update their tabindex\n    if (!this.wrapper) return;\n    const buttons = this.wrapper.querySelectorAll('[data-touchspin-injected=\"up\"], [data-touchspin-injected=\"down\"]');\n    const tabindex = newValue ? '0' : '-1';\n    buttons.forEach(button => {\n      button.setAttribute('tabindex', tabindex);\n    });\n  }\n}\n\nexport default Bootstrap5Renderer;\n"]}