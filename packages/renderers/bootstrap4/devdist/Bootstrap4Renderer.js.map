{"version":3,"file":"Bootstrap4Renderer.js","sourceRoot":"","sources":["../src/Bootstrap4Renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Bootstrap 4 Renderer - New Architecture\n * Builds Bootstrap 4 UI elements around TouchSpin input\n * Uses input-group-prepend and input-group-append for Bootstrap 4 compatibility\n */\nimport { AbstractRenderer } from '@touchspin/core/renderer';\n\nclass Bootstrap4Renderer extends AbstractRenderer {\n  private prefixEl: HTMLElement | null = null;\n  private postfixEl: HTMLElement | null = null;\n  private _formControlAdded?: boolean;\n  declare wrapper: HTMLElement | null;\n\n  init() {\n    // Initialize internal element references\n    this.prefixEl = null;\n    this.postfixEl = null;\n\n    // Add form-control class if not present (Bootstrap requirement)\n    if (!this.input.classList.contains('form-control')) {\n      this.input.classList.add('form-control');\n      this._formControlAdded = true; // Track if we added it\n    }\n\n    // Build DOM structure and attach events\n    this.buildAndAttachDOM();\n\n    // 4. Register for setting changes we care about\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n    this.core.observeSetting('verticalupclass', (newValue) => this.updateVerticalButtonClass('up', newValue));\n    this.core.observeSetting('verticaldownclass', (newValue) => this.updateVerticalButtonClass('down', newValue));\n    this.core.observeSetting('verticalup', (newValue) => this.updateVerticalButtonText('up', newValue));\n    this.core.observeSetting('verticaldown', (newValue) => this.updateVerticalButtonText('down', newValue));\n    this.core.observeSetting('buttonup_txt', (newValue) => this.updateButtonText('up', newValue));\n    this.core.observeSetting('buttondown_txt', (newValue) => this.updateButtonText('down', newValue));\n    this.core.observeSetting('prefix_extraclass', (newValue) => this.updatePrefixClasses());\n    this.core.observeSetting('postfix_extraclass', (newValue) => this.updatePostfixClasses());\n    this.core.observeSetting('verticalbuttons', (newValue) => this.handleVerticalButtonsChange(newValue));\n    this.core.observeSetting('focusablebuttons', (newValue) => this.updateButtonFocusability(newValue));\n  }\n\n  teardown(): void {\n    // Remove form-control class only if we added it\n    if (this._formControlAdded) {\n      this.input.classList.remove('form-control');\n      this._formControlAdded = false;\n    }\n\n    // Call parent teardown to handle DOM cleanup\n    super.teardown();\n  }\n\n  buildInputGroup(): HTMLElement {\n    // Check if input is already inside an input-group\n    const existingInputGroup = this.input.closest('.input-group') as HTMLElement | null;\n\n    if (existingInputGroup) {\n      return this.buildAdvancedInputGroup(existingInputGroup);\n    } else {\n      return this.buildBasicInputGroup();\n    }\n  }\n\n  buildBasicInputGroup(): HTMLElement {\n    const inputGroupSize = this._detectInputGroupSize();\n\n    let html;\n    if (this.settings.verticalbuttons) {\n      html = `\n        <div class=\"input-group ${inputGroupSize} bootstrap-touchspin\">\n          ${this.settings.prefix ? `<div class=\"input-group-prepend bootstrap-touchspin-prefix\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>\n            <span class=\"input-group-text ${this.settings.prefix_extraclass || ''}\">${this.settings.prefix}</span>\n          </div>` : ''}\n          ${this.settings.postfix ? `<div class=\"input-group-append bootstrap-touchspin-postfix\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>\n            <span class=\"input-group-text ${this.settings.postfix_extraclass || ''}\">${this.settings.postfix}</span>\n          </div>` : ''}\n          ${this.buildVerticalButtons()}\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"input-group ${inputGroupSize} bootstrap-touchspin\">\n          <div class=\"input-group-prepend\" data-touchspin-injected=\"prepend-wrapper\">\n            <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttondown_class || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.buttondown_txt || '−'}</button>\n            ${this.settings.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix}</span>` : ''}\n          </div>\n          <div class=\"input-group-append\" data-touchspin-injected=\"append-wrapper\">\n            ${this.settings.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix}</span>` : ''}\n            <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttonup_class || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.buttonup_txt || '+'}</button>\n          </div>\n        </div>\n      `;\n    }\n\n    // Create wrapper and wrap the input\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild as HTMLElement | null;\n\n    // Insert wrapper and move input into it\n    if (this.input.parentElement && wrapper) {\n      this.input.parentElement.insertBefore(wrapper, this.input);\n    }\n\n    // Find the position to insert input\n    if (this.settings.verticalbuttons) {\n      // For vertical buttons: prefix -> input -> postfix -> vertical-buttons\n      const prefixWrapper = (wrapper as HTMLElement).querySelector<HTMLElement>('[data-touchspin-injected=\"prefix\"]');\n      const postfixWrapper = (wrapper as HTMLElement).querySelector<HTMLElement>('[data-touchspin-injected=\"postfix\"]');\n\n      if (prefixWrapper) {\n        // Insert after prefix\n        if (wrapper) (wrapper as HTMLElement).insertBefore(this.input, (prefixWrapper as HTMLElement).nextSibling);\n      } else if (postfixWrapper) {\n        // No prefix, insert before postfix\n        if (wrapper) (wrapper as HTMLElement).insertBefore(this.input, postfixWrapper as Node);\n      } else {\n        // No prefix or postfix, insert before vertical wrapper\n        const verticalWrapper = (wrapper as HTMLElement).querySelector<HTMLElement>('[data-touchspin-injected=\"vertical-wrapper\"]');\n        if (wrapper && verticalWrapper) (wrapper as HTMLElement).insertBefore(this.input, verticalWrapper);\n      }\n    } else {\n      // For horizontal buttons: input goes between prepend and append wrappers\n      const appendWrapper = (wrapper as HTMLElement).querySelector<HTMLElement>('[data-touchspin-injected=\"append-wrapper\"]');\n      if (wrapper && appendWrapper) (wrapper as HTMLElement).insertBefore(this.input, appendWrapper);\n    }\n\n    return (wrapper as HTMLElement);\n  }\n\n  buildAdvancedInputGroup(existingInputGroup: HTMLElement): HTMLElement {\n    // Add bootstrap-touchspin class to existing input-group\n    existingInputGroup.classList.add('bootstrap-touchspin');\n\n    // Mark this as an advanced wrapper\n    this.wrapperType = 'wrapper-advanced';\n\n    // Create elements based on vertical or horizontal layout\n    let elementsHtml;\n    if (this.settings.verticalbuttons) {\n      elementsHtml = `\n        ${this.settings.prefix ? `<div class=\"input-group-prepend bootstrap-touchspin-prefix\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>\n          <span class=\"input-group-text ${this.settings.prefix_extraclass || ''}\">${this.settings.prefix}</span>\n        </div>` : ''}\n        ${this.settings.postfix ? `<div class=\"input-group-append bootstrap-touchspin-postfix\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>\n          <span class=\"input-group-text ${this.settings.postfix_extraclass || ''}\">${this.settings.postfix}</span>\n        </div>` : ''}\n        ${this.buildVerticalButtons()}\n      `;\n    } else {\n      elementsHtml = `\n        <div class=\"input-group-prepend\" data-touchspin-injected=\"prepend-wrapper\">\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttondown_class || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\">${this.settings.buttondown_txt || '-'}</button>\n          ${this.settings.prefix ? `<span class=\"input-group-text bootstrap-touchspin-prefix ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix}</span>` : ''}\n        </div>\n        <div class=\"input-group-append\" data-touchspin-injected=\"append-wrapper\">\n          ${this.settings.postfix ? `<span class=\"input-group-text bootstrap-touchspin-postfix ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix}</span>` : ''}\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttonup_class || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\">${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = elementsHtml;\n\n    // Declare element references at function scope\n    let prefixEl: HTMLElement | null;\n    let postfixEl: HTMLElement | null;\n\n    // Ensure input is properly positioned in the group before using it as reference\n    this.ensureInputInGroup(existingInputGroup);\n\n    if (this.settings.verticalbuttons) {\n      // For vertical buttons: prefix -> input -> postfix -> vertical-buttons\n      prefixEl = tempDiv.querySelector<HTMLElement>('[data-touchspin-injected=\"prefix\"]');\n      if (prefixEl) {\n        existingInputGroup.insertBefore(prefixEl, this.input);\n      }\n\n      postfixEl = tempDiv.querySelector<HTMLElement>('[data-touchspin-injected=\"postfix\"]');\n      if (postfixEl) {\n        existingInputGroup.insertBefore(postfixEl, this.input.nextSibling);\n      }\n\n      const verticalButtonWrapper = tempDiv.querySelector<HTMLElement>('[data-touchspin-injected=\"vertical-wrapper\"]');\n      if (verticalButtonWrapper) {\n        existingInputGroup.insertBefore(verticalButtonWrapper, postfixEl ? postfixEl.nextSibling : this.input.nextSibling);\n      }\n    } else {\n      // For horizontal buttons: prepend wrapper -> input -> append wrapper\n      const prependWrapper = tempDiv.querySelector<HTMLElement>('[data-touchspin-injected=\"prepend-wrapper\"]');\n      if (prependWrapper) {\n        existingInputGroup.insertBefore(prependWrapper, this.input);\n      }\n\n      const appendWrapper = tempDiv.querySelector<HTMLElement>('[data-touchspin-injected=\"append-wrapper\"]');\n      if (appendWrapper) {\n        existingInputGroup.insertBefore(appendWrapper, this.input.nextSibling);\n      }\n\n      // Store references to prefix/postfix elements within their wrappers\n      prefixEl = prependWrapper ? prependWrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"prefix\"]') : null;\n      postfixEl = appendWrapper ? appendWrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"postfix\"]') : null;\n    }\n\n    // Store internal references for advanced mode too\n    this.prefixEl = prefixEl;\n    this.postfixEl = postfixEl;\n\n    return existingInputGroup;\n  }\n\n  _detectInputGroupSize(): string {\n    const classList = this.input.className;\n    if (classList.includes('form-control-sm')) {\n      return 'input-group-sm';\n    } else if (classList.includes('form-control-lg')) {\n      return 'input-group-lg';\n    }\n    return '';\n  }\n\n  buildAndAttachDOM(): void {\n    // 1. Build and inject DOM structure around input\n    this.wrapper = this.buildInputGroup();\n\n    // 2. Find created buttons and store prefix/postfix references\n    if (!this.wrapper) return;\n    const upButton = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"up\"]');\n    const downButton = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"prefix\"]');\n    this.postfixEl = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"postfix\"]');\n\n    // 3. Tell core to attach its event handlers\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n  }\n\n  /**\n   * Ensures input element is properly positioned within the input group before using it as reference\n   * Fixes DOM insertion bug when input loses parent-child relationship during rebuilds\n   */\n  private ensureInputInGroup(existingInputGroup: HTMLElement): void {\n    // Check if input is already a direct child of the group\n    if (this.input.parentElement === existingInputGroup) {\n      return;\n    }\n    // If input is not in the group, append it (it may have been moved during DOM manipulations)\n    existingInputGroup.appendChild(this.input);\n  }\n\n  updatePrefix(value: string | null | undefined): void {\n    // Use internal reference\n    const prefixEl = this.prefixEl;\n\n    if (value && value !== '') {\n      if (prefixEl) {\n        // prefixEl is now the span element itself\n        prefixEl.textContent = value;\n        prefixEl.style.display = '';\n        // Update classes in case prefix_extraclass changed\n        prefixEl.className = `input-group-text bootstrap-touchspin-prefix ${this.settings.prefix_extraclass || ''}`.trim();\n      } else {\n        // Element doesn't exist, need to rebuild DOM\n        this.rebuildDOM();\n      }\n    } else if (prefixEl) {\n      // Remove element if value is empty\n      this.rebuildDOM();\n    }\n  }\n\n  updatePostfix(value: string | null | undefined): void {\n    // Use internal reference\n    const postfixEl = this.postfixEl;\n\n    if (value && value !== '') {\n      if (postfixEl) {\n        // postfixEl is now the span element itself\n        postfixEl.textContent = value;\n        postfixEl.style.display = '';\n        // Update classes in case postfix_extraclass changed\n        postfixEl.className = `input-group-text bootstrap-touchspin-postfix ${this.settings.postfix_extraclass || ''}`.trim();\n      } else {\n        // Element doesn't exist, need to rebuild DOM\n        this.rebuildDOM();\n      }\n    } else if (postfixEl) {\n      // Remove element if value is empty\n      this.rebuildDOM();\n    }\n  }\n\n  updateButtonClass(type: 'up' | 'down', className?: string | null): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector<HTMLElement>(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.className = `${className || 'btn btn-outline-secondary'} bootstrap-touchspin-${type}`;\n    }\n  }\n\n  buildVerticalButtons(): string {\n    // Bootstrap 4: Return complete structure with input-group-text wrapper (matches original)\n    return `\n      <span class=\"input-group-text bootstrap-touchspin-vertical-button-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n        <span class=\"input-group-btn-vertical\">\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttonup_class || 'btn btn-outline-secondary'} ${this.settings.verticalupclass || 'btn btn-outline-secondary'} bootstrap-touchspin-up\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.verticalup || '+'}</button>\n          <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"${this.settings.buttondown_class || 'btn btn-outline-secondary'} ${this.settings.verticaldownclass || 'btn btn-outline-secondary'} bootstrap-touchspin-down\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.verticaldown || '−'}</button>\n        </span>\n      </span>\n    `;\n  }\n\n  updateVerticalButtonClass(type: 'up' | 'down', className?: string | null): void {\n    if (!this.wrapper) return;\n    const verticalWrapper = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector<HTMLElement>(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        // Update the vertical-specific class while preserving base classes\n        const baseClasses = this.settings.buttonup_class || this.settings.buttondown_class || 'btn btn-outline-secondary';\n        button.className = `${baseClasses} ${className || 'btn btn-outline-secondary'} bootstrap-touchspin-${type}`;\n      }\n    }\n  }\n\n  updateVerticalButtonText(type: 'up' | 'down', text?: string | null): void {\n    if (!this.wrapper) return;\n    const verticalWrapper = this.wrapper.querySelector<HTMLElement>('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (verticalWrapper) {\n      const button = verticalWrapper.querySelector<HTMLElement>(`[data-touchspin-injected=\"${type}\"]`);\n      if (button) {\n        button.textContent = text || (type === 'up' ? '+' : '−');\n      }\n    }\n  }\n\n  updateButtonText(type: 'up' | 'down', text?: string | null): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector<HTMLElement>(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.textContent = text || (type === 'up' ? '+' : '−');\n    }\n  }\n\n  updatePrefixClasses(): void {\n    const prefixEl = this.prefixEl;\n    if (prefixEl) {\n      // prefixEl is now the span element itself\n      prefixEl.className = `input-group-text bootstrap-touchspin-prefix ${this.settings.prefix_extraclass || ''}`.trim();\n    }\n  }\n\n  updatePostfixClasses(): void {\n    const postfixEl = this.postfixEl;\n    if (postfixEl) {\n      // postfixEl is now the span element itself\n      postfixEl.className = `input-group-text bootstrap-touchspin-postfix ${this.settings.postfix_extraclass || ''}`.trim();\n    }\n  }\n\n  handleVerticalButtonsChange(newValue: boolean): void {\n    // Remove old DOM and rebuild with new layout\n    this.rebuildDOM();\n  }\n\n  rebuildDOM(): void {\n    // Remove old DOM and rebuild with current settings\n    this.removeInjectedElements();\n    // Reset wrapper reference since it was removed\n    this.wrapper = null;\n    this.prefixEl = null;\n    this.postfixEl = null;\n    this.buildAndAttachDOM();\n\n    if (this.wrapper) {\n      this.finalizeWrapperAttributes();\n    }\n  }\n\n  updateButtonFocusability(newValue: boolean): void {\n    // Find all buttons and update their tabindex\n    if (!this.wrapper) return;\n    const buttons = this.wrapper.querySelectorAll<HTMLElement>('[data-touchspin-injected=\"up\"], [data-touchspin-injected=\"down\"]');\n    const tabindex = newValue ? '0' : '-1';\n    buttons.forEach(button => {\n      button.setAttribute('tabindex', tabindex);\n    });\n  }\n}\n\nexport default Bootstrap4Renderer;\n"]}