{"version":3,"sources":["../src/VanillaRenderer.ts"],"sourcesContent":["/**\n * VanillaRenderer - Vanilla CSS-based TouchSpin renderer\n * Framework-agnostic renderer using pure CSS without dependencies\n */\nimport { AbstractRenderer } from '@touchspin/core/renderer';\n\nclass VanillaRenderer extends AbstractRenderer {\n  private prefixEl: HTMLElement | null = null;\n  private postfixEl: HTMLElement | null = null;\n\n  init(): void {\n    // Initialize internal element references\n    this.prefixEl = null;\n    this.postfixEl = null;\n\n    // Build and inject DOM structure\n    this.wrapper = this.buildInputGroup();\n    const wrapper = this.wrapper;\n    if (!wrapper) return;\n\n    // Find created elements and store references\n    const upButtonEl = wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButtonEl = wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]') as HTMLElement | null;\n    this.postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]') as HTMLElement | null;\n\n    // Attach core event handlers to buttons\n    const upButton = upButtonEl instanceof HTMLElement ? upButtonEl : null;\n    const downButton = downButtonEl instanceof HTMLElement ? downButtonEl : null;\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n\n    // Register for setting changes\n    this.core.observeSetting('prefix', (newValue) => this.updatePrefix(newValue));\n    this.core.observeSetting('postfix', (newValue) => this.updatePostfix(newValue));\n    this.core.observeSetting('buttonup_class', (newValue) => this.updateButtonClass('up', newValue));\n    this.core.observeSetting('buttondown_class', (newValue) => this.updateButtonClass('down', newValue));\n    this.core.observeSetting('verticalupclass', (newValue) => this.updateVerticalButtonClass('up', newValue));\n    this.core.observeSetting('verticaldownclass', (newValue) => this.updateVerticalButtonClass('down', newValue));\n    this.core.observeSetting('verticalup', (newValue) => this.updateVerticalButtonText('up', newValue));\n    this.core.observeSetting('verticaldown', (newValue) => this.updateVerticalButtonText('down', newValue));\n    this.core.observeSetting('buttonup_txt', (newValue) => this.updateButtonText('up', newValue));\n    this.core.observeSetting('buttondown_txt', (newValue) => this.updateButtonText('down', newValue));\n    this.core.observeSetting('prefix_extraclass', (newValue) => this.updatePrefixClasses());\n    this.core.observeSetting('postfix_extraclass', (newValue) => this.updatePostfixClasses());\n    this.core.observeSetting('verticalbuttons', (newValue) => this.handleVerticalButtonsChange(newValue));\n    this.core.observeSetting('focusablebuttons', (newValue) => this.updateButtonFocusability(newValue));\n  }\n\n  buildInputGroup(): HTMLElement {\n    const isVertical = this.settings.verticalbuttons;\n\n    let html;\n    if (isVertical) {\n      html = `\n        <div class=\"ts-wrapper ts-wrapper--vertical\" data-touchspin-injected=\"wrapper\">\n          <span class=\"ts-addon ts-prefix ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n          <span class=\"ts-addon ts-postfix ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n          ${this.buildVerticalButtons()}\n        </div>\n      `;\n    } else {\n      html = `\n        <div class=\"ts-wrapper\" data-touchspin-injected=\"wrapper\">\n          <button \n            tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" \n            class=\"ts-btn ts-btn--down ${this.settings.buttondown_class || ''}\" \n            data-touchspin-injected=\"down\"${this.getDownButtonTestId()} \n            type=\"button\" \n            aria-label=\"Decrease value\"\n            ${this.input.disabled ? 'disabled' : ''}\n          >${this.settings.buttondown_txt || '−'}</button>\n          <span class=\"ts-addon ts-prefix ${this.settings.prefix_extraclass || ''}\" data-touchspin-injected=\"prefix\"${this.getPrefixTestId()}>${this.settings.prefix || ''}</span>\n          <span class=\"ts-addon ts-postfix ${this.settings.postfix_extraclass || ''}\" data-touchspin-injected=\"postfix\"${this.getPostfixTestId()}>${this.settings.postfix || ''}</span>\n          <button \n            tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" \n            class=\"ts-btn ts-btn--up ${this.settings.buttonup_class || ''}\" \n            data-touchspin-injected=\"up\"${this.getUpButtonTestId()} \n            type=\"button\" \n            aria-label=\"Increase value\"\n            ${this.input.disabled ? 'disabled' : ''}\n          >${this.settings.buttonup_txt || '+'}</button>\n        </div>\n      `;\n    }\n\n    // Create wrapper element\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html.trim();\n    const wrapper = tempDiv.firstChild as HTMLElement;\n\n    // Insert wrapper and move input into it\n    const parent = this.input.parentElement;\n    if (parent) {\n      parent.insertBefore(wrapper, this.input);\n    }\n\n    // Position input correctly - after prefix, before postfix\n    const postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]');\n    if (postfixEl) {\n      wrapper.insertBefore(this.input, postfixEl);\n    } else {\n      // Fallback if no postfix - before up button\n      const upButton = wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n      wrapper.insertBefore(this.input, upButton);\n    }\n\n    // Add input styling class\n    this.input.classList.add('ts-input');\n\n    // Hide empty prefix/postfix elements\n    this.hideEmptyPrefixPostfix(wrapper);\n\n    return wrapper;\n  }\n\n  buildVerticalButtons(): string {\n    return `\n      <div class=\"ts-vertical-wrapper\" data-touchspin-injected=\"vertical-wrapper\">\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"ts-btn ts-btn--vertical ts-btn--vertical-up ${this.settings.verticalupclass || ''}\" data-touchspin-injected=\"up\"${this.getUpButtonTestId()} type=\"button\" aria-label=\"Increase value\">${this.settings.verticalup || '+'}</button>\n        <button tabindex=\"${this.settings.focusablebuttons ? '0' : '-1'}\" class=\"ts-btn ts-btn--vertical ts-btn--vertical-down ${this.settings.verticaldownclass || ''}\" data-touchspin-injected=\"down\"${this.getDownButtonTestId()} type=\"button\" aria-label=\"Decrease value\">${this.settings.verticaldown || '−'}</button>\n      </div>\n    `;\n  }\n\n\n  hideEmptyPrefixPostfix(wrapper: HTMLElement | null = this.wrapper) {\n    const prefixEl = this.prefixEl || wrapper?.querySelector('[data-touchspin-injected=\"prefix\"]');\n    const postfixEl = this.postfixEl || wrapper?.querySelector('[data-touchspin-injected=\"postfix\"]');\n\n    if (prefixEl && (!this.settings.prefix || this.settings.prefix === '')) {\n      prefixEl.style.display = 'none';\n    }\n    if (postfixEl && (!this.settings.postfix || this.settings.postfix === '')) {\n      postfixEl.style.display = 'none';\n    }\n  }\n\n  updatePrefix(value: string): void {\n    const prefixEl = this.prefixEl;\n    if (!prefixEl) return;\n\n    if (value && value !== '') {\n      prefixEl.textContent = value;\n      prefixEl.style.display = '';\n      prefixEl.className = `ts-addon ts-prefix ${this.settings.prefix_extraclass || ''}`.trim();\n    } else {\n      prefixEl.style.display = 'none';\n    }\n  }\n\n  updatePostfix(value: string): void {\n    const postfixEl = this.postfixEl;\n    if (!postfixEl) return;\n\n    if (value && value !== '') {\n      postfixEl.textContent = value;\n      postfixEl.style.display = '';\n      postfixEl.className = `ts-addon ts-postfix ${this.settings.postfix_extraclass || ''}`.trim();\n    } else {\n      postfixEl.style.display = 'none';\n    }\n  }\n\n  updateButtonClass(type: 'up' | 'down', className: string | null | undefined): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (!button) return;\n\n    // Preserve base classes and add custom class\n    const baseClasses = `ts-btn ts-btn--${type}`;\n    const verticalClass = button.classList.contains('ts-btn--vertical') ? ' ts-btn--vertical' : '';\n    button.className = `${baseClasses}${verticalClass} ${className || ''}`.trim();\n  }\n\n  updateVerticalButtonClass(type: 'up' | 'down', className: string | null | undefined): void {\n    if (!this.wrapper) return;\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (!verticalWrapper) return;\n\n    const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (!button) return;\n\n    // Update vertical-specific class while preserving base classes\n    const baseClasses = `ts-btn ts-btn--${type} ts-btn--vertical`;\n    const buttonClass = this.settings.buttonup_class || this.settings.buttondown_class || '';\n    button.className = `${baseClasses} ${buttonClass} ${className || ''}`.trim();\n  }\n\n  updateVerticalButtonText(type: 'up' | 'down', text?: string): void {\n    if (!this.wrapper) return;\n    const verticalWrapper = this.wrapper.querySelector('[data-touchspin-injected=\"vertical-wrapper\"]');\n    if (!verticalWrapper) return;\n\n    const button = verticalWrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.textContent = text || (type === 'up' ? '+' : '−');\n    }\n  }\n\n  updateButtonText(type: 'up' | 'down', text?: string): void {\n    if (!this.wrapper) return;\n    const button = this.wrapper.querySelector(`[data-touchspin-injected=\"${type}\"]`);\n    if (button) {\n      button.textContent = text || (type === 'up' ? '+' : '−');\n    }\n  }\n\n  updatePrefixClasses(): void {\n    const prefixEl = this.prefixEl;\n    if (prefixEl) {\n      prefixEl.className = `ts-addon ts-prefix ${this.settings.prefix_extraclass || ''}`.trim();\n    }\n  }\n\n  updatePostfixClasses(): void {\n    const postfixEl = this.postfixEl;\n    if (postfixEl) {\n      postfixEl.className = `ts-addon ts-postfix ${this.settings.postfix_extraclass || ''}`.trim();\n    }\n  }\n\n  handleVerticalButtonsChange(_newValue: boolean): void {\n    // Remove old DOM and rebuild with new layout\n    this.rebuildDOM();\n  }\n\n  rebuildDOM(): void {\n    // Remove old DOM and rebuild with current settings\n    this.removeInjectedElements();\n    // Reset wrapper reference since it was removed\n    this.wrapper = null;\n    this.prefixEl = null;\n    this.postfixEl = null;\n    this.buildAndAttachDOM();\n\n    if (this.wrapper) {\n      this.finalizeWrapperAttributes();\n    }\n  }\n\n  buildAndAttachDOM(): void {\n    // Build and inject DOM structure\n    this.wrapper = this.buildInputGroup();\n    const wrapper = this.wrapper;\n    if (!wrapper) return;\n\n    // Find created elements and store references\n    const upButtonEl = wrapper.querySelector('[data-touchspin-injected=\"up\"]');\n    const downButtonEl = wrapper.querySelector('[data-touchspin-injected=\"down\"]');\n    this.prefixEl = wrapper.querySelector('[data-touchspin-injected=\"prefix\"]') as HTMLElement | null;\n    this.postfixEl = wrapper.querySelector('[data-touchspin-injected=\"postfix\"]') as HTMLElement | null;\n\n    // Attach core event handlers to buttons\n    const upButton = upButtonEl instanceof HTMLElement ? upButtonEl : null;\n    const downButton = downButtonEl instanceof HTMLElement ? downButtonEl : null;\n    this.core.attachUpEvents(upButton);\n    this.core.attachDownEvents(downButton);\n  }\n\n  updateButtonFocusability(newValue: boolean): void {\n    // Find all buttons and update their tabindex\n    if (!this.wrapper) return;\n    const buttons = this.wrapper.querySelectorAll('[data-touchspin-injected=\"up\"], [data-touchspin-injected=\"down\"]');\n    const tabindex = newValue ? '0' : '-1';\n    buttons.forEach(button => {\n      button.setAttribute('tabindex', tabindex);\n    });\n  }\n\n  /**\n   * Apply theme via CSS custom properties\n   * @param {Object} theme - Theme object with CSS property values\n   */\n  // Accept any record of CSS custom property values (read-only for clarity)\n  setTheme(theme: Readonly<Record<string, string>>): void {\n    const wrapper = this.wrapper;\n    if (!wrapper || !theme) return;\n\n    Object.entries(theme).forEach(([key, value]) => {\n      const cssProperty = key.startsWith('--') ? key : `--ts-${key}`;\n      wrapper.style.setProperty(cssProperty, value);\n    });\n  }\n\n  teardown() {\n    // Remove added classes from input\n    this.input.classList.remove('ts-input');\n\n    // Call parent teardown to handle DOM cleanup\n    super.teardown();\n  }\n}\n\nexport default VanillaRenderer;\n"],"mappings":"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","names":[]}