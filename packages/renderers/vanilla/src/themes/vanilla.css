/**
 * TouchSpin Vanilla Renderer - CSS Variables Theme
 * Clean vanilla theme with descriptive CSS custom properties for theming
 */

:root {
  /* Wrapper Styles */
  --ts-wrapper-background-color: #ffffff;
  --ts-wrapper-border-color: #d1d5db;
  --ts-wrapper-border-width: 1px;
  --ts-wrapper-border-radius: 0.375rem;
  --ts-wrapper-box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);

  /* Focus States */
  --ts-wrapper-focus-border-color: #3b82f6;
  --ts-wrapper-focus-box-shadow: 0 0 0 2px rgb(59 130 246 / 0.2), 0 1px 2px 0 rgb(0 0 0 / 0.05);

  /* Disabled States */
  --ts-wrapper-disabled-background-color: #f9fafb;
  --ts-wrapper-disabled-opacity: 0.6;

  /* Readonly States */
  --ts-wrapper-readonly-background-color: #f9fafb;

  /* Input Styles */
  --ts-input-text-color: #111827;
  --ts-input-placeholder-color: #6b7280;
  --ts-input-font-size: 1rem;
  --ts-input-padding: 0.5rem 0.75rem;

  /* Button Styles */
  --ts-button-background-color: #f3f4f6;
  --ts-button-background-color-hover: #e5e7eb;
  --ts-button-background-color-active: #d1d5db;
  --ts-button-text-color: #374151;
  --ts-button-font-weight: 500;
  --ts-button-padding: 0.5rem 0.75rem;
  --ts-button-disabled-opacity: 0.5;
  --ts-button-border-width: 1px;
  --ts-button-border-color: #d1d5db;

  /* Button Border Radius (Shorthand Format) */
  --ts-button-down-border-radius: 0;
  --ts-button-up-border-radius: 0;

  /* Button Min Width (for square buttons) */
  --ts-button-min-width: 2rem;

  /* Addon (Prefix/Postfix) Styles */
  --ts-addon-background-color: #f9fafb;
  --ts-addon-text-color: #6b7280;
  --ts-addon-padding: 0.5rem 0.75rem;

  /* Vertical Button Styles */
  --ts-vertical-button-background-color: #f3f4f6;
  --ts-vertical-button-background-color-hover: #e5e7eb;
  --ts-vertical-button-text-color: #374151;
  --ts-vertical-button-border-color: #d1d5db;
  --ts-vertical-button-border-width: 1px;
  --ts-vertical-button-padding: 0.25rem 0.5rem;
  --ts-vertical-button-font-size: 0.75rem;
  --ts-vertical-button-font-weight: 500;
  --ts-vertical-button-disabled-opacity: 0.5;

  /* Vertical Button Border Radius (Shorthand Format) */
  --ts-vertical-button-up-border-radius: 0;
  --ts-vertical-button-down-border-radius: 0;

  /* Vertical Button Min Width (for square buttons) */
  --ts-vertical-button-min-width: 1.5rem;
}

/* Main wrapper - uses CSS variables */
.ts-wrapper {
  display: flex;
  align-items: stretch;
  border-radius: var(--ts-wrapper-border-radius);
  box-shadow: var(--ts-wrapper-box-shadow);
  border: var(--ts-wrapper-border-width) solid var(--ts-wrapper-border-color);
  background-color: var(--ts-wrapper-background-color);
  overflow: hidden;
}

/* Focus state for entire wrapper */
.ts-wrapper:focus-within {
  border-color: var(--ts-wrapper-focus-border-color);
  box-shadow: var(--ts-wrapper-focus-box-shadow);
}

/* Disabled state using :has() selector */
.ts-wrapper:has(input:disabled) {
  opacity: var(--ts-wrapper-disabled-opacity);
  background-color: var(--ts-wrapper-disabled-background-color);
}

/* Read-only state */
.ts-wrapper:has(input:read-only) {
  background-color: var(--ts-wrapper-readonly-background-color);
}

/* Input styling */
.ts-input {
  flex: 1 1 auto;
  padding: var(--ts-input-padding);
  border: 0;
  background: transparent;
  outline: none;
  color: var(--ts-input-text-color);
  font-size: var(--ts-input-font-size);
}

.ts-input::placeholder {
  color: var(--ts-input-placeholder-color);
}

/* Button base styling */
.ts-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--ts-button-padding);
  background-color: var(--ts-button-background-color);
  color: var(--ts-button-text-color);
  font-weight: var(--ts-button-font-weight);
  border: var(--ts-button-border-width) solid var(--ts-button-border-color);
  cursor: pointer;
  user-select: none;
  min-width: var(--ts-button-min-width);
}

.ts-btn:hover:not(:disabled) {
  background-color: var(--ts-button-background-color-hover);
}

.ts-btn:active:not(:disabled) {
  background-color: var(--ts-button-background-color-active);
}

.ts-btn:disabled {
  opacity: var(--ts-button-disabled-opacity);
  cursor: not-allowed;
}

.ts-btn:disabled:hover {
  background-color: var(--ts-button-background-color);
}

/* Button positioning - using shorthand border-radius */
.ts-btn--down {
  border-radius: var(--ts-button-down-border-radius);
  border-left: 0; /* Remove border touching input */
}

.ts-btn--up {
  border-radius: var(--ts-button-up-border-radius);
  border-right: 0; /* Remove border touching down button or input */
}

/* RTL support - flip button border radius and borders for right-to-left languages */
:dir(rtl) .ts-btn--down {
  border-radius: var(--ts-button-up-border-radius);
  border-left: var(--ts-button-border-width) solid var(--ts-button-border-color);
  border-right: 0;
}

:dir(rtl) .ts-btn--up {
  border-radius: var(--ts-button-down-border-radius);
  border-right: var(--ts-button-border-width) solid var(--ts-button-border-color);
  border-left: 0;
}

/* Addon styling */
.ts-addon {
  display: inline-flex;
  align-items: center;
  padding: var(--ts-addon-padding);
  background-color: var(--ts-addon-background-color);
  color: var(--ts-addon-text-color);
  border: 0;
}

/* Vertical layout - prefix gets left border radius */
.ts-wrapper--vertical .ts-prefix {
  border-top-left-radius: var(--ts-wrapper-border-radius);
  border-bottom-left-radius: var(--ts-wrapper-border-radius);
}

/* RTL support for vertical layout - prefix gets right border radius */
:dir(rtl) .ts-wrapper--vertical .ts-prefix {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: var(--ts-wrapper-border-radius);
  border-bottom-right-radius: var(--ts-wrapper-border-radius);
}

/* Vertical layout */
.ts-wrapper--vertical {
  position: relative;
}

.ts-vertical-wrapper {
  display: flex;
  flex-direction: column;
}

/* Vertical buttons */
.ts-btn--vertical {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--ts-vertical-button-padding);
  font-size: var(--ts-vertical-button-font-size);
  background-color: var(--ts-vertical-button-background-color);
  color: var(--ts-vertical-button-text-color);
  font-weight: var(--ts-vertical-button-font-weight);
  border: var(--ts-vertical-button-border-width) solid var(--ts-vertical-button-border-color);
  cursor: pointer;
  user-select: none;
  min-width: var(--ts-vertical-button-min-width);
}

.ts-btn--vertical:hover:not(:disabled) {
  background-color: var(--ts-vertical-button-background-color-hover);
}

.ts-btn--vertical:disabled {
  opacity: var(--ts-vertical-button-disabled-opacity);
  cursor: not-allowed;
}

/* Vertical button positioning - using shorthand border-radius */
.ts-btn--vertical-up {
  border-radius: var(--ts-vertical-button-up-border-radius);
  border-top: 0;
  border-right: 0;
}

.ts-btn--vertical-down {
  border-radius: var(--ts-vertical-button-down-border-radius);
  border-top: 0;
  border-right: 0;
  border-bottom: 0;
}

/* RTL support for vertical buttons */
:dir(rtl) .ts-btn--vertical-up {
  border-right: var(--ts-vertical-button-border-width) solid var(--ts-vertical-button-border-color);
  border-left: 0;
}

:dir(rtl) .ts-btn--vertical-down {
  border-right: var(--ts-vertical-button-border-width) solid var(--ts-vertical-button-border-color);
  border-left: 0;
}
